form:
  alert:
    additionalRuleLabels: {}
    annotations: {}
    enabled: warning
    groups:
      database:
        enabled: warning
        rules:
          mongoDBDown:
            duration: 30s
            enabled: true
            severity: critical
          mongoDBPhaseCritical:
            duration: 3m
            enabled: true
            severity: warning
          mssqlserverCursorsTimeouts:
            duration: 2m
            enabled: true
            severity: warning
            val: 100
          mssqlserverHighLatency:
            duration: 10m
            enabled: true
            severity: warning
            val: 250000
          mssqlserverHighTicketUtilization:
            duration: 10m
            enabled: true
            severity: warning
            val: 75
          mssqlserverNumberCursorsOpen:
            duration: 2m
            enabled: true
            severity: warning
            val: 10000
          mssqlserverRecurrentCursorTimeout:
            duration: 30m
            enabled: true
            severity: warning
            val: 0
          mssqlserverRecurrentMemoryPageFaults:
            duration: 30m
            enabled: true
            severity: warning
            val: 0
          mssqlserverReplicationLag:
            duration: 0m
            enabled: true
            severity: critical
            val: 10
          mssqlserverTooManyConnections:
            duration: 2m
            enabled: true
            severity: warning
            val: 80
          mssqlserverVirtualMemoryUsage:
            duration: 1m
            enabled: true
            severity: warning
            val: 2.097152e+06
      opsManager:
        enabled: warning
        rules:
          opsRequestFailed:
            duration: 0m
            enabled: true
            severity: critical
          opsRequestOnProgress:
            duration: 0m
            enabled: true
            severity: info
          opsRequestStatusProgressingToLong:
            duration: 30m
            enabled: true
            severity: critical
      provisioner:
        enabled: warning
        rules:
          appPhaseCritical:
            duration: 15m
            enabled: true
            severity: warning
          appPhaseNotReady:
            duration: 1m
            enabled: true
            severity: critical
      schemaManager:
        enabled: warning
        rules:
          schemaExpired:
            duration: 0m
            enabled: true
            severity: warning
          schemaFailed:
            duration: 0m
            enabled: true
            severity: warning
          schemaInProgressForTooLong:
            duration: 30m
            enabled: true
            severity: warning
          schemaPendingForTooLong:
            duration: 30m
            enabled: true
            severity: warning
          schemaTerminatingForTooLong:
            duration: 30m
            enabled: true
            severity: warning
      stash:
        enabled: warning
        rules:
          backupSessionFailed:
            duration: 0m
            enabled: true
            severity: critical
          backupSessionPeriodTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 1800
          noBackupSessionForTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 18000
          repositoryCorrupted:
            duration: 5m
            enabled: true
            severity: critical
          repositoryStorageRunningLow:
            duration: 5m
            enabled: true
            severity: warning
            val: 1.073741824e+10
          restoreSessionFailed:
            duration: 0m
            enabled: true
            severity: critical
          restoreSessionPeriodTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 1800
    labels:
      release: kube-prometheus-stack
metadata:
  resource:
    group: kubedb.com
    version: v1alpha2
    name: mssqlservers
    kind: MSSQLServer
    scope: Namespaced
  release:
    name: RELEASE-NAME
    namespace: default
resources:
  autoscalingKubedbComMSSQLServerAutoscaler: # +doc-gen:break
    apiVersion: autoscaling.kubedb.com/v1alpha1
    kind: MSSQLServerAutoscaler
    metadata:
      name: sqlserver-ag
      namespace: demo
    spec:
      compute:
        mssqlserver:
          maxAllowed:
            cpu: 1
            memory: 2Gi
          minAllowed:
            cpu: 400m
            memory: 400Mi
          podLifeTimeThreshold: 10m
          resourceDiffPercentage: 20
          trigger: "On"
        nodeTopology:
          name: standard-basv2-family
      databaseRef:
        name: repl
      opsRequestOptions:
        apply: IfReady
        timeout: 10m
  catalogAppscodeComMSSQLServerBinding: # +doc-gen:break
    apiVersion: catalog.appscode.com/v1alpha1
    kind: MSSQLServerBinding
    metadata:
      name: sqlserver-ag
      namespace: demo
    spec:
      sourceRef:
        name: sqlserver-ag
        namespace: demo
  certManagerIoIssuer_ca: # +doc-gen:break
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      name: sqlserver-ag-ca
      namespace: sample
    spec:
      ca:
        secretName: mssqlserver-ca
  coreKubestashComBackupBlueprint: # +doc-gen:break
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupBlueprint
    metadata:
      name: sqlserver-ag
      namespace: demo
    spec:
      backupConfigurationTemplate:
        backends:
          - name: sqlserver-ag-backend
            retentionPolicy:
              name: sqlserver-ag-retention-policy
              namespace: demo
            storageRef:
              name: sqlserver-ag-storage
              namespace: demo
        sessions:
          - addon:
              jobTemplate:
                spec:
                  securityContext:
                    runAsGroup: 0
                    runAsUser: 0
              name: mssqlserver-addon
              tasks:
                - name: logical-backup
            name: sqlserver-ag-frequent-backup
            repositories:
              - backend: sqlserver-ag-backend
                directory: /sqlserver-ag-repo
                encryptionSecret:
                  name: sqlserver-ag-encryption-secret
                  namespace: demo
                name: sqlserver-ag-repo
            scheduler:
              jobTemplate:
                backoffLimit: 1
              schedule: '*/5 * * * *'
            sessionHistoryLimit: 2
      usagePolicy:
        allowedNamespaces:
          from: Same
  coreKubestashComBackupConfiguration: # +doc-gen:break
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupConfiguration
    metadata:
      name: sqlserver-ag
      namespace: demo
    spec:
      backends:
        - name: sqlserver-ag-backend
          retentionPolicy:
            name: sqlserver-ag-retention-policy
            namespace: demo
          storageRef:
            name: sqlserver-ag-storage
            namespace: demo
      sessions:
        - addon:
            jobTemplate:
              spec:
                securityContext:
                  runAsGroup: 0
                  runAsUser: 0
            name: mssqlserver-addon
            tasks:
              - name: logical-backup
          name: sqlserver-ag-frequent-backup
          repositories:
            - backend: sqlserver-ag-backend
              directory: /sqlserver-ag-repo
              encryptionSecret:
                name: sqlserver-ag-encryption-secret
                namespace: demo
              name: sqlserver-ag-repo
          scheduler:
            jobTemplate:
              backoffLimit: 1
            schedule: '*/5 * * * *'
          sessionHistoryLimit: 2
      target:
        apiGroup: kubedb.com
        kind: MSSQLServer
        name: sqlserver-ag
        namespace: demo
  coreKubestashComRestoreSession: # +doc-gen:break
    apiVersion: core.kubestash.com/v1alpha1
    kind: RestoreSession
    metadata:
      name: sqlserver-ag
      namespace: demo
    spec:
      addon:
        jobTemplate:
          spec:
            securityContext:
              runAsGroup: 0
              runAsUser: 0
        name: mssqlserver-addon
        tasks:
          - name: logical-backup-restore
      dataSource:
        encryptionSecret:
          name: sqlserver-ag-encryption-secret
          namespace: demo
        repository: sqlserver-ag-repo
        snapshot: latest
      target:
        apiGroup: kubedb.com
        kind: MSSQLServer
        name: sqlserver-ag
        namespace: demo
  kubedbComMSSQLServer: # +doc-gen:break
    apiVersion: kubedb.com/v1alpha2
    kind: MSSQLServer
    metadata:
      name: sqlserver-ag
      namespace: sample
    spec:
      deletionPolicy: Delete
      internalAuth:
        endpointCert:
          issuerRef:
            apiGroup: cert-manager.io
            kind: Issuer
            name: sqlserver-ag-ca
      replicas: 3
      storage:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard
      storageType: Durable
      topology:
        availabilityGroup:
          databases:
            - AgDB1
            - AgDB2
        mode: AvailabilityGroup
      version: 2022-cu12
  monitoringCoreosComServiceMonitor: # +doc-gen:break
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: sqlserver-ag
      namespace: demo
    spec:
      endpoints:
        - honorLabels: true
          interval: 30s
          path: /metrics
          port: metrics
      namespaceSelector:
        matchNames:
          - demo
      selector:
        matchLabels:
          app.kubernetes.io/instance: mssqlserver
          app.kubernetes.io/name: mssqlservers.kubedb.com
  secret_auth: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: sqlserver-ag-auth
      namespace: demo
    stringData:
      password: thisIs1StrongPassword
      username: root
    type: Opaque
  secret_config: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: sqlserver-ag-config
      namespace: demo
    stringData:
      mssqlserver.cnf: |
        [mysqld]
        max_connections = 200
        read_buffer_size = 1048576
    type: Opaque
