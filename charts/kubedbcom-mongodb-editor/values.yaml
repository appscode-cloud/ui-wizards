form:
  alert:
    additionalRuleLabels: {}
    annotations: {}
    enabled: warning
    groups:
      database:
        enabled: warning
        rules:
          mongoDBDown:
            duration: 30s
            enabled: true
            severity: critical
          mongoDBPhaseCritical:
            duration: 3m
            enabled: true
            severity: warning
          mongodbCursorsTimeouts:
            duration: 2m
            enabled: true
            severity: warning
            val: 100
          mongodbHighLatency:
            duration: 10m
            enabled: true
            severity: warning
            val: 250000
          mongodbHighTicketUtilization:
            duration: 10m
            enabled: true
            severity: warning
            val: 75
          mongodbNumberCursorsOpen:
            duration: 2m
            enabled: true
            severity: warning
            val: 10000
          mongodbRecurrentCursorTimeout:
            duration: 30m
            enabled: true
            severity: warning
            val: 0
          mongodbRecurrentMemoryPageFaults:
            duration: 30m
            enabled: true
            severity: warning
            val: 0
          mongodbReplicationLag:
            duration: 0m
            enabled: true
            severity: critical
            val: 10
          mongodbTooManyConnections:
            duration: 2m
            enabled: true
            severity: warning
            val: 80
          mongodbVirtualMemoryUsage:
            duration: 1m
            enabled: true
            severity: warning
            val: 2.097152e+06
      opsManager:
        enabled: warning
        rules:
          opsRequestFailed:
            duration: 0m
            enabled: true
            severity: critical
          opsRequestOnProgress:
            duration: 0m
            enabled: true
            severity: info
          opsRequestStatusProgressingToLong:
            duration: 30m
            enabled: true
            severity: critical
      provisioner:
        enabled: warning
        rules:
          appPhaseCritical:
            duration: 15m
            enabled: true
            severity: warning
          appPhaseNotReady:
            duration: 1m
            enabled: true
            severity: critical
      schemaManager:
        enabled: warning
        rules:
          schemaExpired:
            duration: 0m
            enabled: true
            severity: warning
          schemaFailed:
            duration: 0m
            enabled: true
            severity: warning
          schemaInProgressForTooLong:
            duration: 30m
            enabled: true
            severity: warning
          schemaPendingForTooLong:
            duration: 30m
            enabled: true
            severity: warning
          schemaTerminatingForTooLong:
            duration: 30m
            enabled: true
            severity: warning
      stash:
        enabled: warning
        rules:
          backupSessionFailed:
            duration: 0m
            enabled: true
            severity: critical
          backupSessionPeriodTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 1800
          noBackupSessionForTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 18000
          repositoryCorrupted:
            duration: 5m
            enabled: true
            severity: critical
          repositoryStorageRunningLow:
            duration: 5m
            enabled: true
            severity: warning
            val: 1.073741824e+10
          restoreSessionFailed:
            duration: 0m
            enabled: true
            severity: critical
          restoreSessionPeriodTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 1800
    labels:
      release: kube-prometheus-stack
metadata:
  resource:
    group: kubedb.com
    version: v1
    name: mongodbs
    kind: MongoDB
    scope: Namespaced
  release:
    name: RELEASE-NAME
    namespace: default
resources:
  autoscalingKubedbComMongoDBAutoscaler: # +doc-gen:break
    apiVersion: autoscaling.kubedb.com/v1alpha1
    kind: MongoDBAutoscaler
    metadata:
      name: mongodb
      namespace: demo
    spec:
      compute:
        nodeTopology:
          name: standard-basv2-family
        replicaSet:
          maxAllowed:
            cpu: 1
            memory: 2Gi
          minAllowed:
            cpu: 400m
            memory: 400Mi
          podLifeTimeThreshold: 10m
          resourceDiffPercentage: 20
          trigger: "On"
      databaseRef:
        name: repl
      opsRequestOptions:
        apply: IfReady
        timeout: 10m
  catalogAppscodeComMongoDBBinding: # +doc-gen:break
    apiVersion: catalog.appscode.com/v1alpha1
    kind: MongoDBBinding
    metadata:
      name: mongodb
      namespace: demo
    spec:
      sourceRef:
        name: mongodb
        namespace: demo
  certManagerIoIssuer_ca: # +doc-gen:break
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      name: mongodb-ca
      namespace: demo
    spec:
      ca:
        secretName: mongodb-ca
  coreKubestashComBackupBlueprint: # +doc-gen:break
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupBlueprint
    metadata:
      name: mongodb
      namespace: demo
    spec:
      backupConfigurationTemplate:
        backends:
          - name: mongodb-backend
            retentionPolicy:
              name: mongodb-retention-policy
              namespace: demo
            storageRef:
              name: mongodb-storage
              namespace: demo
        sessions:
          - addon:
              jobTemplate:
                spec:
                  securityContext:
                    runAsGroup: 0
                    runAsUser: 0
              name: mongodb-addon
              tasks:
                - name: logical-backup
            name: mongodb-frequent-backup
            repositories:
              - backend: mongodb-backend
                directory: /mongo-repo
                encryptionSecret:
                  name: mongodb-encryption-secret
                  namespace: demo
                name: mongodb-repo
            scheduler:
              jobTemplate:
                backoffLimit: 1
              schedule: '*/5 * * * *'
            sessionHistoryLimit: 2
      usagePolicy:
        allowedNamespaces:
          from: Same
  coreKubestashComBackupConfiguration: # +doc-gen:break
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupConfiguration
    metadata:
      name: mongodb
      namespace: demo
    spec:
      backends:
        - name: mongodb-backend
          retentionPolicy:
            name: mongodb-retention-policy
            namespace: demo
          storageRef:
            name: mongodb-storage
            namespace: demo
      sessions:
        - addon:
            jobTemplate:
              spec:
                securityContext:
                  runAsGroup: 0
                  runAsUser: 0
            name: mongodb-addon
            tasks:
              - name: logical-backup
          name: mongodb-frequent-backup
          repositories:
            - backend: mongodb-backend
              directory: /mongo-repo
              encryptionSecret:
                name: mongodb-encryption-secret
                namespace: demo
              name: mongodb-repo
          scheduler:
            jobTemplate:
              backoffLimit: 1
            schedule: '*/5 * * * *'
          sessionHistoryLimit: 2
      target:
        apiGroup: kubedb.com
        kind: MongoDB
        name: mongodb
        namespace: demo
  coreKubestashComRestoreSession: # +doc-gen:break
    apiVersion: core.kubestash.com/v1alpha1
    kind: RestoreSession
    metadata:
      name: mongodb
      namespace: demo
    spec:
      addon:
        jobTemplate:
          spec:
            securityContext:
              runAsGroup: 0
              runAsUser: 0
        name: mongodb-addon
        tasks:
          - name: logical-backup-restore
      dataSource:
        encryptionSecret:
          name: mongodb-encryption-secret
          namespace: demo
        repository: mongodb-repo
        snapshot: latest
      target:
        apiGroup: kubedb.com
        kind: MongoDB
        name: mongodb
        namespace: demo
  kubedbComMongoDB: # +doc-gen:break
    apiVersion: kubedb.com/v1
    kind: MongoDB
    metadata:
      name: mongodb
      namespace: demo
    spec:
      authSecret:
        name: mongodb-auth
      configSecret:
        name: mongodb-config
      deletionPolicy: WipeOut
      init:
        waitForInitialRestore: true
      monitor:
        agent: prometheus.io
        prometheus:
          exporter:
            resources:
              limits:
                cpu: 100m
                memory: 128Mi
              requests:
                cpu: 100m
                memory: 128Mi
      shardTopology:
        configServer:
          configSecret:
            name: mongodb-configserver-config
          replicas: 3
          storage:
            resources:
              requests:
                storage: 1Gi
            storageClassName: standard
        mongos:
          configSecret:
            name: mongodb-mongos-config
          replicas: 2
        shard:
          configSecret:
            name: mongodb-shard-config
          replicas: 3
          shards: 2
          storage:
            resources:
              requests:
                storage: 1Gi
            storageClassName: standard
      sslMode: requireSSL
      storageType: Durable
      tls:
        issuerRef:
          apiGroup: cert-manager.io
          kind: Issuer
          name: mongo-ca
      version: 4.2.3
  monitoringCoreosComServiceMonitor: # +doc-gen:break
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: mongodb
      namespace: demo
    spec:
      endpoints:
        - honorLabels: true
          interval: 30s
          path: /metrics
          port: metrics
      namespaceSelector:
        matchNames:
          - demo
      selector:
        matchLabels:
          app.kubernetes.io/instance: mongodb
          app.kubernetes.io/name: mongodbs.kubedb.com
  secret_auth: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: mongodb-auth
      namespace: demo
    stringData:
      password: thisIs1StrongPassword
      username: root
    type: Opaque
  secret_config: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: mongodb-config
      namespace: demo
    stringData:
      mongod.conf: |
        net:
          maxIncomingConnections: 40000
    type: Opaque
  secret_configserver_config: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: mongodb-configserver-config
      namespace: demo
    stringData:
      mongod.conf: |
        net:
          maxIncomingConnections: 20000
    type: Opaque
  secret_encryption_secret: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: mongodb-encryption-secret
      namespace: demo
    stringData:
      RESTIC_PASSWORD: ""
  secret_init_repo_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: mongodb-init-repo-cred
      namespace: demo
    stringData:
      password: thisIs1StrongPassword
      username: root
    type: Opaque
  secret_mongos_config: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: mongodb-mongos-config
      namespace: demo
    stringData:
      mongod.conf: |
        net:
          maxIncomingConnections: 30000
    type: Opaque
  secret_repo_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: mongodb-repo-cred
      namespace: demo
    stringData:
      password: thisIs1StrongPassword
      username: root
    type: Opaque
  secret_shard_config: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: mongodb-shard-config
      namespace: demo
    stringData:
      mongod.conf: |
        net:
          maxIncomingConnections: 40000
    type: Opaque
  stashAppscodeComBackupConfiguration: # +doc-gen:break
    apiVersion: stash.appscode.com/v1beta1
    kind: BackupConfiguration
    metadata:
      name: mongodb
      namespace: demo
    spec:
      repository:
        name: mongodb-repo
      retentionPolicy:
        keepLast: 5
        name: keep-last-5
        prune: true
      schedule: '*/5 * * * *'
      target:
        ref:
          apiVersion: appcatalog.appscode.com/v1alpha1
          kind: AppBinding
          name: mongodb
      task:
        name: mongodb-backup-4.2.3-v5
  stashAppscodeComRepository_init_repo: # +doc-gen:break
    apiVersion: stash.appscode.com/v1alpha1
    kind: Repository
    metadata:
      name: mongodb-init-repo
      namespace: demo
    spec:
      backend:
        gcs:
          bucket: stash-testing
          prefix: /demo/mongodb
        storageSecretName: gcs-secret
  stashAppscodeComRepository_repo: # +doc-gen:break
    apiVersion: stash.appscode.com/v1alpha1
    kind: Repository
    metadata:
      name: mongodb-repo
      namespace: demo
    spec:
      backend:
        gcs:
          bucket: stash-testing
          prefix: /demo/mongodb
        storageSecretName: gcs-secret
  stashAppscodeComRestoreSession_init: # +doc-gen:break
    apiVersion: stash.appscode.com/v1beta1
    kind: RestoreSession
    metadata:
      name: mongodb-init
      namespace: demo
    spec:
      repository:
        name: mongodb-init-repo
      rules:
        - snapshots:
            - latest
      target:
        ref:
          apiVersion: appcatalog.appscode.com/v1alpha1
          kind: AppBinding
          name: mongodb
      task:
        name: mongodb-restore-4.2.3-v5
