steps:
- form:
    elements:
    - disabled: true
      label:
        text: labels.database.name
      onChange: onNameChange
      schema:
        $ref: schema#/properties/metadata/properties/release/properties/name
      type: input
    - disabled: true
      fetch: getResources|core|v1|namespaces
      label:
        text: labels.namespace
      onChange: onNamespaceChange
      schema:
        $ref: schema#/properties/metadata/properties/release/properties/namespace
      type: select
    - disabled: true
      fetch: getMongoDbVersions|catalog.kubedb.com|v1alpha1|mongodbversions
      label:
        text: labels.database.version
      schema:
        $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/version
      type: select
    - individualItemDisabilityCheck: disableLableChecker
      isArray: true
      keys:
        label:
          text: labels.labels.key
      label:
        text: labels.labels.label
      onChange: onLabelChange
      schema:
        $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/metadata/properties/labels
      type: key-value-input-form
      values:
        label:
          text: labels.labels.value
        schema:
          $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/metadata/properties/labels/additionalProperties
        type: input
    - isArray: true
      keys:
        label:
          text: labels.annotations.key
      label:
        text: labels.annotations.label
      schema:
        $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/metadata/properties/annotations
      type: key-value-input-form
      values:
        label:
          text: labels.annotations.value
        schema:
          $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/metadata/properties/annotations/additionalProperties
        type: input
    - hasDescription: true
      label:
        text: labels.terminationPolicy
      options:
      - description: options.terminationPolicy.delete.description
        text: options.terminationPolicy.delete.label
        value: Delete
      - description: options.terminationPolicy.halt.description
        text: options.terminationPolicy.halt.label
        value: Halt
      - description: options.terminationPolicy.wipeOut.description
        text: options.terminationPolicy.wipeOut.label
        value: WipeOut
      - description: options.terminationPolicy.doNotTerminate.description
        text: options.terminationPolicy.doNotTerminate.label
        value: DoNotTerminate
      schema:
        $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/terminationPolicy
      type: radio
    - disabled: true
      label:
        text: labels.secret
      schema:
        $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/authSecret/properties/name
      type: input
    type: single-step-form
  id: basic
  title: steps.0.label
- form:
    elements:
    - alias: reusable_alert
      chart:
        name: uibytebuildersdev-component-alert
        version: v0.4.12
      moduleResolver: fetchJsons
      schema:
        $ref: schema#/properties/form/properties/alert
      type: reusable-element
    type: single-step-form
  id: alert
  title: labels.alert
- form:
    elements:
    - discriminator:
        activeDatabaseMode:
          default: Standalone
          type: string
      elements:
      - if: isNotStandaloneMode
        label:
          text: labels.to_update_replicas
        type: label-element
      - customClass: mb-20
        if: isNotStandaloneMode
        label:
          text: labels.create_opsrequest
        type: anchor
        url:
          params:
            cluster:
              $ref: store#/cluster/clusterDefinition/spec/name
            dbname:
              $ref: model#/metadata/release/name
            domain:
              $ref: store#/domain
            group:
              $ref: model#/metadata/resource/group
            kind:
              $ref: model#/metadata/resource/kind
            namespace:
              $ref: model#/metadata/release/namespace
            owner:
              $ref: store#/route/params/user
            resource:
              $ref: model#/metadata/resource/name
            version:
              $ref: model#/metadata/resource/version
          path: ${domain}/${owner}/kubernetes/${cluster}/ops.kubedb.com/v1alpha1/mongodbopsrequests/create?name=${dbname}&namespace=${namespace}&group=${group}&version=${version}&resource=${resource}&kind=${kind}&page=operations&requestType=HorizontalScaling
      - computed: setDatabaseMode
        disabled: true
        hasDescription: true
        label:
          text: labels.database.mode
        onChange: deleteDatabaseModePath
        options:
        - description: options.database.mode.Standalone.description
          text: options.database.mode.Standalone.label
          value: Standalone
        - description: options.database.mode.Replicaset.description
          text: options.database.mode.Replicaset.label
          value: Replicaset
        - description: options.database.mode.Sharded.description
          text: options.database.mode.Sharded.label
          value: Sharded
        schema:
          $ref: discriminator#/activeDatabaseMode
        type: radio
      - disabled: true
        elements:
        - label:
            text: labels.replicaset.name
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/replicaSet/properties/name
          type: input
        - label:
            text: labels.replicaset.number
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/replicas
          type: input
        if: isEqualToDatabaseMode|Replicaset
        type: single-step-form
      - disabled: true
        elements:
        - fetch: getStorageClassNames|common
          label:
            text: labels.storage.class
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/storage/properties/storageClassName
          type: select
        - label:
            text: labels.storage.size
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/storage/properties/resources/properties/requests/properties/storage
          type: input
        if: showCommonStorageClassAndSizeField
        type: single-step-form
      - disabled: true
        elements:
        - elements:
          - fetch: getStorageClassNames|shard
            label:
              text: labels.storage.class
            onChange: setStorageClass
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/shard/properties/storage/properties/storageClassName
            type: select
          - label:
              text: labels.shardNodes
            type: label-element
          - elements:
            - elements:
              - label:
                  text: labels.storage.size
                schema:
                  $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/shard/properties/storage/properties/resources/properties/requests/properties/storage
                type: input
              schema:
                $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/shard/properties/storage/properties/resources/properties/requests
              type: single-step-form
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/shard/properties/storage/properties/resources
            type: single-step-form
          type: single-step-form
        - label:
            text: labels.shards
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/shard/properties/shards
          type: input
        - label:
            text: labels.replicaset.number
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/shard/properties/replicas
          type: input
        - label:
            text: labels.configServer
          type: label-element
        - elements:
          - elements:
            - elements:
              - elements:
                - label:
                    text: labels.storage.size
                  schema:
                    $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/configServer/properties/storage/properties/resources/properties/requests/properties/storage
                  type: input
                schema:
                  $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/configServer/properties/storage/properties/resources/properties/requests
                type: single-step-form
              schema:
                $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/configServer/properties/storage/properties/resources
              type: single-step-form
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/configServer/properties/storage
            type: single-step-form
          - label:
              text: labels.replicaset.number
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/configServer/properties/replicas
            type: input
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/configServer
          type: single-step-form
        - label:
            text: labels.mongos
          type: label-element
        - elements:
          - label:
              text: labels.replicaset.number
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/mongos/properties/replicas
            type: input
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/mongos
          type: single-step-form
        if: isEqualToDatabaseMode|Sharded
        type: single-step-form
      type: single-step-form
    type: single-step-form
  id: topology
  title: steps.1.label
- form:
    discriminator:
      configureTLS:
        default: true
        type: boolean
    elements:
    - label:
        text: labels.to_update_tls
      type: label-element
    - customClass: mb-20
      label:
        text: labels.create_opsrequest
      type: anchor
      url:
        params:
          cluster:
            $ref: store#/cluster/clusterDefinition/spec/name
          dbname:
            $ref: model#/metadata/release/name
          domain:
            $ref: store#/domain
          group:
            $ref: model#/metadata/resource/group
          kind:
            $ref: model#/metadata/resource/kind
          namespace:
            $ref: model#/metadata/release/namespace
          owner:
            $ref: store#/route/params/user
          resource:
            $ref: model#/metadata/resource/name
          version:
            $ref: model#/metadata/resource/version
        path: ${domain}/${owner}/kubernetes/${cluster}/ops.kubedb.com/v1alpha1/mongodbopsrequests/create?name=${dbname}&namespace=${namespace}&group=${group}&version=${version}&resource=${resource}&kind=${kind}&page=operations&requestType=ReconfigureTLS
    - computed: isValueExistInModel|/resources/kubedbComMongoDB/spec/tls
      disabled: true
      label:
        text: labels.enable_tls
      onChange: onTlsConfigureChange
      schema:
        $ref: discriminator#/configureTLS
      type: switch
    - disabled: true
      elements:
      - computed: setClusterAuthMode
        label:
          text: labels.cluster_auth_mode
        options:
        - text: x509
          value: x509
        - text: sendX509
          value: sendX509
        - text: keyFile
          value: keyFile
        - text: sendKeyFile
          value: sendKeyFile
        schema:
          $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/clusterAuthMode
        type: radio
      - computed: setSSLMode
        label:
          text: labels.ssl_mode
        options:
        - text: requireSSL
          value: requireSSL
        - text: preferSSL
          value: preferSSL
        - text: allowSSL
          value: allowSSL
        schema:
          $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/sslMode
        type: radio
      - elements:
        - computed: setApiGroup
          disabled: true
          label:
            text: labels.api_group
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/tls/properties/issuerRef/properties/apiGroup
          type: input
        - label:
            text: labels.kind
          options:
          - text: Issuer
            value: Issuer
          - text: ClusterIssuer
            value: ClusterIssuer
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/tls/properties/issuerRef/properties/kind
          type: select
        - allowUserDefinedOption: true
          fetch: getIssuerRefsName
          label:
            text: labels.name
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/tls/properties/issuerRef/properties/name
          type: select
        label:
          text: labels.issuer_ref
        schema:
          $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/tls/properties/issuerRef
        type: single-step-form
      - alias: reusable_certificates
        chart:
          name: uibytebuildersdev-component-certificates
          version: v0.4.12
        moduleResolver: fetchJsons
        schema:
          $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/tls/properties/certificates
        type: reusable-element
      if: showTlsConfigureSection
      type: single-step-form
    type: single-step-form
  id: tls
  title: steps.2.label
- form:
    elements:
    - alias: vaultserver-initialization
      chart:
        name: uibytebuildersdev-component-initialization
        version: v0.4.14
      dataContext:
        namespace:
          $ref: schema#/properties/metadata/properties/release/properties/namespace
        name:
          $ref: schema#/properties/metadata/properties/release/properties/name
      functionCallbacks:
        isEditWizard:
          $ref: functions#/returnTrue
      moduleResolver: fetchJsons
      schema:
        $ref: schema#/properties/resources/properties/stashAppscodeComRestoreSession_init
      type: reusable-element
    type: single-step-form
  id: initialization
  title: steps.3.label
- form:
    elements:
    - alias: vaultserver-backupconfiguration
      chart:
        name: uibytebuildersdev-component-backupconfiguration
        version: v0.4.14
      dataContext:
        namespace:
          $ref: schema#/properties/metadata/properties/release/properties/namespace
        name:
          $ref: schema#/properties/metadata/properties/release/properties/name
      functionCallbacks:
        isEditWizard:
          $ref: functions#/returnTrue
      moduleResolver: fetchJsons
      schema:
        $ref: schema#/properties/resources/properties/stashAppscodeComBackupConfiguration
      type: reusable-element
    type: single-step-form
  id: backupconfiguration
  title: steps.4.label
- form:
    discriminator:
      enableMonitoring:
        default: true
        type: boolean
    elements:
    - computed: isValueExistInModel|/resources/kubedbComMongoDB/spec/monitor
      label:
        text: labels.enable_monitoring
      onChange: onEnableMonitoringChange
      schema:
        $ref: discriminator#/enableMonitoring
      type: switch
    - discriminator:
        customizeExporter:
          default: true
          type: boolean
      elements:
      - hasDescription: true
        label:
          text: labels.agent
        onChange: onAgentChange
        options:
        - description: options.agent.prometheus_operator.description
          text: options.agent.prometheus_operator.label
          value: prometheus.io/operator
        - description: options.agent.prometheus.description
          text: options.agent.prometheus.label
          value: prometheus.io
        - description: options.agent.prometheus_builtin.description
          text: options.agent.prometheus_builtin.label
          value: prometheus.io/builtin
        schema:
          $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/agent
        type: radio
      - elements:
        - label:
            text: labels.scrapping_interval
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/prometheus/properties/serviceMonitor/properties/interval
          type: input
        if: isEqualToModelPathValue|prometheus.io/operator|/resources/kubedbComMongoDB/spec/monitor/agent
        label:
          text: labels.service_monitor_configuration
        show_label: true
        type: single-step-form
      - elements:
        - elements:
          - addFormLabel: labels.endpoint
            element:
              elements:
              - label:
                  text: labels.honor_labels
                schema:
                  $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/endpoints/items/properties/honorLabels
                type: switch
              - label:
                  text: labels.interval
                schema:
                  $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/endpoints/items/properties/interval
                type: input
              - label:
                  text: labels.path
                schema:
                  $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/endpoints/items/properties/path
                type: input
              - label:
                  text: labels.port
                schema:
                  $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/endpoints/items/properties/port
                type: input
              type: single-step-form
            label:
              text: labels.endpoints
            schema:
              $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/endpoints
            tableContents:
            - inTableColumn: true
              label:
                text: labels.honor_labels
              path: honorLabels
              type: value
              typeOfValue: string
            - inTableColumn: true
              label:
                text: labels.interval
              path: interval
              type: value
              typeOfValue: string
            - inTableColumn: true
              label:
                text: labels.path
              path: path
              type: value
              typeOfValue: string
            - inTableColumn: true
              label:
                text: labels.port
              path: port
              type: value
              typeOfValue: string
            type: single-step-form-array
          - elements:
            - fetch: getResources|core|v1|namespaces
              label:
                text: labels.matchNames
              schema:
                $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/namespaceSelector/properties/matchNames
              type: multiselect
            if: returnFalse
            schema:
              $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/namespaceSelector
            type: single-step-form
          - elements:
            - isArray: true
              keys:
                label:
                  text: labels.labels.key
              label:
                text: labels.labels.label
              schema:
                $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/selector/properties/matchLabels
              type: key-value-input-form
              values:
                label:
                  text: labels.labels.value
                schema:
                  $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/selector/properties/matchLabels/additionalProperties
                type: input
            if: returnFalse
            schema:
              $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec/properties/selector
            type: single-step-form
          schema:
            $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/spec
          type: single-step-form
        if: isEqualToModelPathValue|prometheus.io|/resources/kubedbComMongoDB/spec/monitor/agent
        label:
          text: labels.service_monitor
        schema:
          $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor
        show_label: true
        type: single-step-form
      - if: isEqualToModelPathValue|prometheus.io|/resources/kubedbComMongoDB/spec/monitor/agent
        individualItemDisabilityCheck: disableLableChecker
        isArray: true
        keys:
          label:
            text: labels.labels.key
        label:
          text: labels.labels.label
        schema:
          $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/metadata/properties/labels
        type: key-value-input-form
        values:
          label:
            text: labels.labels.value
          schema:
            $ref: schema#/properties/resources/properties/monitoringCoreosComServiceMonitor/properties/metadata/properties/labels/additionalProperties
          type: input
      - label:
          text: labels.exporter_configuration
        type: label-element
      - label:
          text: labels.customize_exporter
        onChange: onCustomizeExporterChange
        schema:
          $ref: discriminator#/customizeExporter
        type: switch
      - elements:
        - label:
            text: labels.resources
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/prometheus/properties/exporter/properties/resources
          type: resource-input-form
        - label:
            text: labels.security_context
          type: label-element
        - label:
            text: labels.run_as_user
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/prometheus/properties/exporter/properties/securityContext/properties/runAsUser
          type: input
        - customClass: mb-0
          label:
            text: labels.run_as_group
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/prometheus/properties/exporter/properties/securityContext/properties/runAsGroup
          type: input
        - label:
            text: labels.port
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/prometheus/properties/exporter/properties/port
          type: input
        - element:
            label:
              isSubsection: true
              text: labels.args
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/prometheus/properties/exporter/properties/args/items
            type: input
          label:
            text: labels.args
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/prometheus/properties/exporter/properties/args
          type: list-input-form
        - alias: reusable_env
          chart:
            name: uibytebuildersdev-component-env
            version: v0.4.12
          dataContext:
            namespace:
              $ref: schema#/properties/metadata/properties/release/properties/namespace
          moduleResolver: fetchJsons
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/monitor/properties/prometheus/properties/exporter/properties/env
          type: reusable-element
        if: showCustomizeExporterSection
        type: single-step-form
      if: showMonitoringSection
      type: single-step-form
    type: single-step-form
  id: monitoring
  title: steps.5.label
- form:
    elements:
    - elements:
      - alias: pod_template_standalone
        chart:
          name: uibytebuildersdev-component-pod-template
          version: v0.4.12
        dataContext:
          namespace:
            $ref: schema#/properties/metadata/properties/release/properties/namespace
        functionCallbacks:
          isEditWizard:
            $ref: functions#/returnTrue
        moduleResolver: fetchJsons
        schema:
          $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/podTemplate
        type: reusable-element
      type: single-step-form
    type: single-step-form
  id: pod-template
  if: isNotShardModeSelected
  title: steps.6.label
- form:
    steps:
    - form:
        elements:
        - elements:
          - alias: pod_template_shard
            chart:
              name: uibytebuildersdev-component-pod-template
              version: v0.4.12
            dataContext:
              namespace:
                $ref: schema#/properties/metadata/properties/release/properties/namespace
            functionCallbacks:
              isEditWizard:
                $ref: functions#/returnTrue
            moduleResolver: fetchJsons
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/shard/properties/podTemplate
            type: reusable-element
          type: single-step-form
        type: single-step-form
      id: pod-template-shard
      title: labels.shard
    - form:
        elements:
        - elements:
          - alias: pod_template_configserver
            chart:
              name: uibytebuildersdev-component-pod-template
              version: v0.4.12
            dataContext:
              namespace:
                $ref: schema#/properties/metadata/properties/release/properties/namespace
            functionCallbacks:
              isEditWizard:
                $ref: functions#/returnTrue
            moduleResolver: fetchJsons
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/configServer/properties/podTemplate
            type: reusable-element
          type: single-step-form
        type: single-step-form
      id: pod-template-config-server
      title: labels.configServer
    - form:
        elements:
        - elements:
          - alias: pod_template_mongos
            chart:
              name: uibytebuildersdev-component-pod-template
              version: v0.4.12
            dataContext:
              namespace:
                $ref: schema#/properties/metadata/properties/release/properties/namespace
            functionCallbacks:
              isEditWizard:
                $ref: functions#/returnTrue
            moduleResolver: fetchJsons
            schema:
              $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/mongos/properties/podTemplate
            type: reusable-element
          type: single-step-form
        type: single-step-form
      id: pod-template-mongos
      title: labels.mongos
    type: multi-step-form
  id: pod-template-sharded-topology
  if: isShardModeSelected
  title: steps.7.label
- form:
    elements:
    - alias: reusable_service_templates
      chart:
        name: uibytebuildersdev-component-service-templates
        version: v0.4.12
      moduleResolver: fetchJsons
      schema:
        $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/serviceTemplates
      type: reusable-element
    type: single-step-form
  id: networking
  title: steps.8.label
- form:
    elements:
    - label:
        text: labels.to_update_config
      type: label-element
    - customClass: mb-20
      label:
        text: labels.create_opsrequest
      type: anchor
      url:
        params:
          cluster:
            $ref: store#/cluster/clusterDefinition/spec/name
          dbname:
            $ref: model#/metadata/release/name
          domain:
            $ref: store#/domain
          group:
            $ref: model#/metadata/resource/group
          kind:
            $ref: model#/metadata/resource/kind
          namespace:
            $ref: model#/metadata/release/namespace
          owner:
            $ref: store#/route/params/user
          resource:
            $ref: model#/metadata/resource/name
          version:
            $ref: model#/metadata/resource/version
        path: ${domain}/${owner}/kubernetes/${cluster}/ops.kubedb.com/v1alpha1/mongodbopsrequests/create?name=${dbname}&namespace=${namespace}&group=${group}&version=${version}&resource=${resource}&kind=${kind}&page=operations&requestType=Reconfigure
    - disabled: true
      elements:
      - discriminator:
          configurationSource:
            default: use-existing-config
            type: string
        elements:
        - onChange: onConfigurationSourceChange
          options:
          - text: options.configuration_source.use_existing_config.label
            value: use-existing-config
          - text: options.configuration_source.create_new_config.label
            value: create-new-config
          schema:
            $ref: discriminator#/configurationSource
          type: radio
        - allowUserDefinedOption: true
          fetch: getSecrets
          label:
            text: labels.name
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/configSecret/properties/name
          type: select
        if: isNotShardModeSelected
        type: single-step-form
      - discriminator:
          configurationSourceConfigServer:
            default: use-existing-config
            type: string
          configurationSourceMongos:
            default: use-existing-config
            type: string
          configurationSourceShard:
            default: use-existing-config
            type: string
        elements:
        - customClass: mb-10
          label:
            text: labels.shardNodes
          type: label-element
        - computed: setConfigurationSourceShard
          label:
            text: labels.custom_config
          onChange: onConfigurationSourceShardChange
          options:
          - text: options.configuration_source.use_existing_config.label
            value: use-existing-config
          - text: options.configuration_source.create_new_config.label
            value: create-new-config
          - text: options.configuration_source.same_as_config_server.label
            value: same-as-configserver-config-secret
          - text: options.configuration_source.same_as_mongos.label
            value: same-as-mongos-config-secret
          schema:
            $ref: discriminator#/configurationSourceShard
          type: select
        - allowUserDefinedOption: true
          fetch: getSecrets
          if: isEqualToDiscriminatorPath|use-existing-config|/configurationSourceShard
          label:
            text: labels.config_secret
          onChange: onConfigSecretModelChange|shard|use-existing-config
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/shard/properties/configSecret/properties/name
          type: select
        - customClass: mb-10
          label:
            text: labels.configServerNodes
          type: label-element
        - computed: setConfigurationSourceConfigServer
          label:
            text: labels.custom_config
          onChange: onConfigurationSourceConfigServerChange
          options:
          - text: options.configuration_source.use_existing_config.label
            value: use-existing-config
          - text: options.configuration_source.create_new_config.label
            value: create-new-config
          - text: options.configuration_source.same_as_shard.label
            value: same-as-shard-config-secret
          - text: options.configuration_source.same_as_mongos.label
            value: same-as-mongos-config-secret
          schema:
            $ref: discriminator#/configurationSourceConfigServer
          type: select
        - allowUserDefinedOption: true
          fetch: getSecrets
          if: isEqualToDiscriminatorPath|use-existing-config|/configurationSourceConfigServer
          label:
            text: labels.config_secret
          onChange: onConfigSecretModelChange|configserver|use-existing-config
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/configServer/properties/configSecret/properties/name
          type: select
        - customClass: mb-10
          label:
            text: labels.mongosNodes
          type: label-element
        - computed: setConfigurationSourceMongos
          label:
            text: labels.custom_config
          onChange: onConfigurationSourceMongosChange
          options:
          - text: options.configuration_source.use_existing_config.label
            value: use-existing-config
          - text: options.configuration_source.create_new_config.label
            value: create-new-config
          - text: options.configuration_source.same_as_shard.label
            value: same-as-shard-config-secret
          - text: options.configuration_source.same_as_config_server.label
            value: same-as-configserver-config-secret
          schema:
            $ref: discriminator#/configurationSourceMongos
          type: select
        - allowUserDefinedOption: true
          fetch: getSecrets
          if: isEqualToDiscriminatorPath|use-existing-config|/configurationSourceMongos
          label:
            text: labels.config_secret
          onChange: onConfigSecretModelChange|mongos|use-existing-config
          schema:
            $ref: schema#/properties/resources/properties/kubedbComMongoDB/properties/spec/properties/shardTopology/properties/mongos/properties/configSecret/properties/name
          type: select
        if: isShardModeSelected
        type: single-step-form
      type: single-step-form
    type: single-step-form
  id: custom-config
  title: steps.9.label
type: multi-step-form
