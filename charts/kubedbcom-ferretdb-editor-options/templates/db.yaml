{{- $profiles := dict -}}
{{- with $ctx := . -}}
{{- $profiles = include "resource-profiles" $ctx | fromJson -}}
{{- end -}}

{{- define "common.placement" -}}

{{- if .Values.spec.admin.clusterTier.placement.default }}
podPlacementPolicy:
  name: {{ .Values.spec.admin.clusterTier.placement.default }}
{{- end }}

nodeSelector:
  kubernetes.io/os: linux
{{- if .Values.spec.admin.nodeSelector }}
{{- toYaml .Values.spec.admin.nodeSelector | nindent 2 }}
{{- end }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
  app: ferretdbs.kubedb.com
  instance: {{ include "kubedbcom-ferretdb-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  nodepool: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
{{- end }}

{{- if or .Values.spec.admin.tolerations (eq .Values.spec.admin.deployment.default "Dedicated") }}
tolerations:
{{- if .Values.spec.admin.tolerations }}
{{- toYaml .Values.spec.admin.tolerations | nindent 2 }}
{{- end }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
  - key: app
    operator: "Equal"
    value: "ferretdbs.kubedb.com"
    effect: "NoSchedule"
  - key: instance
    operator: "Equal"
    value: {{ include "kubedbcom-ferretdb-editor-options.fullname" . }}
    effect: "NoSchedule"
  - key: namespace
    operator: "Equal"
    value: {{ .Release.Namespace }}
    effect: "NoSchedule"
  - key: nodepool
    operator: "Equal"
    value: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
    effect: "NoSchedule"
{{- end }}
{{- end }}
{{- end }}

{{- if .Values.spec.admin.gitOps.enable.default }}
apiVersion: gitops.kubedb.com/v1alpha1
{{ else }}
apiVersion: kubedb.com/v1alpha2
{{- end }}
kind: FerretDB
metadata:
  name: {{ include "kubedbcom-ferretdb-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-ferretdb-editor-options.labels" . | nindent 4 }}
  annotations:
    app.kubernetes.io/cluster-tier: {{ .Values.spec.admin.clusterTier.default }}
    {{- if $profiles }}
    kubernetes.io/instance-type: {{ printf "'%s'" (include "resource-profiles" . | fromJson | toJson) }}
    {{- end -}}
{{- if .Values.spec.annotations }}
    {{- include "kubedbcom-ferretdb-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.admin.databases.FerretDB.versions.default | quote }}
  backend:
    replicas: {{ .Values.spec.backend.replicas }}
    podTemplate:
      {{- if $profiles }}
      metadata:
        annotations:
          kubernetes.io/instance-type: {{ get (include "resource-profiles" . | fromJson) "backend" | quote }}
      {{- end }}
      spec:
        securityContext:
          fsGroup: {{ .Values.spec.openshift.securityContext.runAsUser | default 999 }}
        containers:
          - name: postgres
            resources:
              {{- toYaml .backend_res | nindent 14 }}
            securityContext:
              {{- include "postgres.securityContext" . | nindent 14 }}
        {{- if gt (int .Values.spec.backend.replicas) 1 }}
          - name: pg-coordinator
            resources:
              {{- toYaml .sidecar_res | nindent 14 }}
            securityContext:
              {{- include "postgres.securityContext" . | nindent 14 }}
        {{- end }}
        initContainers:
          - name: postgres-init-container
            resources:
              {{- toYaml .init_res | nindent 14 }}
            securityContext:
              {{- include "postgres.securityContext" . | nindent 14 }}
        {{- include "common.placement" . | nindent 8 }}
    storageType: Durable
    storage:
      storageClassName: {{ .Values.spec.admin.storageClasses.default }}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.spec.backend.persistence.size }}
  server:
    primary:
      replicas: {{ .Values.spec.server.primary.replicas }}
      podTemplate:
        spec:
          securityContext:
            fsGroup: {{ .Values.spec.openshift.securityContext.runAsUser | default 1000 }}
          containers:
            - name: ferretdb
              resources:
                {{- toYaml .res | nindent 16 }}
              securityContext:
                {{- include "container.securityContext" $ | nindent 16 }}
          {{- include "common.placement" . | nindent 10 }}
  {{- if eq .Values.spec.mode "PrimaryAndSecondary" }}
    secondary:
      replicas: {{ .Values.spec.server.secondary.replicas }}
      podTemplate:
        spec:
          securityContext:
            fsGroup: {{ .Values.spec.openshift.securityContext.runAsUser | default 1000 }}
          containers:
            - name: ferretdb
              resources:
                {{- toYaml .secondary_res | nindent 16 }}
              securityContext:
                {{- include "container.securityContext" $ | nindent 16 }}
          {{- include "common.placement" . | nindent 10 }}
  {{- end }}
  deletionPolicy: {{ .Values.spec.deletionPolicy }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if .Values.spec.authSecret.password }}
  authSecret:
    name: {{ include "kubedbcom-ferretdb-editor-options.fullname" . }}-auth
{{- end }}
{{- if .Values.spec.configuration }}
  configSecret:
    name: {{ include "kubedbcom-ferretdb-editor-options.fullname" . }}-config
{{- end }}
{{- if .Values.spec.admin.tls.default }}
  tls:
    issuerRef:
      apiGroup: "cert-manager.io"
      kind: ClusterIssuer
      name: {{ .Values.spec.admin.clusterIssuers.default }}
  {{- if .Values.spec.admin.expose.default }}
    certificates:
    - alias: server
      {{- if .Values.spec.hostName }}
      dnsNames:
        - {{ .Values.spec.hostName }}
      {{- else if .Values.spec.ip }}
      ipAddresses:
        - {{ .Values.spec.ip }}
      {{- end }}
  {{- end }}
  sslMode: requireSSL
{{- end }}
{{- if (and .Values.spec.admin.monitoring .Values.spec.admin.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.admin.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.admin.monitoring.exporter }}
      exporter:
        resources:
          {{- toYaml .resources | nindent 10 }}
        securityContext:
          {{- include "container.securityContext" $ | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
