type: multi-step-form
step:
  - type: single-step-form
    id: 'basic'
    elements:
      # - type: input
      #   if:
      #     type: function
      #     name: returnFalse
      #   init:
      #     type: func
      #     value: getDbDetails
      #   schema: temp/properties/dbDetails
      #   label: ''
      # - type: input
      #   if:
      #     type: function
      #     name: showAndInitName
      #   schema: schema/properties/metadata/properties/name
      #   label: op_req_name
      #   validation:
      #     type: required
      # - init:
      #     type: func
      #     value: initNamespace
      #   if:
      #     type: function
      #     name: showAndInitNamespace
      #   disable: isNamespaceDisabled
      #   loader: getNamespaces
      #   label: Namespace
      #   watcher:
      #     paths:
      #       - schema/properties/metadata/properties/namespace
      #     func: onNamespaceChange
      #   validation:
      #     type: required
      #   type: select
      #   hasGroup: true
      #   schema: 'schema#/properties/metadata/properties/namespace'
      # - type: select
      #   schema: 'schema#/properties/spec/properties/databaseRef/properties/name'
      #   validation:
      #     type: required
      #   refresh: true
      #   watcher:
      #     paths:
      #       - 'schema#/properties/spec/properties/databaseRef/properties/name'
      #     func: onDbChange
      #   label: databaseRef
      #   if:
      #     type: function
      #     name: showAndInitDatabaseRef
      #   loader: getDbs
      #   disable: isDatabaseRefDisabled
      #   init:
      #     type: func
      #     value: initDatabaseRef
      # - type: label
      #   if:
      #     type: function
      #     name: showConfigureOpsrequestLabel
      #   label: config_ops_request
      # - type: radio
      #   schema: schema/properties/spec/properties/type
      #   options:
      #     - description: options.UpdateVersion.description
      #       text: options.UpdateVersion.text
      #       value: UpdateVersion
      #     - description: options.HorizontalScaling.description
      #       text: options.HorizontalScaling.text
      #       value: HorizontalScaling
      #     - description: options.VerticalScaling.description
      #       text: options.VerticalScaling.text
      #       value: VerticalScaling
      #     - description: options.VolumeExpansion.description
      #       text: options.VolumeExpansion.text
      #       value: VolumeExpansion
      #     - description: options.Restart.description
      #       text: options.Restart.text
      #       value: Restart
      #     - description: options.Reconfigure.description
      #       text: options.Reconfigure.text
      #       value: Reconfigure
      #     - description: options.ReconfigureTLS.description
      #       text: options.ReconfigureTLS.text
      #       value: ReconfigureTLS
      #   watcher:
      #     paths:
      #       - schema/properties/spec/properties/type
      #     func: onRequestTypeChange
      #   label: ops_request_type
      #   if:
      #     type: function
      #     name: showAndInitOpsRequestType
      #   disable: isDbDetailsLoading
      #   init:
      #     type: func
      #     value: getRequestTypeFromRoute
      # - type: block-layout
      #   if:
      #     type: function
      #     name: ifRequestTypeEqualsTo|UpdateVersion
      #   elements:
      #     - type: select
      #       schema: 
      #         schema/properties/spec/properties/updateVersion/properties/targetVersion
      #       label: targetVersion
      #       loader: getDbVersions
      #       init:
      #         type: func
      #         value: setValueFromDbDetails|/spec/version
      - type: block-layout
        label: Horizontal Scaling Form
        showLabels: true
        if:
          type: function
          name: getDbDetails
        elements:
          - type: input
            schema: 
              schema#/properties/spec/properties/horizontalScaling/properties/replicas
            label: replicas
            init:
              type: func
              value: getDbDetails
            if:
              type: function
              name: getDbDetails
          # - type: block-layout
          #   label: Sharded horizontal scaling
          #   if:
          #     type: function
          #     name: ifDbTypeEqualsTo|sharded|horizontalScaling
          #   elements:
          #     - type: block-layout
          #       label: Config Server horizontal Scaling
          #       elements:
          #         - type: label
          #           label: configServer
          #           schema: 
          #             schema#/properties/spec/properties/horizontalScaling/properties/configServer
          #         - type: input
          #           schema: 
          #             schema#/properties/spec/properties/horizontalScaling/properties/configServer/properties/replicas
          #           label: replicas
          #           init:
          #             type: func
          #             value: 
          #               setValueFromDbDetails|/spec/shardTopology/configServer/replicas
          #     - type: block-layout
          #       label: Mongos horizontal Scaling
          #       elements:
          #         - type: label
          #           label: mongos
          #           schema: 
          #             schema#/properties/spec/properties/horizontalScaling/properties/mongos
          #         - type: input
          #           schema: 
          #             schema#/properties/spec/properties/horizontalScaling/properties/mongos/properties/replicas
          #           label: replicas
          #           init:
          #             type: func
          #             value: 
          #               setValueFromDbDetails|/spec/shardTopology/mongos/replicas
          #     - type: block-layout
          #       label: Shard horizontal Scaling
          #       elements:
          #         - type: label
          #           label: shard
          #           schema: 
          #             schema#/properties/spec/properties/horizontalScaling/properties/shard
          #         - type: input
          #           schema: 
          #             schema#/properties/spec/properties/horizontalScaling/properties/shard/properties/replicas
          #           label: replicas
          #           init:
          #             type: func
          #             value: setValueFromDbDetails|/spec/shardTopology/shard/replicas
          #         - type: input
          #           schema: 
          #             schema#/properties/spec/properties/horizontalScaling/properties/shard/properties/shards
          #           label: shards
          #           init:
          #             type: func
          #             value: setValueFromDbDetails|/spec/shardTopology/shard/shards
      # - type: block-layout
      #   if:
      #     type: function
      #     name: ifRequestTypeEqualsTo|VerticalScaling
      #   label: Vertical Scaling Form
      #   elements:
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|standalone|verticalScaling
      #       label: Standalone vertical scaling
      #       elements:
      #         - type: select
      #           schema: 'discriminator#/machine-standalone'
      #           label: Machine Profile
      #           customClass: mt-20
      #           loader: getMachines
      #           init:
      #             type: func
      #             value: setMachine|standalone
      #           watcher:
      #             paths:
      #               - /spec/podTemplate/spec/resources
      #             func: onMachineChange|standalone
      #           disableUnselect: true
      #         - type: input
      #           if:
      #             type: function
      #             name: isMachineCustom|/machine-standalone
      #           label: resources
      #           schema: 
      #             schema#/properties/spec/properties/verticalScaling/properties/standalone/properties/resources
      #         - type: select
      #           label: node_selection_policy
      #           schema: 
      #             schema#/properties/spec/properties/verticalScaling/properties/standalone/properties/nodeSelectionPolicy
      #           options:
      #             - text: LabelSelector
      #               value: LabelSelector
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|replicaSet|verticalScaling
      #       label: Replicaset vertical scaling
      #       elements:
      #         - type: select
      #           schema: 'discriminator#/machine-replicaSet'
      #           label: Machine Profile
      #           customClass: mt-20
      #           loader: getMachines
      #           init:
      #             type: func
      #             value: setMachine|replicaSet
      #           watcher:
      #             paths:
      #               - /spec/podTemplate/spec/resources
      #             func: onMachineChange|replicaSet
      #           disableUnselect: true
      #         - type: input
      #           if:
      #             type: function
      #             name: isMachineCustom|/machine-replicaSet
      #           label: resources
      #           schema: 
      #             schema#/properties/spec/properties/verticalScaling/properties/replicaSet/properties/resources
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|sharded|verticalScaling
      #       label: Sharded vertical scaling
      #       elements:
      #         - type: block-layout
      #           label: Config Server Vertical Scaling
      #           elements:
      #             - type: select
      #               schema: 'discriminator#/machine-configServer'
      #               init:
      #                 type: func
      #                 value: setMachine|configServer
      #               loader: getMachines
      #               label: Machine Profile
      #               customClass: mt-20
      #               disableUnselect: true
      #         - type: block-layout
      #           label: Mongos Vertical Scaling
      #           elements:
      #             - type: select
      #               schema: 'discriminator#/machine-mongos'
      #               init:
      #                 type: func
      #                 value: setMachine|mongos
      #               loader: getMachines
      #               label: Machine Profile
      #               customClass: mt-20
      #               disableUnselect: true
      #         - type: block-layout
      #           label: Shard Vertical Scaling
      #           elements:
      #             - type: select
      #               schema: 'discriminator#/machine-shard'
      #               init:
      #                 type: func
      #                 value: setMachine|shard
      #               loader: getMachines
      #               label: Machine Profile
      #               customClass: mt-20
      #               disableUnselect: true
      # - type: block-layout
      #   if:
      #     type: function
      #     name: ifRequestTypeEqualsTo|VolumeExpansion
      #   label: Volume Expansion Form
      #   elements:
      #     - type: input
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|standalone|volumeExpansion
      #       label: standalone
      #       schema: 
      #         schema#/properties/spec/properties/volumeExpansion/properties/standalone
      #       init:
      #         type: func
      #         value: setValueFromDbDetails|/spec/storage/resources/requests/storage
      #     - type: select
      #       label: Mode
      #       schema: 'schema#/properties/spec/properties/volumeExpansion/properties/mode'
      #       validation:
      #         type: required
      #       options:
      #         - text: Offline
      #           value: Offline
      #         - text: Online
      #           value: Online
      #     - type: input
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|replicaSet|volumeExpansion
      #       label: replicaSet
      #       schema: 
      #         schema#/properties/spec/properties/volumeExpansion/properties/replicaSet
      #       init:
      #         type: func
      #         value: setValueFromDbDetails|/spec/storage/resources/requests/storage
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|sharded|volumeExpansion
      #       label: Sharded volume expansion
      #       elements:
      #         - type: input
      #           label: configServer
      #           schema: 
      #             schema#/properties/spec/properties/volumeExpansion/properties/configServer
      #           init:
      #             type: func
      #             value: 
      #               setValueFromDbDetails|/spec/shardTopology/configServer/storage/resources/requests/storage
      #         - type: input
      #           label: shard
      #           schema: 
      #             schema#/properties/spec/properties/volumeExpansion/properties/shard
      #           init:
      #             type: func
      #             value: 
      #               setValueFromDbDetails|/spec/shardTopology/shard/storage/resources/requests/storage
      # - type: block-layout
      #   if:
      #     type: function
      #     name: ifRequestTypeEqualsTo|Reconfigure
      #   label: Reconfigure Form
      #   elements:
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|standalone|configuration
      #       label: standalone
      #       elements:
      #         - type: radio
      #           label: reconfigurationType
      #           schema: 'discriminator#/properties/reconfigurationType'
      #           options:
      #             - text: Remove Configuration
      #               value: remove
      #             - text: Apply Configuration
      #               value: apply
      #         - type: block-layout
      #           label: Configuration Settings
      #           elements:
      #             - type: input
      #               schema: 
      #                 schema#/properties/spec/properties/configuration/properties/standalone/properties/configSecret
      #               label: Configuration Secret
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|replicaSet|configuration
      #       label: replicaSet
      #       elements:
      #         - type: radio
      #           label: reconfigurationType
      #           schema: 'discriminator#/properties/reconfigurationType'
      #           options:
      #             - text: Remove Configuration
      #               value: remove
      #             - text: Apply Configuration
      #               value: apply
      #         - type: block-layout
      #           label: Configuration Settings
      #           elements:
      #             - type: input
      #               schema: 
      #                 schema#/properties/spec/properties/configuration/properties/replicaSet/properties/configSecret
      #               label: Configuration Secret
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: ifDbTypeEqualsTo|sharded|configuration
      #       label: Sharded Reconfigure form
      #       elements:
      #         - type: block-layout
      #           label: configServer
      #           elements:
      #             - type: radio
      #               label: reconfigurationType
      #               schema: 'discriminator#/properties/reconfigurationType-configServer'
      #               options:
      #                 - text: Remove Configuration
      #                   value: remove
      #                 - text: Apply Configuration
      #                   value: apply
      #             - type: block-layout
      #               label: Config Server Settings
      #               elements:
      #                 - type: input
      #                   schema: 
      #                     schema#/properties/spec/properties/configuration/properties/configServer/properties/configSecret
      #                   label: Configuration Secret
      #         - type: block-layout
      #           label: mongos
      #           elements:
      #             - type: radio
      #               label: reconfigurationType
      #               schema: 'discriminator#/properties/reconfigurationType-mongos'
      #               options:
      #                 - text: Remove Configuration
      #                   value: remove
      #                 - text: Apply Configuration
      #                   value: apply
      #             - type: block-layout
      #               label: Mongos Settings
      #               elements:
      #                 - type: input
      #                   schema: 
      #                     schema#/properties/spec/properties/configuration/properties/mongos/properties/configSecret
      #                   label: Configuration Secret
      #         - type: block-layout
      #           label: shard
      #           elements:
      #             - type: radio
      #               label: reconfigurationType
      #               schema: 'discriminator#/properties/reconfigurationType-shard'
      #               options:
      #                 - text: Remove Configuration
      #                   value: remove
      #                 - text: Apply Configuration
      #                   value: apply
      #             - type: block-layout
      #               label: Shard Settings
      #               elements:
      #                 - type: input
      #                   schema: 
      #                     schema#/properties/spec/properties/configuration/properties/shard/properties/configSecret
      #                   label: Configuration Secret
      # - type: block-layout
      #   if:
      #     type: function
      #     name: ifRequestTypeEqualsTo|ReconfigureTLS
      #   label: TLS Configuration
      #   elements:
      #     - type: radio
      #       label: tlsOperation
      #       if:
      #         type: function
      #         name: hasTlsField
      #       schema: 'discriminator#/properties/tlsOperation'
      #       init:
      #         type: func
      #         value: initTlsOperation
      #       watcher:
      #         paths:
      #           - 'discriminator#/properties/tlsOperation'
      #         func: onTlsOperationChange
      #       options:
      #         - text: Update
      #           value: update
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: showIssuerRefAndCertificates
      #       label: TLS Issuer Configuration
      #       elements:
      #         - type: input
      #           label: API Group
      #           schema: 
      #             schema#/properties/spec/properties/tls/properties/issuerRef/properties/apiGroup
      #           init:
      #             type: func
      #             value: initIssuerRefApiGroup
      #         - type: select
      #           label: Issuer Kind
      #           schema: 
      #             schema#/properties/spec/properties/tls/properties/issuerRef/properties/kind
      #           init:
      #             type: func
      #             value: setValueFromDbDetails|/spec/tls/issuerRef/kind
      #         - type: select
      #           label: Issuer Name
      #           schema: 
      #             schema#/properties/spec/properties/tls/properties/issuerRef/properties/name
      #           init:
      #             type: func
      #             value: setValueFromDbDetails|/spec/tls/issuerRef/name
      #     - type: block-layout
      #       if:
      #         type: function
      #         name: showIssuerRefAndCertificates
      #       label: TLS Certificates
      #       elements:
      #         - type: input
      #           label: Certificates
      #           schema: 'schema#/properties/spec/properties/tls/properties/certificates'
      #           init:
      #             type: func
      #             value: 
      #               setValueFromDbDetails|/spec/tls/certificates|/spec/tls/certificates
      # - type: select
      #   label: timeout
      #   schema: 'schema#/properties/spec/properties/timeout'
      #   options:
      #     - text: 5 minutes
      #       value: 5m
      #     - text: 10 minutes
      #       value: 10m
      #     - text: 30 minutes
      #       value: 30m
      #     - text: 1 hour
      #       value: 1h
      #     - text: 2 hours
      #       value: 2h
      #     - text: 5 hours
      #       value: 5h
      #     - text: 10 hours
      #       value: 10h
      # - type: radio
      #   label: apply
      #   schema: 'schema#/properties/spec/properties/apply'
      #   init:
      #     type: func
      #     value: setApplyToIfReady
      #   options:
      #     - text: IfReady (OpsRequest will be applied if database is ready)
      #       value: IfReady
      #     - text: Always (OpsRequest will always be applied)
      #       value: Always
