type: multi-step-form
step:
  - type: single-step-form
    elements:
      - type: input
        if:
          type: function
          name: showAndInitName
        schema: schema/properties/metadata/properties/name
        label: op_req_name
        validation:
          type: required
      - init:
          type: func
          value: initNamespace
        if:
          type: function
          name: showAndInitNamespace
        disable: isNamespaceDisabled
        loader: getNamespaces
        label: Namespace
        watcher:
          paths:
            - schema/properties/metadata/properties/namespace
          func: onNamespaceChange
        validation:
          type: required
        type: select
        hasGroup: true
        schema: 'schema/properties/metadata/properties/namespace'
      - type: select
        schema: 'schema#/properties/spec/properties/databaseRef/properties/name'
        validation:
          type: required
        refresh: true
        watcher:
          paths:
            - 'schema#/properties/spec/properties/databaseRef/properties/name'
          func: onDbChange
        label: Database Ref
        if:
          type: function
          name: showAndInitDatabaseRef
        loader: getDbs
        disable: isDatabaseRefDisabled
        init:
          type: func
          value: initDatabaseRef
      - type: label-element
        if:
          type: function
          name: showConfigureOpsrequestLabel
        label: config_ops_request
      - type: radio
        isHorizontal: true
        schema: schema/properties/spec/properties/type
        options:
          - description: Update your database to any version
            text: Update Version
            value: UpdateVersion
          - description: Scale up or down pod count
            text: Horizontal Scaling
            value: HorizontalScaling
          - description: Manage your CPU resources
            text: Vertical Scaling
            value: VerticalScaling
          - description: Manage your database size
            text: Volume Expansion
            value: VolumeExpansion
          - description: Restart your database
            text: Restart
            value: Restart
          - description: Reconfigure your database
            text: Reconfigure
            value: Reconfigure
          - description: Reconfigure your database tls configuration
            text: Reconfigure TLS
            value: ReconfigureTLS
        init:
          type: func
          value: getRequestTypeFromRoute
        disable: isDbDetailsLoading
        if:
          type: function
          name: showAndInitOpsRequestType
        label: Type of Ops Request
        watcher:
          paths:
            - schema/properties/spec/properties/type
          func: onRequestTypeChange
      - type: block-layout
        showLabels: false
        if:
          type: function
          name: ifRequestTypeEqualsTo|UpdateVersion
        elements:
          - type: select
            schema: 
              schema/properties/spec/properties/updateVersion/properties/targetVersion
            label: Target Version
            loader: getDbVersions
            init:
              type: func
              value: setValueFromDbDetails|/spec/version


      - type: block-layout
        label: Horizontal Scaling Form
        if:
          type: function
          name: ifRequestTypeEqualsTo|HorizontalScaling
        elements:
          - type: input
            if:
              type: function
              name: ifDbTypeEqualsTo|replicaSet|horizontalScaling
            label: Replicas
            init:
              type: func
              value: setValueFromDbDetails|/spec/replicas
            schema: schema/properties/spec/properties/horizontalScaling/properties/replicas
          - type: block-layout
            if:
              name: ifDbTypeEqualsTo|sharded|horizontalScaling
              type: function
            label: 'Sharded horizontal scaling'
            showLabels: true
            elements:
              - type: block-layout
                showLabels: true
                # label: Config Server horizontal Scaling
                elements:
                  - type: label-element
                    label: Config Server
                  - type: input
                    label: Replicas
                    schema: schema/properties/spec/properties/horizontalScaling/properties/configServer/properties/replicas
                    init:
                      type: func
                      value: setValueFromDbDetails|/spec/shardTopology/configServer/replicas
              - type: block-layout
                showLabels: true
                # label: Mongo Horizontal Scaling
                elements:
                  - type: label-element
                    label: Mongos
                  - init: 
                      type: func
                      value: setValueFromDbDetails|/spec/shardTopology/mongos/replicas
                    label: Replicas
                    schema: schema/properties/spec/properties/horizontalScaling/properties/mongos/properties/replicas
                    type: input
              - type: block-layout
                # label: Shard horizontal Scaling
                showLabels: true
                elements:
                  - type: label-element
                    label: Shard
                  - init: 
                      type: func
                      value: setValueFromDbDetails|/spec/shardTopology/shard/replicas
                    label: Replicas
                    schema: schema/properties/spec/properties/horizontalScaling/properties/shard/properties/replicas
                    type: input
                  - init: 
                      type: func
                      value: setValueFromDbDetails|/spec/shardTopology/shard/shards
                    label: Shards
                    schema: schema#/properties/spec/properties/horizontalScaling/properties/shard/properties/shards
                    type: input
            



      - type: block-layout
        if:
          type: function
          name: ifRequestTypeEqualsTo|VerticalScaling
        elements:
          - type: block-layout
            if:
              type: function
              name: ifDbTypeEqualsTo|standalone|verticalScaling
            label: Standalone Vertical Scaling
            showLabels: true
            elements:
              - type: machine-compare
                if:
                  type: function
                  name: isMachineCustom|/machine-standalone
                init:
                  type: func
                  value: setMachine|standalone                
                loader: getMachines
                label: Resources
                schema: schema/properties/spec/properties/verticalScaling/properties/standalone/properties/resources
              - type: select
                label: Node Selection Policy
                schema: schema/properties/spec/properties/verticalScaling/properties/standalone/properties/nodeSelectionPolicy
                options:
                  - text: LabelSelector
                    value: LabelSelector
                  - text: Taint
                    value: Taint
              - type: block-layout
                label: Topology
                showLabels: true
                elements:
                  - type: input
                    label: Key
                    schema: discriminator/topologyKey-standalone
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|standalone
                  - type: input
                    label: Value
                    schema: discriminator/topologyValue-standalone
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|standalone

          - type: block-layout
            if:
              type: function
              name: ifDbTypeEqualsTo|replicaSet|verticalScaling
            label: ReplicaSet Vertical Scaling
            showLabels: true
            elements:
              - type: machine-compare
                init:
                  type: func
                  value: setMachine|replicaSet
                loader: getMachines
                if:
                  type: function
                  name: isMachineCustom|/machine-replicaSet
                label: Resources
                schema: schema/properties/spec/properties/verticalScaling/properties/replicaSet/properties/resources
              - type: select
                label: Node Selection Policy
                schema: schema/properties/spec/properties/verticalScaling/properties/replicaSet/properties/nodeSelectionPolicy
                options:
                  - text: LabelSelector
                    value: LabelSelector
                  - text: Taint
                    value: Taint
              - type: block-layout
                label: Topology
                showLabels: true
                elements:
                  - type: input
                    label: Key
                    schema: discriminator/topologyKey-replicaSet
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|replicaSet
                  - type: input
                    label: Value
                    schema: discriminator/topologyValue-replicaSet
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|replicaSet

          - type: block-layout
            if:
              type: function
              name: ifDbTypeEqualsTo|sharded|verticalScaling
            label: Sharded Vertical Scaling
            showLabels: true
            elements:
              - type: block-layout
                label: Config Server Vertical Scaling
                showLabels: true
                elements:
                  - type: machine-compare
                    if:
                      type: function
                      name: isMachineCustom|/machine-configServer
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|configServer
                    label: Resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/configServer/properties/resources
                  - type: select
                    label: Node Selection Policy
                    schema: schema/properties/spec/properties/verticalScaling/properties/configServer/properties/nodeSelectionPolicy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        schema: discriminator/topologyKey-configServer
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|configServer
                      - type: input
                        label: Value
                        schema: discriminator/topologyValue-configServer
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|configServer
              - type: block-layout
                label: Mongos Vertical Scaling
                showLabels: true
                elements:
                  - type: machine-compare
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|mongos
                    if:
                      type: function
                      name: isMachineCustom|/machine-mongos
                    label: Resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/mongos/properties/resources
                  - type: select
                    label: Node Selection Policy
                    schema: schema/properties/spec/properties/verticalScaling/properties/mongos/properties/nodeSelectionPolicy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        schema: discriminator/topologyKey-mongos
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|mongos
                      - type: input
                        label: Value
                        schema: discriminator/topologyValue-mongos
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|mongos
              - type: block-layout
                label: Shard Vertical Scaling
                showLabels: true
                elements:
                  - type: select
                    schema: discriminator/machine-shard
                    label: Machine Profile
                    customClass: mt-20
                    disableUnselect: true
                    watcher:
                      paths:
                        - schema/properties/spec/properties/verticalScaling/properties/shard/properties/resources
                      func: onMachineChange|shard|/spec/shardTopology/shard/podTemplate/spec/resources
                  - type: machine-compare
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|shard
                    if:
                      type: function
                      name: isMachineCustom|/machine-shard
                    label: Resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/shard/properties/resources
                  - type: select
                    label: Node Selection Policy
                    schema: schema/properties/spec/properties/verticalScaling/properties/shard/properties/nodeSelectionPolicy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        schema: discriminator/topologyKey-shard
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|shard
                      - type: input
                        label: Value
                        schema: discriminator/topologyValue-shard
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|shard



      - type: block-layout
        if:
          type: function
          name: ifRequestTypeEqualsTo|VolumeExpansion
        label: Volume Expansion Form
        elements:
          - type: input
            label: Standalone
            schema: schema/properties/spec/properties/volumeExpansion/properties/standalone
            init:
              type: func
              value: setValueFromDbDetails|/spec/storage/resources/requests/storage
            if:
              type: function
              name: ifDbTypeEqualsTo|standalone|volumeExpansion
            validation:
              type: custom
              name: checkVolume|/spec/storage/resources/requests/storage|/spec/volumeExpansion/standalone
          - type: select
            label: Mode
            schema: schema/properties/spec/properties/volumeExpansion/properties/mode
            options:
              - text: Offline
                value: Offline
              - text: Online
                value: Online
            validation:
              type: required
          - type: input
            label: ReplicaSet
            schema: schema/properties/spec/properties/volumeExpansion/properties/replicaSet
            init:
              type: func
              value: setValueFromDbDetails|/spec/storage/resources/requests/storage
            if:
              type: function
              name: ifDbTypeEqualsTo|replicaSet|volumeExpansion
            validation:
              type: custom
              name: checkVolume|/spec/storage/resources/requests/storage|/spec/volumeExpansion/replicaSet
          - type: block-layout
            label: Sharded volume expansion
            if:
              type: function
              name: ifDbTypeEqualsTo|sharded|volumeExpansion
            elements:
              - type: input
                label: Config Server
                schema: schema/properties/spec/properties/volumeExpansion/properties/configServer
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/shardTopology/configServer/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/shardTopology/configServer/storage/resources/requests/storage|/spec/volumeExpansion/configServer
              - type: input
                label: Shard
                schema: schema/properties/spec/properties/volumeExpansion/properties/shard
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/shardTopology/shard/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/shardTopology/shard/storage/resources/requests/storage|/spec/volumeExpansion/shard


      # - type: block-layout
      #   label: Reconfigure Form
      #   if:
      #     name: ifRequestTypeEqualsTo|Reconfigure
      #     type: function
      #   elements:
      #     - type: block-layout
      #       if:
      #         name: ifDbTypeEqualsTo|standalone|configuration
      #         type: function
      #       label: Standalone
      #       showLabels: true
      #       elements:
      #         - label: reconfigurationType
      #           type: radio
      #           options: 
      #           - text: Select New Config Secret
      #             value: selectNewConfigSecret
      #           - text: Apply Config
      #             value: applyConfig
      #           - text: Remove
      #             value: remove
      #           schema: temp/properties/reconfigurationType
      #           watcher:
      #             func: onReconfigurationTypeChange|standalone
      #             paths:
      #               - temp/properties/reconfigurationType
      #           validation: 
      #             type: required
      #         - type: block-layout
      #           label: Standalone configuration config secret
      #           if:
      #             name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret
      #             type: function
      #           elements:
      #             - 




      - type: select
        label: Timeout
        schema: 'schema/properties/spec/properties/timeout'
        options:
          - text: 5 minutes
            value: 5m
          - text: 10 minutes
            value: 10m
          - text: 30 minutes
            value: 30m
          - text: 1 hour
            value: 1h
          - text: 2 hours
            value: 2h
          - text: 5 hours
            value: 5h
          - text: 10 hours
            value: 10h
      - type: radio
        label: apply
        schema: 'schema/properties/spec/properties/apply'
        init:
          type: func
          value: setApplyToIfReady
        options:
          - text: IfReady (OpsRequest will be applied if database is ready)
            value: IfReady
          - text: Always (OpsRequest will always be applied)
            value: Always
