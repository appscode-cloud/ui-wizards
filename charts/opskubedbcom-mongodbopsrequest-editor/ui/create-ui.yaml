type: multi-step-form
step:
  - type: single-step-form
    elements:
# common
      - type: input
        if:
          type: function
          name: showAndInitName
        schema: schema/properties/metadata/properties/name
        label: op_req_name
        validation:
          type: required
      - init:
          type: func
          value: initNamespace
        if:
          type: function
          name: showAndInitNamespace
        disable: isNamespaceDisabled
        loader: getNamespaces
        label: Namespace
        watcher:
          paths:
            - schema/properties/metadata/properties/namespace
          func: onNamespaceChange
        validation:
          type: required
        type: select
        hasGroup: true
        schema: 'schema/properties/metadata/properties/namespace'
      - type: select
        schema: 'schema#/properties/spec/properties/databaseRef/properties/name'
        validation:
          type: required
        refresh: true
        watcher:
          paths:
            - 'schema#/properties/spec/properties/databaseRef/properties/name'
          func: onDbChange
        label: Database Ref
        if:
          type: function
          name: showAndInitDatabaseRef
        loader: getDbs
        disable: isDatabaseRefDisabled
        init:
          type: func
          value: initDatabaseRef
      - type: label-element
        if:
          type: function
          name: showConfigureOpsrequestLabel
        label: config_ops_request
      - type: radio
        isHorizontal: true
        schema: schema/properties/spec/properties/type
        options:
          - description: Update your database to any version
            text: Update Version
            value: UpdateVersion
          - description: Scale up or down pod count
            text: Horizontal Scaling
            value: HorizontalScaling
          - description: Manage your CPU resources
            text: Vertical Scaling
            value: VerticalScaling
          - description: Manage your database size
            text: Volume Expansion
            value: VolumeExpansion
          - description: Restart your database
            text: Restart
            value: Restart
          - description: Reconfigure your database
            text: Reconfigure
            value: Reconfigure
          - description: Reconfigure your database tls configuration
            text: Reconfigure TLS
            value: ReconfigureTLS
        init:
          type: func
          value: getRequestTypeFromRoute
        disable: isDbDetailsLoading
        if:
          type: function
          name: showAndInitOpsRequestType
        label: Type of Ops Request
        watcher:
          paths:
            - schema/properties/spec/properties/type
          func: onRequestTypeChange
# UpdateVersion
      - type: block-layout
        showLabels: false
        if:
          type: function
          name: ifRequestTypeEqualsTo|UpdateVersion
        elements:
          - type: select
            label: Target Version
            init:
              type: func
              value: setValueFromDbDetails|/spec/version
            loader: getDbVersions
            schema: schema/properties/spec/properties/updateVersion/properties/targetVersion
# Horizontal Scale
      - type: block-layout
        label: Horizontal Scaling Form
        if:
          type: function
          name: ifRequestTypeEqualsTo|HorizontalScaling
        elements:
          - type: input
            label: Replicas
            if:
              type: function
              name: ifDbTypeEqualsTo|replicaSet|horizontalScaling
            init:
              type: func
              value: setValueFromDbDetails|/spec/replicas
            schema: schema/properties/spec/properties/horizontalScaling/properties/replicas
          - type: block-layout
            label: 'Sharded horizontal scaling'
            showLabels: true
            if:
              name: ifDbTypeEqualsTo|sharded|horizontalScaling
              type: function
            elements:
              - type: block-layout
                showLabels: true
                # label: Config Server horizontal Scaling
                elements:
                  - type: label-element
                    label: Config Server
                  - type: input
                    label: Replicas
                    schema: schema/properties/spec/properties/horizontalScaling/properties/configServer/properties/replicas
                    init:
                      type: func
                      value: setValueFromDbDetails|/spec/shardTopology/configServer/replicas
              - type: block-layout
                showLabels: true
                # label: Mongo Horizontal Scaling
                elements:
                  - type: label-element
                    label: Mongos
                  - type: input
                    label: Replicas
                    init:
                      type: func
                      value: setValueFromDbDetails|/spec/shardTopology/mongos/replicas
                    schema: schema/properties/spec/properties/horizontalScaling/properties/mongos/properties/replicas
              - type: block-layout
                # label: Shard horizontal Scaling
                showLabels: true
                elements:
                  - type: label-element
                    label: Shard
                  - type: input
                    label: Replicas
                    init: 
                      type: func
                      value: setValueFromDbDetails|/spec/shardTopology/shard/replicas
                    schema: schema/properties/spec/properties/horizontalScaling/properties/shard/properties/replicas
                  - type: input
                    label: Shards
                    init: 
                      type: func
                      value: setValueFromDbDetails|/spec/shardTopology/shard/shards
                    schema: schema#/properties/spec/properties/horizontalScaling/properties/shard/properties/shards
# vertical Scale           
      - type: block-layout
        if:
          type: function
          name: ifRequestTypeEqualsTo|VerticalScaling
        elements:
          - type: block-layout
            showLabels: true
            label: Standalone Vertical Scaling
            if:
              type: function
              name: ifDbTypeEqualsTo|standalone|verticalScaling
            elements:
              - type: machine-compare
                label: Resources
                if:
                  type: function
                  name: isMachineCustom|/machine-standalone
                loader: getMachines
                init:
                  type: func
                  value: setMachine|standalone                
                schema: schema/properties/spec/properties/verticalScaling/properties/standalone/properties/resources
              - type: select
                label: Node Selection Policy
                options:
                  - text: LabelSelector
                    value: LabelSelector
                  - text: Taint
                    value: Taint
                schema: schema/properties/spec/properties/verticalScaling/properties/standalone/properties/nodeSelectionPolicy
              - type: block-layout
                label: Topology
                showLabels: true
                elements:
                  - type: input
                    label: Key
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|standalone
                    schema: discriminator/topologyKey-standalone
                  - type: input
                    label: Value
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|standalone
                    schema: discriminator/topologyValue-standalone

          - type: block-layout
            if:
              type: function
              name: ifDbTypeEqualsTo|replicaSet|verticalScaling
            label: ReplicaSet Vertical Scaling
            showLabels: true
            elements:
              - type: machine-compare
                init:
                  type: func
                  value: setMachine|replicaSet
                loader: getMachines
                if:
                  type: function
                  name: isMachineCustom|/machine-replicaSet
                label: Resources
                schema: schema/properties/spec/properties/verticalScaling/properties/replicaSet/properties/resources
              - type: select
                label: Node Selection Policy
                schema: schema/properties/spec/properties/verticalScaling/properties/replicaSet/properties/nodeSelectionPolicy
                options:
                  - text: LabelSelector
                    value: LabelSelector
                  - text: Taint
                    value: Taint
              - type: block-layout
                label: Topology
                showLabels: true
                elements:
                  - type: input
                    label: Key
                    schema: discriminator/topologyKey-replicaSet
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|replicaSet
                  - type: input
                    label: Value
                    schema: discriminator/topologyValue-replicaSet
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|replicaSet

          - type: block-layout
            if:
              type: function
              name: ifDbTypeEqualsTo|sharded|verticalScaling
            label: Sharded Vertical Scaling
            showLabels: true
            elements:
              - type: block-layout
                label: Config Server Vertical Scaling
                showLabels: true
                elements:
                  - type: machine-compare
                    if:
                      type: function
                      name: isMachineCustom|/machine-configServer
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|configServer
                    label: Resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/configServer/properties/resources
                  - type: select
                    label: Node Selection Policy
                    schema: schema/properties/spec/properties/verticalScaling/properties/configServer/properties/nodeSelectionPolicy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        schema: discriminator/topologyKey-configServer
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|configServer
                      - type: input
                        label: Value
                        schema: discriminator/topologyValue-configServer
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|configServer
              - type: block-layout
                label: Mongos Vertical Scaling
                showLabels: true
                elements:
                  - type: machine-compare
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|mongos
                    if:
                      type: function
                      name: isMachineCustom|/machine-mongos
                    label: Resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/mongos/properties/resources
                  - type: select
                    label: Node Selection Policy
                    schema: schema/properties/spec/properties/verticalScaling/properties/mongos/properties/nodeSelectionPolicy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        schema: discriminator/topologyKey-mongos
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|mongos
                      - type: input
                        label: Value
                        schema: discriminator/topologyValue-mongos
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|mongos
              - type: block-layout
                label: Shard Vertical Scaling
                showLabels: true
                elements:
                  - type: select
                    schema: discriminator/machine-shard
                    label: Machine Profile
                    customClass: mt-20
                    disableUnselect: true
                    watcher:
                      paths:
                        - schema/properties/spec/properties/verticalScaling/properties/shard/properties/resources
                      func: onMachineChange|shard|/spec/shardTopology/shard/podTemplate/spec/resources
                  - type: machine-compare
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|shard
                    if:
                      type: function
                      name: isMachineCustom|/machine-shard
                    label: Resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/shard/properties/resources
                  - type: select
                    label: Node Selection Policy
                    schema: schema/properties/spec/properties/verticalScaling/properties/shard/properties/nodeSelectionPolicy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        schema: discriminator/topologyKey-shard
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|shard
                      - type: input
                        label: Value
                        schema: discriminator/topologyValue-shard
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|shard
# Volume Expansion
      - type: block-layout
        label: Volume Expansion Form
        if:
          type: function
          name: ifRequestTypeEqualsTo|VolumeExpansion
        elements:
          - type: input
            label: Standalone
            if:
              type: function
              name: ifDbTypeEqualsTo|standalone|volumeExpansion
            init:
              type: func
              value: setValueFromDbDetails|/spec/storage/resources/requests/storage
            validation:
              type: custom
              name: checkVolume|/spec/storage/resources/requests/storage|/spec/volumeExpansion/standalone
            schema: schema/properties/spec/properties/volumeExpansion/properties/standalone
          - type: select
            label: Mode
            options:
              - text: Offline
                value: Offline
              - text: Online
                value: Online
            validation:
              type: required
            schema: schema/properties/spec/properties/volumeExpansion/properties/mode
          - type: input
            label: ReplicaSet
            if:
              type: function
              name: ifDbTypeEqualsTo|replicaSet|volumeExpansion
            init:
              type: func
              value: setValueFromDbDetails|/spec/storage/resources/requests/storage
            validation:
              type: custom
              name: checkVolume|/spec/storage/resources/requests/storage|/spec/volumeExpansion/replicaSet
            schema: schema/properties/spec/properties/volumeExpansion/properties/replicaSet
          - type: block-layout
            label: Sharded volume expansion
            showLabels: true
            if:
              type: function
              name: ifDbTypeEqualsTo|sharded|volumeExpansion
            elements:
              - type: input
                label: Config Server
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/shardTopology/configServer/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/shardTopology/configServer/storage/resources/requests/storage|/spec/volumeExpansion/configServer
                schema: schema/properties/spec/properties/volumeExpansion/properties/configServer
              - type: input
                label: Shard
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/shardTopology/shard/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/shardTopology/shard/storage/resources/requests/storage|/spec/volumeExpansion/shard
                schema: schema/properties/spec/properties/volumeExpansion/properties/shard
# Reconfigure
      - type: block-layout
        label: Reconfigure Form
        showLabels: true
        if:
          name: ifRequestTypeEqualsTo|Reconfigure
          type: function
        elements:
          - type: block-layout
            label: Standalone
            showLabels: false
            if:
              name: ifDbTypeEqualsTo|standalone|configuration
              type: function
            elements:
              - type: radio
                label: Reconfigure Type
                validation: 
                  type: required
                options: 
                - text: Select New Config Secret
                  value: selectNewConfigSecret
                - text: Apply Config
                  value: applyConfig
                - text: Remove
                  value: remove                  
                watcher:
                  func: onReconfigurationTypeChange|standalone
                  paths:
                    - temp/properties/reconfigurationType
                schema: temp/properties/reconfigurationType
              - type: block-layout
                if:
                  name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret
                  type: function
                label: Standalone configuration config secret
                showLabels: false
                elements:
                - type: select
                  # add_new_button
                  label: Config Secret
                  if:
                    name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret
                    type: function
                  schema:  schema/properties/spec/properties/configuration/properties/standalone/properties/configSecret/properties/name
                  validation: 
                    type: required
                  refresh: true
                  loader: getConfigSecrets
                  init: 
                    type: func
                    value: setValueFromDbDetails|/spec/configSecret/name
              - type: array-object-form
                label: Apply Config
                schema: temp/properties/standalone/applyConfig
                validation: 
                  type: required
                watcher:
                  func: onApplyconfigChange|standalone
                  paths:
                    - temp/properties/standalone/applyConfig
                if:
                  name: ifReconfigurationTypeEqualsTo|applyConfig
                  type: function
                elements:
                  - type: input 
                    label: key
                    validation: 
                      type: required
                    schema: temp/properties/configArray/items/properties/key
                  - type: textarea
                    label: value
                    validation: 
                      type: required
                    schema:  temp/properties/configArray/items/properties/value
              - type: switch
                schema:  schema/properties/spec/properties/configuration/properties/standalone/properties/removeCustomConfig
                label: Remove CustomConfig
                if:
                  name: returnFalse
                  type: function
          - type: block-layout
            label: Replica Set
            showLabels: true
            if:
              name: ifDbTypeEqualsTo|replicaSet|configuration
              type: function
            elements:
              - type: radio
                label: Reconfigure Type
                validation: 
                  type: required
                options:
                - text: Select New Config Secret
                  value: selectNewConfigSecret
                - text: Apply Config
                  value: applyConfig
                - text: Remove
                  value: remove
                schema: temp/properties/reconfigurationType
                watcher:
                  func: onReconfigurationTypeChange|replicaSet
                  paths:
                    - temp/properties/reconfigurationType
              - type: block-layout
                label: Replica Set configuration config secret
                if:
                  name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret
                  type: function
                elements:
                  - type: select
                    # add new button
                    schema: schema/properties/spec/properties/configuration/properties/replicaSet/properties/configSecret/properties/name
                    validation: 
                      type: required
                    refresh: true
                    label: Config Secret
                    loader: getConfigSecrets
                    init:
                      type: func
                      value: setValueFromDbDetails|/spec/configSecret/name
              - type: array-object-form
                label: ApplyConfig
                schema: temp/properties/replicaSet/applyConfig
                validation: 
                  type: required
                if:
                  name: ifReconfigurationTypeEqualsTo|applyConfig
                  type: function
                elements:
                  - type: input
                    label: key
                    validation: 
                      type: required
                    schema: temp/properties/configArray/items/properties/key
                  - type: textarea
                    label: value
                    validation: 
                      type: required
                    schema: temp/properties/configArray/items/properties/value
              - type: switch
                schema: schema/properties/spec/properties/configuration/properties/replicaSet/properties/removeCustomConfig
                label: Remove CustomConfig
                if:
                  name: returnFalse
                  type: function
          - elements:
            - type: block-layout
              label: Config Server
              showLabels: true
              elements:
                - type: radio
                  label: Reconfigure Type
                  validation:
                    type: required
                  schema: temp/properties/reconfigurationType-configServer
                  options:
                    - text: Select New Config Secret
                      value: selectNewConfigSecret
                    - text: Apply Config
                      value: applyConfig
                    - text: Remove
                      value: remove
                  watcher:
                    func: onReconfigurationTypeChange|configServer|true
                    paths:
                      - temp/properties/reconfigurationType-configServer

                - type: block-layout
                  if:
                    name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret|configServer|true
                    type: function
                  elements:
                    - type: select
                      label: Config Secret
                      schema: schema/properties/spec/properties/configuration/properties/configServer/properties/configSecret/properties/name
                      validation:
                        type: required
                      init:
                        type: func
                        value: setValueFromDbDetails|/spec/shardTopology/configServer/configSecret/name
                      loader: getConfigSecrets
                      refresh: true
                      # add_new_button:
                      #   label: Create Config
                      #   target: _blank
                      #   url:
                      #     function: createSecretUrl

                - type: array-object-form
                  label: Apply Config
                  schema: temp/properties/configServer/applyConfig
                  validation:
                    type: required
                  if:
                    name: ifReconfigurationTypeEqualsTo|applyConfig|configServer|true
                    type: function
                  watcher:
                    func: onApplyconfigChange|configServer
                    paths:
                      - temp/properties/configServer/applyConfig
                  elements:
                    - type: input
                      label: Key
                      schema: temp/properties/configArray/items/properties/key
                      validation:
                        type: required
                    - type: textarea
                      label: Value
                      schema: temp/properties/configArray/items/properties/value
                      validation:
                        type: required

                - type: switch
                  label: Remove CustomConfig
                  schema: schema/properties/spec/properties/configuration/properties/configServer/properties/removeCustomConfig
                  if:
                    name: returnFalse
                    type: function

            - type: block-layout
              label: Mongos
              showLabels: true
              elements:
                - type: radio
                  label: Reconfigure Type
                  validation:
                    type: required
                  schema: temp/properties/reconfigurationType-mongos
                  options:
                    - text: Select New Config Secret
                      value: selectNewConfigSecret
                    - text: Apply Config
                      value: applyConfig
                    - text: Remove
                      value: remove
                  watcher:
                    func: onReconfigurationTypeChange|mongos|true
                    paths:
                      - temp/properties/reconfigurationType-mongos

                - type: block-layout
                  if:
                    name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret|mongos|true
                    type: function
                  elements:
                    - type: select
                      label: Config Secret
                      schema: schema/properties/spec/properties/configuration/properties/mongos/properties/configSecret/properties/name
                      validation:
                        type: required
                      init:
                        type: func
                        value: setValueFromDbDetails|/spec/shardTopology/mongos/configSecret/name
                      loader: getConfigSecrets
                      refresh: true
                      # add_new_button:
                      #   label: Create Config
                      #   target: _blank
                      #   url:
                      #     function: createSecretUrl

                - type: array-object-form
                  label: Apply Config
                  schema: temp/properties/mongos/applyConfig
                  validation:
                    type: required
                  if:
                    name: ifReconfigurationTypeEqualsTo|applyConfig|mongos|true
                    type: function
                  watcher:
                    func: onApplyconfigChange|mongos
                    paths:
                      - temp/properties/mongos/applyConfig
                  elements:
                    - type: input
                      label: Key
                      schema: temp/properties/configArray/items/properties/key
                      validation:
                        type: required
                    - type: textarea
                      label: Value
                      schema: temp/properties/configArray/items/properties/value
                      validation:
                        type: required
                - type: switch
                  label: Remove CustomConfig
                  schema: schema/properties/spec/properties/configuration/properties/mongos/properties/removeCustomConfig
                  if:
                    name: returnFalse
                    type: function

            - type: block-layout
              label: Shard
              showLabels: true
              elements:
                - type: radio
                  label: Reconfigure Type
                  validation:
                    type: required
                  schema: temp/properties/reconfigurationType-shard
                  options:
                    - text: Select New Config Secret
                      value: selectNewConfigSecret
                    - text: Apply Config
                      value: applyConfig
                    - text: Remove
                      value: remove
                  watcher:
                    func: onReconfigurationTypeChange|shard|true
                    paths:
                      - temp/properties/reconfigurationType-shard

                - type: block-layout
                  if:
                    name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret|shard|true
                    type: function
                  elements:
                    - type: select
                      label: Config Secret
                      schema: schema/properties/spec/properties/configuration/properties/shard/properties/configSecret/properties/name
                      validation:
                        type: required
                      init:
                        type: func
                        value: setValueFromDbDetails|/spec/shardTopology/shard/configSecret/name
                      loader: getConfigSecrets
                      refresh: true
                      # add_new_button:
                      #   label: Create Config
                      #   target: _blank
                      #   url:
                      #     function: createSecretUrl

                - type: array-object-form
                  label: Apply Config
                  schema: temp/properties/shard/applyConfig
                  validation:
                    type: required
                  if:
                    name: ifReconfigurationTypeEqualsTo|applyConfig|shard|true
                    type: function
                  watcher:
                    func: onApplyconfigChange|shard
                    paths:
                      - temp/properties/shard/applyConfig
                  elements:
                    - type: input
                      label: Key
                      schema: temp/properties/configArray/items/properties/key
                      validation:
                        type: required
                    - type: textarea
                      label: Value
                      schema: temp/properties/configArray/items/properties/value
                      validation:
                        type: required

                - type: switch
                  label: Remove CustomConfig
                  schema: schema/properties/spec/properties/configuration/properties/shard/properties/removeCustomConfig
                  if:
                    name: returnFalse
                    type: function

            type: block-layout
            label: Sharded Reconfigure form
            showLabels: true
            if:
              name: ifDbTypeEqualsTo|sharded|configuration
              type: function

# Reconfigure TLS
      # - type: block-layout
      #   label: TLS
      #   showLabels: true
      #   if:
      #     name: ifRequestTypeEqualsTo|ReconfigureTLS
      #     type: function
      #   elements:
      #     - type: radio
      #       label: TLS Operation
      #       schema: temp/properties/tlsOperation
      #       options:
      #         - text: Update
      #           value: update
      #         - text: Rotate
      #           value: rotate
      #         - text: Remove
      #           value: remove
      #       init:
      #         type: func
      #         value: initTlsOperation
      #       if:
      #         name: hasTlsField
      #         type: function
      #       watcher:
      #         func: onTlsOperationChange
      #         paths:
      #           - temp/properties/tlsOperation

      #     - type: switch
      #       label: remove
      #       schema: schema/properties/spec/properties/tls/properties/remove
      #       if:
      #         name: returnFalse
      #         type: function

      #     - type: switch
      #       label: rotateCertificates
      #       schema: schema/properties/spec/properties/tls/properties/rotateCertificates
      #       if:
      #         name: returnFalse
      #         type: function

      #     - type: block-layout
      #       label: Issuer Reference
      #       if:
      #         name: showIssuerRefAndCertificates
      #         type: function
      #       elements:
      #         - type: input
      #           label: API Group
      #           schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/apiGroup
      #           init:
      #             type: func
      #             value: initIssuerRefApiGroup
      #           disable: true
      #         - type: select
      #           label: Kind
      #           schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/kind
      #           options:
      #             - text: Issuer
      #               value: Issuer
      #             - text: ClusterIssuer
      #               value: ClusterIssuer
      #           validation:
      #             type: custom
      #             name: isIssuerRefRequired
      #           init:
      #             type: func
      #             value: setValueFromDbDetails|/spec/tls/issuerRef/kind

      #         - type: select
      #           label: Name
      #           schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/name
      #           loader: getIssuerRefsName
      #           # allowUserDefinedOption: true
      #           validation:
      #             type: custom
      #             name: isIssuerRefRequired
      #           init:
      #             type: func
      #             value: setValueFromDbDetails|/spec/tls/issuerRef/name






# common
      - type: select
        label: Timeout
        schema: 'schema/properties/spec/properties/timeout'
        options:
          - text: 5 minutes
            value: 5m
          - text: 10 minutes
            value: 10m
          - text: 30 minutes
            value: 30m
          - text: 1 hour
            value: 1h
          - text: 2 hours
            value: 2h
          - text: 5 hours
            value: 5h
          - text: 10 hours
            value: 10h
      - type: radio
        label: apply
        schema: 'schema/properties/spec/properties/apply'
        init:
          type: func
          value: setApplyToIfReady
        options:
          - text: IfReady (OpsRequest will be applied if database is ready)
            value: IfReady
          - text: Always (OpsRequest will always be applied)
            value: Always




