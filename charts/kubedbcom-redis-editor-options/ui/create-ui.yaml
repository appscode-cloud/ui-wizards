steps:
- form:
    discriminator:
      createAuthSecret:
        default: false
        type: boolean
      configDatabase:
        default: false
        type: boolean
      monitoring: 
        default: false
        type: boolean
      backup:
        default: false
        type: boolean
    elements:
    - disabled: isVariantAvailable
      label:
        text: labels.database.name
      schema:
        $ref: schema#/properties/metadata/properties/release/properties/name
      type: input
    - add_new_button:
        label: labels.add_new_namespace
        target: _blank
        url:
          function: getCreateNameSpaceUrl
      disabled: isVariantAvailable
      fetch: getNamespaces
      label:
        text: labels.namespace
      refresh: true
      schema:
        $ref: schema#/properties/metadata/properties/release/properties/namespace
      type: select
    - if: isToggleOn|deployment
      hasDescription: true
      label:
        text: labels.deployment.name
      options:
        - text: Shared
          value: Shared
          description: labels.deployment.shared
        - text: Dedicated
          value: Dedicated
          description: labels.deployment.dedicated
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/deployment/properties/default
      type: radio
    - if: isToggleOn|clusterTier
      label:
        text: labels.clusterTier
      options:
      - text: General Purpose
        value: GeneralPurpose
      - text: Memory Optimized
        value: MemoryOptimized
      - text: CPU Optimized
        value: CPUOptimized
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/clusterTier/properties/default
      type: radio
    - disableUnselect: true
      if: isToggleOn|clusterTier/placement
      label:
        text: labels.placement
      fetch: getAdminOptions|clusterTier/placement
      required: true
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/clusterTier/properties/placement/properties/default
      type: select
    - disableUnselect: true
      if: isToggleOn|clusterTier/nodeTopology
      label:
        text: labels.nodeTopology
      fetch: getNodeTopology
      refresh: true
      required: true
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/clusterTier/properties/nodeTopology/properties/default
      type: select
    - disableUnselect: true
      fetch: getAdminOptions|databases/Redis/versions
      label:
        text: labels.database.version
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/databases/properties/Redis/properties/versions/properties/default
      type: select
      required: true
      if: isToggleOn|databases/Redis/versions
    - isArray: true
      keys:
        label:
          text: labels.labels.key
      label:
        text: labels.labels.label
      schema:
        $ref: schema#/properties/spec/properties/labels
      type: key-value-input-form
      values:
        label:
          text: labels.labels.value
        schema:
          $ref: schema#/properties/spec/properties/labels/additionalProperties
        type: input
    - isArray: true
      keys:
        label:
          text: labels.annotations.key
      label:
        text: labels.annotations.label
      schema:
        $ref: schema#/properties/spec/properties/annotations
      type: key-value-input-form
      values:
        label:
          text: labels.annotations.value
        schema:
          $ref: schema#/properties/spec/properties/annotations/additionalProperties
        type: input
    - hasDescription: true
      label:
        text: labels.database.mode
      options:
      - description: options.database.mode.Standalone.description
        text: options.database.mode.Standalone.label
        value: Standalone
      - description: options.database.mode.Cluster.description
        text: options.database.mode.Cluster.label
        value: Cluster
      - description: options.database.mode.Sentinel.description
        text: options.database.mode.Sentinel.label
        value: Sentinel
      schema:
        $ref: schema#/properties/spec/properties/mode
      type: radio
    - if: isEqualToModelPathValue|Cluster|/spec/mode
      label:
        text: labels.master
      schema:
        $ref: schema#/properties/spec/properties/cluster/properties/master
      type: input
    - if: isEqualToModelPathValue|Cluster|/spec/mode
      label:
        text: labels.replicaset.number
      schema:
        $ref: schema#/properties/spec/properties/cluster/properties/replicas
      type: input
    - discriminator:
        createSentinel:
          default: true
          type: boolean
      elements:
      - label:
          text: labels.sentinel_section
        type: label-element
      - onChange: onCreateSentinelChange
        options:
        - text: options.sentinelType.existingSentinel.label
          value: false
        - text: options.sentinelType.customSentinel.label
          value: true
        schema:
          $ref: discriminator#/properties/createSentinel
        type: radio
      - fetch: getResources|core|v1|namespaces
        if: showSentinelNameAndNamespace
        keepEmpty: true
        label:
          text: labels.namespace
        schema:
          $ref: schema#/properties/spec/properties/sentinelRef/properties/namespace
        type: select
      - allowUserDefinedOption: true
        fetch: getRedisSentinels
        if: showSentinelNameAndNamespace
        keepEmpty: true
        label:
          text: labels.name
        schema:
          $ref: schema#/properties/spec/properties/sentinelRef/properties/name
        type: select
      - label:
          text: labels.replicaset.number
        minValue: 2
        schema:
          $ref: schema#/properties/spec/properties/replicas
        type: input
      if: isEqualToModelPathValue|Sentinel|/spec/mode
      type: single-step-form
    - if: isNotEqualToModelPathValue|Sentinel|/spec/mode
      label:
        text: labels.storage.size
      schema:
        $ref: schema#/properties/spec/properties/persistence/properties/size
      type: input
    - elements:
      - computed: setMachineToCustom
        fetch: getMachineListForOptions
        label:
          text: Machine
        onChange: setResourceLimit
        schema:
          $ref: schema#/properties/spec/properties/podResources/properties/machine
        type: select
      - computed: setLimitsCpuOrMem
        disabled: isMachineNotCustom
        label:
          text: labels.resources
        schema:
          $ref: schema#/properties/spec/properties/podResources/properties/resources
        type: resource-input-form
      if: notEqualToDatabaseMode|Sharded
      label:
        text: labels.machine_profile
      show_label: true
      type: single-step-form
    - hasDescription: true
      label:
        text: labels.deletionPolicy
      onChange: setStorageClass
      options:
      - description: options.deletionPolicy.delete.description
        text: options.deletionPolicy.delete.label
        value: Delete
      - description: options.deletionPolicy.halt.description
        text: options.deletionPolicy.halt.label
        value: Halt
      - description: options.deletionPolicy.wipeOut.description
        text: options.deletionPolicy.wipeOut.label
        value: WipeOut
      - description: options.deletionPolicy.doNotTerminate.description
        text: options.deletionPolicy.doNotTerminate.label
        value: DoNotTerminate
      schema:
        $ref: schema#/properties/spec/properties/deletionPolicy
      type: radio
    - fetch: getAdminOptions|storageClasses
      if: isNotEqualToModelPathValue|Sentinel|/spec/mode
      required: true
      label:
        text: labels.storage.class
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/storageClasses/properties/default
      type: select
    - label:
        text: Provide Authentication Credentials?
      onChange: onAuthChange
      schema:
        $ref: discriminator#/createAuthSecret
      type: switch  
    - if: showAuthPasswordField
      label:
        text: labels.name
      schema:
        $ref: schema#/properties/spec/properties/authSecret/properties/name
      type: input
    - if: showAuthPasswordField
      label:
        text: labels.password
      schema:
        $ref: schema#/properties/spec/properties/authSecret/properties/password
      type: input
    - label:
        text: Configure Database?
      schema:
        $ref: discriminator#/configDatabase
      onChange: clearConfiguration
      type: switch
    - label:
        text: Configuration
      if: isConfigDatabaseOn
      schema:
        $ref: schema#/properties/spec/properties/configuration
      type: editor
    - if: isToggleOn|tls
      label:
        text: Enable TLS?
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/tls/properties/default
      type: switch
    - fetch: getAdminOptions|clusterIssuers
      if: showIssuer
      label:
        text: labels.clusterIssuers
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/clusterIssuers/properties/default
      type: select
    - if: isToggleOn|webUI
      label:
        text: Enable Web UI?
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/webUI/properties/default
      type: switch
    - computed: setMonitoring
      if: isToggleOn|monitoring
      label:
        text: labels.enable_monitoring
      onChange: updateAlertValue
      schema:
        $ref: discriminator#/monitoring
      type: switch
    - customClass: mt-10
      if: showAlerts
      label:
        text: labels.alert.options
      options:
      - text: None
        value: none
      - text: Critical
        value: critical
      - text: Warning
        value: warning
      - text: Info
        value: info
      schema:
        $ref: schema#/properties/form/properties/alert/properties/enabled
      sortable: true
      type: select
    - if: isToggleOn|archiver
      label:
        text: Enable Archiver?
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/archiver/properties/default
      type: switch
    - computed: isBackupCluster
      if: isToggleOn|backup
      label:
        text: Enable Backup?
      onChange: onBackupSwitch
      schema:
        $ref: discriminator#/backup
      type: switch
    - elements:
      - hasDescription: true
        onChange: dedicatedOnChange
        options:
        - description: Create the database in shared node pool
          text: Shared node pool
          value: false
        - description: Create a dedicated node pool for the database
          text: Dedicated node pool
          value: true
        schema:
          $ref: schema#/properties/form/properties/capi/properties/dedicated
        type: radio
      - fetch: getZones
        if: showMultiselectZone
        label:
          text: Zones
        onChange: zonesOnChange
        schema:
          $ref: schema#/properties/form/properties/capi/properties/zones
        type: multiselect
      - fetch: getZones
        if: showSelectZone
        label:
          text: Zones
        onChange: zonesOnChange
        schema:
          $ref: schema#/properties/form/properties/capi/properties/zones
        type: select
      - fetch: getSKU
        if: ifZones
        label:
          text: SKU
        schema:
          $ref: schema#/properties/form/properties/capi/properties/sku
        type: select
      if: ifCapiProviderIsNotEmpty
      label:
        text: Database Profile
      show_label: true
      type: single-step-form
    - label:
        text: labels.configOptions
      type: label-element
    - cluster:
        $ref: store#/route/params/cluster
      hasDependencies: true
      hasDescription: true
      options:
      - description: options.configOptions.alert.description
        text: options.configOptions.alert.label
        value: alert
      - description: options.configOptions.topology.description
        text: options.configOptions.topology.label
        value: topology
      - dependencies:
        - group: cert-manager.io
          name: Cert-Manager
          resource: issuers
          url: https://cert-manager.io/docs/
          version: v1
        description: options.configOptions.tls.description
        text: options.configOptions.tls.label
        value: tls
      - description: options.configOptions.initialization.description
        text: options.configOptions.initialization.label
        value: initialization
      - dependencies:
        - group: stash.appscode.com
          name: Stash
          resource: backupconfigurations
          url: https://stash.run/
          version: v1beta1
        description: options.configOptions.backup.description
        text: options.configOptions.backup.label
        value: backupconfiguration
      - description: options.configOptions.networking.description
        text: options.configOptions.networking.label
        value: networking
      - dependencies:
        - group: monitoring.coreos.com
          name: Prometheus Operator
          resource: servicemonitors
          url: https://github.com/prometheus-operator
          version: v1
        description: options.configOptions.monitoring.description
        text: options.configOptions.monitoring.label
        value: monitoring
      - description: options.configOptions.customConfig.description
        text: options.configOptions.customConfig.label
        value: custom-config
      - description: options.configOptions.podTemplate.description
        text: options.configOptions.podTemplate.label
        value: pod-template
      owner:
        $ref: store#/route/params/user
      type: configure-options
    type: single-step-form
  id: options
  title: steps.0.label
type: multi-step-form
