{{- $res := .Values.spec.resources -}}
{{- $machines := .Files.Get "data/machines.yaml" | fromYaml -}}
{{- if and .Values.spec.machine (hasKey $machines .Values.spec.machine) }}
  {{- $res = get (get $machines .Values.spec.machine) "resources" }}
{{- end }}
{{ $poolName := printf "%s-%s-%s" .Values.form.capi.clusterName .Release.Namespace (include "kubedbcom-redis-editor-options.fullname" .) }}

apiVersion: kubedb.com/v1alpha2
kind: Redis
metadata:
  name: {{ include "kubedbcom-redis-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-redis-editor-options.labels" . | nindent 4 }}
{{- if .Values.spec.annotations }}
  annotations:
    {{- include "kubedbcom-redis-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.version | quote }}
{{- if eq .Values.spec.mode "Standalone" }}
  replicas: 1
{{- else if eq .Values.spec.mode "Cluster" }}
  mode: Cluster
  cluster:
    master: {{ .Values.spec.cluster.master }}
    replicas: {{ .Values.spec.cluster.replicas }}
{{- else if eq .Values.spec.mode "Sentinel" }}
  mode: Sentinel
  replicas: {{ .Values.spec.replicas }}
  sentinelRef:
    name: {{ default (printf "%s-sentinel" (include "kubedbcom-redis-editor-options.fullname" .)) .Values.spec.sentinelRef.name }}
    namespace: {{ default .Release.Namespace .Values.spec.sentinelRef.namespace }}
{{- end }}
  storageType: Durable
  storage:
    storageClassName: {{ .Values.spec.storageClass.name }}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.spec.persistence.size }}
  podTemplate:
    spec:
      resources:
        {{- toYaml $res | nindent 8 }}
      {{- if and .Values.form.capi.provider .Values.form.capi.dedicated }}
      tolerations:
        - key: dedicated
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      {{- end }}
      {{- if and (eq .Values.form.capi.provider "capa") .Values.form.capi.dedicated }}
      nodeSelector:
        eks.amazonaws.com/nodegroup: {{ $poolName }}
      {{- end }}
      {{- if and (eq .Values.form.capi.provider "capg") .Values.form.capi.dedicated }}
      nodeSelector:
        gke.cloud.google.com/nodepool: {{ $poolName }}
      {{- end }}
      {{- if and (eq .Values.form.capi.provider "capz") .Values.form.capi.dedicated }}
      nodeSelector:
        kubernetes.azure.com/agentpool: {{ $poolName }}
      {{- end }}
  terminationPolicy: {{ .Values.spec.terminationPolicy }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if (and .Values.spec.monitoring .Values.spec.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.monitoring.exporter }}
      exporter:
        resources:
          {{- toYaml .resources | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
