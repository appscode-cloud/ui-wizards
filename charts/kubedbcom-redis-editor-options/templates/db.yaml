{{- $profiles := "" -}}
{{- with $ctx := . -}}
{{- $profiles = include "resource-profiles" $ctx | fromJson -}}
{{- end -}}

{{- define "common.placement" -}}

{{- if .Values.spec.admin.clusterTier.placement.default }}
podPlacementPolicy:
  name: {{ .Values.spec.admin.clusterTier.placement.default }}
{{- end }}

nodeSelector:
  kubernetes.io/os: linux
{{- if .Values.spec.admin.nodeSelector }}
{{- toYaml .Values.spec.admin.nodeSelector | nindent 2 }}
{{- end }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
  app: rediss.kubedb.com
  instance: {{ include "kubedbcom-redis-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  nodepool: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
{{- end }}

{{- if or .Values.spec.admin.tolerations (eq .Values.spec.admin.deployment.default "Dedicated") }}
tolerations:
{{- if .Values.spec.admin.tolerations }}
{{- toYaml .Values.spec.admin.tolerations | nindent 2 }}
{{- end }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
  - key: app
    operator: "Equal"
    value: "rediss.kubedb.com"
    effect: "NoSchedule"
  - key: instance
    operator: "Equal"
    value: {{ include "kubedbcom-redis-editor-options.fullname" . }}
    effect: "NoSchedule"
  - key: namespace
    operator: "Equal"
    value: {{ .Release.Namespace }}
    effect: "NoSchedule"
  - key: nodepool
    operator: "Equal"
    value: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
    effect: "NoSchedule"
{{- end }}
{{- end }}
{{- end }}

{{- if .Values.spec.admin.gitOps.enable.default }}
apiVersion: gitops.kubedb.com/v1alpha1
{{ else }}
apiVersion: kubedb.com/v1
{{- end }}
kind: Redis
metadata:
  name: {{ include "kubedbcom-redis-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-redis-editor-options.labels" . | nindent 4 }}
  annotations:
    app.kubernetes.io/cluster-tier: {{ .Values.spec.admin.clusterTier.default }}
    {{- if $profiles }}
    kubernetes.io/instance-type: {{ printf "%s" (include "resource-profiles" .) }}
    {{- end -}}
{{- if .Values.spec.annotations }}
    {{- include "kubedbcom-redis-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.admin.databases.Redis.versions.default | quote }}
{{- if eq .Values.spec.mode "Standalone" }}
  replicas: 1
{{- else if eq .Values.spec.mode "Cluster" }}
  mode: Cluster
  cluster:
    shards: {{ .Values.spec.cluster.master }}
    replicas: {{ .Values.spec.cluster.replicas }}
    {{- if and .Values.spec.cluster.announce .Values.spec.cluster.announce.shards }}
    announce:
      type: {{ .Values.spec.cluster.announce.type }}
      shards:
      {{- range .Values.spec.cluster.announce.shards }}
        - endpoints:
          {{- range .endpoints }}
          - {{ . }}
          {{- end }}
      {{- end }}
    {{- end }}
{{- else if eq .Values.spec.mode "Sentinel" }}
  mode: Sentinel
  replicas: {{ .Values.spec.replicas }}
  sentinelRef:
    name: {{ default (printf "%s-sentinel" (include "kubedbcom-redis-editor-options.fullname" .)) .Values.spec.sentinelRef.name }}
    namespace: {{ default .Release.Namespace .Values.spec.sentinelRef.namespace }}
{{- end }}
  storageType: Durable
  storage:
    storageClassName: {{ .Values.spec.admin.storageClasses.default }}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.spec.persistence.size }}
  podTemplate:
    spec:
      securityContext:
        fsGroup: {{ .Values.spec.openshift.securityContext.runAsUser | default 999 }}
      containers:
        - name: redis
          resources:
            {{- toYaml .res | nindent 12 }}
          securityContext:
            {{- include "container.securityContext" . | nindent 12 }}
          {{- if eq .Values.spec.mode "Sentinel" }}
        - name: rd-coordinator
          resources:
            {{- toYaml .sidecar_res | nindent 12 }}
          securityContext:
            {{- include "container.securityContext" . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: redis-init
          resources:
            {{- toYaml .init_res | nindent 12 }}
          securityContext:
            {{- include "container.securityContext" . | nindent 12 }}
      {{- include "common.placement" . | nindent 6 }}
  deletionPolicy: {{ .Values.spec.deletionPolicy }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if .Values.spec.authSecret.password }}
  authSecret:
    name: {{ include "kubedbcom-redis-editor-options.fullname" . }}-auth
{{- end }}
{{- if .Values.spec.configuration }}
  configSecret:
    name: {{ include "kubedbcom-redis-editor-options.fullname" . }}-config
{{- end }}
{{- if .Values.spec.admin.tls.default }}
  tls:
    issuerRef:
      apiGroup: "cert-manager.io"
      kind: ClusterIssuer
      name: {{ .Values.spec.admin.clusterIssuers.default }}
{{- end }}
{{- if (and .Values.spec.admin.monitoring .Values.spec.admin.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.admin.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.admin.monitoring.exporter }}
      exporter:
        resources:
          {{- toYaml .resources | nindent 10 }}
        securityContext:
          {{- include "container.securityContext" $ | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
