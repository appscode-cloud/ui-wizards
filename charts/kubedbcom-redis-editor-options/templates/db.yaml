{{- $machines := .Files.Get "data/machines.yaml" | fromYaml -}}
{{- $res := dict -}}
{{- $res = .Values.spec.podResources.resources -}}
{{- if and .Values.spec.podResources.machine (hasKey $machines .Values.spec.podResources.machine) }}
  {{- $res = get (get $machines .Values.spec.podResources.machine) "resources" }}
{{- end }}

apiVersion: kubedb.com/v1
kind: Redis
metadata:
  name: {{ include "kubedbcom-redis-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-redis-editor-options.labels" . | nindent 4 }}
{{- if .Values.spec.annotations }}
  annotations:
    {{- include "kubedbcom-redis-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.admin.databases.Redis.versions.default | quote }}
{{- if eq .Values.spec.mode "Standalone" }}
  replicas: 1
{{- else if eq .Values.spec.mode "Cluster" }}
  mode: Cluster
  cluster:
    master: {{ .Values.spec.cluster.master }}
    replicas: {{ .Values.spec.cluster.replicas }}
{{- else if eq .Values.spec.mode "Sentinel" }}
  mode: Sentinel
  replicas: {{ .Values.spec.replicas }}
  sentinelRef:
    name: {{ default (printf "%s-sentinel" (include "kubedbcom-redis-editor-options.fullname" .)) .Values.spec.sentinelRef.name }}
    namespace: {{ default .Release.Namespace .Values.spec.sentinelRef.namespace }}
{{- end }}
  storageType: Durable
  storage:
    storageClassName: {{ .Values.spec.admin.storageClasses.default }}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.spec.persistence.size }}
  podTemplate:
    spec:
      containers:
        - name: redis
          resources:
            {{- toYaml $res | nindent 12 }}
      podPlacementPolicy:
        name: {{ .Values.spec.admin.clusterTier.placement.default }}
      {{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
      nodeSelector:
        app: redises.kubedb.com
        instance: {{ include "kubedbcom-redis-editor-options.fullname" . }}
        namespace: {{ .Release.Namespace }}
        nodepool: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
      tolerations:
        - key: app
          operator: "Equal"
          value: "redises.kubedb.com"
          effect: "NoSchedule"
        - key: instance
          operator: "Equal"
          value: {{ include "kubedbcom-redis-editor-options.fullname" . }}
          effect: "NoSchedule"
        - key: namespace
          operator: "Equal"
          value: {{ .Release.Namespace }}
          effect: "NoSchedule"
        - key: nodepool
          operator: "Equal"
          value: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
          effect: "NoSchedule"
      {{- end }}
  deletionPolicy: {{ .Values.spec.deletionPolicy }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if .Values.spec.authSecret.password }}
  authSecret:
    name: {{ include "kubedbcom-redis-editor-options.fullname" . }}-auth
{{- end }}
{{- if .Values.spec.configuration }}
  configSecret:
    name: {{ include "kubedbcom-redis-editor-options.fullname" . }}-config
{{- end }}
{{- if .Values.spec.admin.tls.default }}
  tls:
    issuerRef:
      apiGroup: "cert-manager.io"
      kind: ClusterIssuer
      name: {{ .Values.spec.admin.clusterIssuers.default }}
{{- end }}
{{- if (and .Values.spec.admin.monitoring .Values.spec.admin.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.admin.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.admin.monitoring.exporter }}
      exporter:
        resources:
          {{- toYaml .resources | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.admin.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
