en:
  info:
    metadata:
      release:
        name: Database Name
        namespace: Namespace
    spec:
      annotations: Annotations
      authSecret:
        name: Name
        password: Password
      configOptions: Configuration Options
      database:
        mode: Database Mode
        secret: Database Secret Type
      labels: Labels
      password: Password
      replicaset:
        name: Replica Set Name
        number: Replica number
      shards:
        nodes: Shard Nodes
        number: Shards Number
      storage:
        class: Storage Class Name
        size: Storage Size
      terminalPolicy: Terminal Policy
  labels:
    agent: Select a Monitoring Method
    alert: 
      label: Alert Profile
      alert_enable_question: Enable Alert?
      options: Alert Options
    alias: Alias
    annotations:
      key: Key
      label: Annotations
      value: Value
    api_group: API Group
    args: Args
    backup:
      invoker: Backup Invoker
      title: Schedule a Backup?
    backupBlueprint:
      name: Blueprint Name
      schedule: Schedule
      taskParameters: Task Parameters
      title: Backup Blueprint
    backupConfiguration:
      retentionPolicy:
        keepLast: Keep Last
        name: Name
        prune: Prune
        title: Retention Policy
      schedule: Schedule
      targetReference:
        apiVersion: Target ApiVersion
        kind: Target Kind
        name: Reference Name
        title: Target Reference
        type: Reference Type
      taskName: Task Name
      title: Backup Configuration
    basic_info: Basic Information
    placement: Placement Policy
    certificate: Certificate
    certificates: Certificates
    clickHouseKeeper: clickHouseKeeper
    cluster: 
      cluster: Cluster
      name: Name
      replicas: Replicas
      shards: Shards
    cluster_ip: Cluster IP
    clusterIssuers: Cluster Issuer
    clusterTier: Cluster Tier
    configOptions: Configuration Options
    configServer: Config Server
    config_map_key: ConfigMap Key
    config_map_name: ConfigMap Name
    configuration_files: Configuration Files
    configuration_source: Configuration Source
    controller_annotations: Controller Annotations
    countries: Countries
    country: Country
    cpu: CPU
    customize_exporter: Customize Exporter Sidecar
    dataSource: Data Source
    database:
      mode: Database Mode
      name: Database Name
      secret: Database Secret
      version: Database Version
    deployment: 
      name: Deployment Type
      shared: For exploring databases when high-performance is not required.
      dedicated: For production applications with sophisticated workload requirements.
    dns_name: DNS Name
    dns_names: DNS Names
    duration: Duration
    effect: Effect
    enable_monitoring: Enable Monitoring
    enable_tls: Enable TLS
    endpoint: Endpoint
    endpoints: Endpoints
    environmentVariablesFrom: Environemt Variables From
    environment_variable: Environment Variable
    environment_variables: Environment Variables
    exporter_configuration: Exporter Configuration
    external_ip: External IP
    external_ips: External IPs
    external_traffic_policy: External Traffic Policy
    fs_group: Fs Group
    gateways: Gateways
    host: Host
    health_check_node_port: Health Check Node Port
    honor_labels: Honor labels
    image_pull_secrets: Image Pull Secrets
    initialization: Pre-populate your ClickHouse from backup/another database
    interval: Interval
    ip_address: IP Address
    ip_addresses: IP Addresses
    issuer_ref: Issuer Reference
    key: Key
    kind: Kind
    labels:
      key: Key
      label: Labels
      value: Value
    level: Level
    limit: Limit
    load_balancer_ip: Load Balancer IP
    load_balancer_source_range: Load Balancer Source Range
    load_balancer_source_ranges: Load Balancer Source Ranges
    machine: Machine
    machine_profile: Machine Profile
    match_expression: Match Expression
    match_expressions: Match Expressions
    match_field: Match Field
    match_fields: Match Fields
    memory: Memory
    mongos: Mongos
    name: Name
    namespace: Namespace
    new_secret_password: New Database Secret
    node_port: Node Port
    node_selector: Node Selector
    node_selector_terms: Node Selector Terms
    nodeTopology: Node Topology
    operator: Operator
    organization: Organization
    organizational_unit: Organizational Unit
    organizational_units: Organizational Units
    organizations: Organizations
    password: Password (Leave it blank to auto generate password)
    path: Path
    pod_annotations: Pod Annotations
    pod_spec: Pod Spec
    pod_template: Pod Template
    port: Port
    ports: Ports
    prePopulateDatabase: Do you want to pre-populate your database?
    preferred_during_scheduling_ignored_during_execution: Preferred During Scheduling Ignored During Execution
    prometheus: Prometheus
    province: Province
    provinces: Provinces
    renew_before: Renew Before
    replicaset:
      name: Replicaset Name
      number: Replica Number
    repositories:
      backend:
        bucket: Bucket
        container: Container
        endPoint: End Point
        maxConnections: Maximum Connections
        mountPath: Mount Path
        path: Path
        prefix: Prefix
        pvcName: Claim Name
        region: Region
        secret: Storage Secret
        server: Server
        subPath: Sub Path
        title: Backend
        type: Type
        url: URL
        volumeSource: Select Volume Source
      choise: ''
      name: Name
      title: Repository
    request: Request
    resources: Resources
    restoreSession:
      name: Name
      snapshot: Snapshot
      title: Restore Session
    role: Role
    run_as_group: Run as Group
    run_as_non_root: Run As Non Root?
    run_as_user: Run as User
    runtimeSettings:
      choise: Customize Restore Job Runtime Settings?
      container:
        ionice:
          class: Class
          classData: Class Data
          title: Ionice
        nice:
          adjustment: Adjustment
          title: Nice
        resources:
          cpu: CPU
          limits: Limits
          memory: Memory
          requests: Requests
          title: Resources
        title: Container Runtime Settings
      pod:
        imagePullSecrets: Image Pull Secrets
        serviceAccountName: Service Account Name
        title: Pod Runtime Settings
      securityContext:
        fsGroup: FS Group
        privileged: Privileged
        runAsGroup: Run As Group
        runAsNonRoot: Run As Non Root
        runAsUser: Run As User
        seLinuxOptions:
          level: LeveL
          role: Role
          title: SE Linux Options
          type: Type
          user: User
        title: Security Context
    scrapping_interval: Scrapping Interval
    script:
      path: Script Path
      volume: Source Volume
      volumeName: Name
      volumeType: Type
    se_linux_options: SE Linux Options
    secret: Secret
    secret_key: Secret Key
    secret_name: Secret Name
    security_context: Security Context
    service_account_name: Service Account Name
    service_monitor: Service Monitor
    service_monitor_configuration: ServiceMonitor Configuration
    service_template: Service Template
    service_template_annotations: Service Template Annotations
    service_templates: Service Templates
    shardNodes: Shard Nodes
    shards: Number of Shards
    storage:
      class: Storage Class
      size: Storage Size
      select: Select Storage Class
    subject: Subject
    deletionPolicy: Deletion Policy
    timeout_seconds: Timeout Seconds
    toleration: Toleration
    toleration_seconds: Toleration in seconds
    tolerations: Tolerations
    type: Type
    user: User
    value: Value
    values: Values
    waitForInitialRestore: Wait For Initial Restore?
    weight: Weight
    add_new_namespace: Add New Namespace
  options:
    agent:
      prometheus:
        description: Only injects the metric exporter sidecar
        label: Use Custom Scrapper
      prometheus_builtin:
        description: Inject metric exporter sidecar and add Prometheus annotations to the stats Service
        label: Manually Deployed Prometheus Scrapper
      prometheus_operator:
        description: Inject metric exporter sidecar and creates a ServiceMonitor
        label: Prometheus Operator
    configOptions:
      alert:
        description: Show notification alert of your database.
        label: Alert
      backup:
        description: Schedule periodic backup via Stash.
        label: Backup
      customConfig:
        description: Configure ClickHouse with configuration files.
        label: Custom Config
      initialization:
        description: Initialize database from backup or script.
        label: Initialization
      monitoring:
        description: Setup Prometheus monitoring for the database.
        label: Monitoring
      networking:
        description: Customize Services for the database.
        label: Networking
      podTemplate:
        description: Customize runtime options for the database pods.
        label: Pod Template
      tls:
        description: Secure database with TLS.
        label: TLS
      topology:
        description: Configure your cluster topology.
        label: Topology
    configuration_source:
      create_new_config:
        label: Create New Config
      use_existing_config:
        label: Use Existing Config
    createOrSelect:
      create:
        text: Create New
      select:
        text: Use Existing
    dataSource:
      script:
        text: Script
      stashBackup:
        text: Stash Backup
    database:
      mode:
        Replicaset:
          description: ClickHouse ReplicaSet for high availability.
          label: Replicated Cluster
        Topology:
          description: ClickHouse Topology cluster for high performance and high availability.
          label: Topology Cluster
        Standalone:
          description: Single node ClickHouse without high availability and sharding.
          label: Standalone
      secret:
        customSecret:
          label: Auto-generate auth secret
        existingSecret:
          label: Use existing auth secret
    scriptSourceVolumeType:
      configMap:
        text: ConfigMap
      secret:
        text: Secret
    storageClass:
      standard:
        label: Standard
    deletionPolicy:
      delete:
        description: Keep only database Secrets and backed up data.
        label: Delete
      doNotTerminate:
        description: Prevent deletion of the ClickHouse CRD.
        label: DoNotTerminate
      halt:
        description: 'Keep PVCs, database Secrets and backed up data.'
        label: Halt
      wipeOut:
        description: Delete everything including backed up data.
        label: WipeOut
    yesOrNo:
      'no':
        text: 'No'
      'yes':
        text: 'Yes'
  steps:
    - label: Basic Information
    - label: Topology
    - label: TLS Configuration
    - label: Initialization
    - label: Backup
    - label: Monitoring
    - label: Pod Template
    - label: Networking
    - label: Custom Config
