apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: secretaccessrequests.engine.kubevault.com
spec:
  group: engine.kubevault.com
  names:
    kind: SecretAccessRequest
    listKind: SecretAccessRequestList
    plural: secretaccessrequests
    singular: secretaccessrequest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretAccessRequestSpec contains information to request for
              database credential
            properties:
              aws:
                description: https://www.vaultproject.io/api/secret/aws/index.html#parameters-6
                  AWSAccessKeyRequestSpec contains information to request for vault
                  aws credential
                properties:
                  roleARN:
                    description: The ARN of the role to assume if credential_type
                      on the Vault role is assumed_role. Must match one of the allowed
                      role ARNs in the Vault role. Optional if the Vault role only
                      allows a single AWS role ARN; required otherwise.
                    type: string
                  useSTS:
                    description: If true, '/aws/sts' endpoint will be used to retrieve
                      credential Otherwise, '/aws/creds' endpoint will be used to
                      retrieve credential
                    type: boolean
                type: object
              gcp:
                description: GCPAccessRequestConfiguration contains information to
                  request for vault gcp credentials
                properties:
                  keyAlgorithm:
                    description: 'Specifies the algorithm used to generate key. Defaults
                      to 2k RSA key. Accepted values: KEY_ALG_UNSPECIFIED, KEY_ALG_RSA_1024,
                      KEY_ALG_RSA_2048'
                    type: string
                  keyType:
                    description: 'Specifies the private key type to generate. Defaults
                      to JSON credentials file Accepted values: TYPE_UNSPECIFIED,
                      TYPE_PKCS12_FILE, TYPE_GOOGLE_CREDENTIALS_FILE'
                    type: string
                type: object
              pki:
                description: https://developer.hashicorp.com/vault/api-docs/secret/pki#generate-certificate-and-key
                properties:
                  additionalPayload:
                    additionalProperties:
                      type: string
                    type: object
                  altNames:
                    type: string
                  commonName:
                    type: string
                  issuerRef:
                    type: string
                  ttl:
                    type: string
                type: object
              roleRef:
                description: Contains vault database role info
                properties:
                  apiGroup:
                    type: string
                  kind:
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                required:
                - name
                type: object
              subjects:
                items:
                  description: Subject contains a reference to the object or user
                    identities a role binding applies to.  This can either hold a
                    direct API object reference, or a value for non-objects such as
                    user and group names.
                  properties:
                    apiGroup:
                      description: APIGroup holds the API group of the referenced
                        subject. Defaults to "" for ServiceAccount subjects. Defaults
                        to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: Kind of object being referenced. Values defined
                        by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the
                        Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: Namespace of the referenced object.  If the object
                        kind is non-namespace, such as "User" or "Group", and this
                        value is not empty the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              ttl:
                description: Specifies the TTL for the leases associated with this
                  role. Accepts time suffixed strings ("1h") or an integer number
                  of seconds. Defaults to roles default TTL time
                type: string
            required:
            - roleRef
            - subjects
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
