steps:
- form:
    discriminator:
      dbDetails:
        type: object
    elements:
    - computed: getDbDetails
      if: returnFalse
      schema:
        $ref: discriminator#/properties/dbDetails
      type: input
    - if: showAndInitName
      label:
        text: labels.op_req_name
      required: true
      schema:
        $ref: schema#/properties/metadata/properties/name
      type: input
    - computed: initNamespace
      disabled: isNamespaceDisabled
      fetch: getNamespaces
      hasGroup: isRancherManaged
      if: showAndInitNamespace
      label:
        text: labels.namespace
      onChange: onNamespaceChange
      required: true
      schema:
        $ref: schema#/properties/metadata/properties/namespace
      type: select
    - computed: initDatabaseRef
      disabled: isDatabaseRefDisabled
      fetch: getDbs
      if: showAndInitDatabaseRef
      label:
        text: labels.databaseRef
      onChange: onDbChange
      refresh: true
      required: true
      schema:
        $ref: schema#/properties/spec/properties/databaseRef/properties/name
      type: select
    - if: showConfigureOpsrequestLabel
      label:
        text: labels.config_ops_request
      type: label-element
    - computed: getRequestTypeFromRoute
      disabled: isDbDetailsLoading
      hasDescription: true
      if: showAndInitOpsRequestType
      individualItemDisabilityCheck: disableOpsRequest
      label:
        text: labels.ops_request_type
      onChange: onRequestTypeChange
      options:
      - description: options.UpdateVersion.description
        text: options.UpdateVersion.text
        value: UpdateVersion
      - description: options.HorizontalScaling.description
        text: options.HorizontalScaling.text
        value: HorizontalScaling
      - description: options.VerticalScaling.description
        text: options.VerticalScaling.text
        value: VerticalScaling
      - description: options.VolumeExpansion.description
        text: options.VolumeExpansion.text
        value: VolumeExpansion
      - description: options.Restart.description
        text: options.Restart.text
        value: Restart
      - description: options.Reconfigure.description
        text: options.Reconfigure.text
        value: Reconfigure
      - description: options.ReconfigureTLS.description
        text: options.ReconfigureTLS.text
        value: ReconfigureTLS
      schema:
        $ref: schema#/properties/spec/properties/type
      type: radio
    - elements:
      - computed: setValueFromDbDetails|/spec/version
        fetch: getDbVersions
        label:
          text: labels.targetVersion
        schema:
          $ref: schema#/properties/spec/properties/updateVersion/properties/targetVersion
        type: select
      if: ifRequestTypeEqualsTo|UpdateVersion
      type: single-step-form
    - elements:
      - computed: setValueFromDbDetails|/spec/topology/aggregator/replicas
        label:
          text: Aggregator
        schema:
          $ref: schema#/properties/spec/properties/horizontalScaling/properties/aggregator
        type: input
      - computed: setValueFromDbDetails|/spec/topology/leaf/replicas
        label:
          text: Leaf
        schema:
          $ref: schema#/properties/spec/properties/horizontalScaling/properties/leaf
        type: input
      if: ifRequestTypeEqualsTo|HorizontalScaling
      label:
        text: Horizontal Scaling Form
      type: single-step-form
    - elements:
      - discriminator:
          machine-aggregator:
            default: ""
            type: string
        elements:
        - computed: setMachine|aggregator
          customClass: mt-20
          disableUnselect: true
          fetch: getMachines
          label:
            text: Machine Profile
          onChange: onMachineChange|aggregator|/spec/topology/aggregator/podTemplate/spec/containers
          schema:
            $ref: discriminator#/machine-aggregator
          type: select
        - if: isMachineCustom|/machine-aggregator
          label:
            text: labels.resources
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/aggregator/properties/resources
          type: resource-input-form
        - label:
            text: Node Selection Policy
          options:
          - text: LabelSelector
            value: LabelSelector
          - text: Taint
            value: Taint
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/aggregator/properties/nodeSelectionPolicy
          type: select
        - elements:
          - label:
              text: key
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/aggregator/properties/topology/properties/key
            type: input
          - label:
              text: value
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/aggregator/properties/topology/properties/value
            type: input
          label:
            text: Topology
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/aggregator/properties/topology
          show_label: true
          type: single-step-form
        if: ifDbTypeEqualsTo|Topology|VerticalScaling
        label:
          text: Aggregator
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling/properties/aggregator
        show_label: true
        type: single-step-form
      - discriminator:
          machine-leaf:
            default: ""
            type: string
        elements:
        - computed: setMachine|leaf
          customClass: mt-20
          disableUnselect: true
          fetch: getMachines
          label:
            text: Machine Profile
          onChange: onMachineChange|leaf|/spec/topology/leaf/podTemplate/spec/containers
          schema:
            $ref: discriminator#/machine-leaf
          type: select
        - if: isMachineCustom|/machine-leaf
          label:
            text: labels.resources
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/leaf/properties/resources
          type: resource-input-form
        - label:
            text: Node Selection Policy
          options:
          - text: LabelSelector
            value: LabelSelector
          - text: Taint
            value: Taint
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/leaf/properties/nodeSelectionPolicy
          type: select
        - elements:
          - label:
              text: key
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/leaf/properties/topology/properties/key
            type: input
          - label:
              text: value
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/leaf/properties/topology/properties/value
            type: input
          label:
            text: Topology
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/leaf/properties/topology
          show_label: true
          type: single-step-form
        if: ifDbTypeEqualsTo|Topology|VerticalScaling
        label:
          text: Leaf
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling/properties/leaf
        show_label: true
        type: single-step-form
      - discriminator:
          machine-node:
            default: ""
            type: string
        elements:
        - computed: setMachine|node
          customClass: mt-20
          disableUnselect: true
          fetch: getMachines
          label:
            text: Machine Profile
          onChange: onMachineChange|node|/spec/podTemplate/spec/containers
          schema:
            $ref: discriminator#/machine-node
          type: select
        - if: isMachineCustom|/machine-node
          label:
            text: labels.resources
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/node/properties/resources
          type: resource-input-form
        - label:
            text: Node Selection Policy
          options:
          - text: LabelSelector
            value: LabelSelector
          - text: Taint
            value: Taint
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/node/properties/nodeSelectionPolicy
          type: select
        - elements:
          - label:
              text: key
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/node/properties/topology/properties/key
            type: input
          - label:
              text: value
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/node/properties/topology/properties/value
            type: input
          label:
            text: Topology
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/node/properties/topology
          show_label: true
          type: single-step-form
        if: ifDbTypeEqualsTo|Combined|VerticalScaling
        label:
          text: Node
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling/properties/node
        show_label: true
        type: single-step-form
      - computed: setResource|/spec/topology/aggregator/podTemplate/spec/containers
        if: ifDbTypeEqualsTo|Topology|VerticalScaling
        label:
          text: Coordinator
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling/properties/coordinator/properties/resources
        type: resource-input-form
      if: ifRequestTypeEqualsTo|VerticalScaling
      type: single-step-form
    - elements:
      - elements:
        - computed: setValueFromDbDetails|/spec/topology/aggregator/storage/resources/requests/storage
          label:
            text: labels.storage.size
          customValidation:
            regex: checkVolume|/spec/topology/aggregator/storage/resources/requests/storage|/spec/volumeExpansion/aggregator
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/aggregator
          type: input
        if: ifDbTypeEqualsTo|Topology|VolumeExpansion
        label:
          text: Aggregator
        show_label: true
        type: single-step-form
      - elements:
        - computed: setValueFromDbDetails|/spec/topology/leaf/storage/resources/requests/storage
          label:
            text: labels.storage.size
          customValidation:
            regex: checkVolume|/spec/topology/leaf/storage/resources/requests/storage|/spec/volumeExpansion/leaf
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/leaf
          type: input
        if: ifDbTypeEqualsTo|Topology|VolumeExpansion
        label:
          text: Leaf
        show_label: true
        type: single-step-form
      - elements:
        - computed: setValueFromDbDetails|/spec/storage/resources/requests/storage
          label:
            text: labels.storage.size
          customValidation:
            regex: checkVolume|/spec/storage/resources/requests/storage|/spec/volumeExpansion/node
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/node
          type: input
        if: ifDbTypeEqualsTo|Combined|VolumeExpansion
        label:
          text: Node
        show_label: true
        type: single-step-form
      - label:
          text: Mode
        options:
        - text: Offline
          value: Offline
        - text: Online
          value: Online
        required: true
        schema:
          $ref: schema#/properties/spec/properties/volumeExpansion/properties/mode
        type: select
      if: ifRequestTypeEqualsTo|VolumeExpansion
      label:
        text: Volume Expansion Form
      type: single-step-form
    - elements:
      - discriminator:
          reconfigurationType:
            type: string
        elements:
        - label:
            text: labels.reconfigurationType
          onChange: onReconfigurationTypeChange
          options:
          - text: Select New Config Secret
            value: selectNewConfigSecret
          - text: Apply Config
            value: applyConfig
          - text: Remove
            value: remove
          required: true
          schema:
            $ref: discriminator#/properties/reconfigurationType
          type: radio
        - addFormLabel: labels.applyConfig.label
          element:
            discriminator:
              configArray:
                emitAs: applyConfig
                type: array
            elements:
            - label:
                text: labels.applyConfig.key
              required: true
              schema:
                $ref: discriminator#/properties/configArray/items/properties/key
              type: input
            - label:
                text: labels.applyConfig.value
              required: true
              schema:
                $ref: discriminator#/properties/configArray/items/properties/value
              type: editor
            type: single-step-form
          if: ifReconfigurationTypeEqualsTo|applyConfig
          label:
            text: labels.applyConfig.label
          onChange: onApplyconfigChange
          required: true
          schema:
            $ref: discriminator#/properties/applyConfig
          tableContents:
          - inTableColumn: true
            label:
              text: labels.applyConfig.key
            path: key
            type: value
            typeOfValue: string
          - inTableColumn: true
            label:
              text: labels.applyConfig.value
            path: value
            type: value
            typeOfValue: code
          type: single-step-form-array
        - if: returnFalse
          label:
            text: labels.removeCustomConfig
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/node/properties/removeCustomConfig
          type: switch
        label:
          text: labels.configuration
        schema:
          $ref: schema#/properties/spec/properties/configuration
        show_label: true
        type: single-step-form
      if: ifRequestTypeEqualsTo|Reconfigure
      label:
        text: Reconfigure Form
      type: single-step-form
    - discriminator:
        tlsOperation:
          default: update
          type: string
      elements:
      - computed: initTlsOperation
        if: hasTlsField
        label:
          text: labels.tlsOperation
        onChange: onTlsOperationChange
        options:
        - text: Update
          value: update
        - text: Rotate
          value: rotate
        - text: Remove
          value: remove
        schema:
          $ref: discriminator#/properties/tlsOperation
        type: radio
      - if: returnFalse
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/remove
        type: switch
      - if: returnFalse
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/rotateCertificates
        type: switch
      - elements:
        - computed: initIssuerRefApiGroup
          disabled: true
          label:
            text: labels.api_group
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/apiGroup
          type: input
        - computed: setValueFromDbDetails|/spec/tls/issuerRef/kind
          label:
            text: labels.kind
          options:
          - text: Issuer
            value: Issuer
          - text: ClusterIssuer
            value: ClusterIssuer
          required: isIssuerRefRequired
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/kind
          sortable: true
          type: select
        - allowUserDefinedOption: true
          computed: setValueFromDbDetails|/spec/tls/issuerRef/name
          fetch: getIssuerRefsName
          label:
            text: labels.name
          required: isIssuerRefRequired
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/name
          sortable: true
          type: select
        if: showIssuerRefAndCertificates
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/issuerRef
        type: single-step-form
      - alias: reusable_certificates
        chart:
          name: uibytebuildersdev-component-certificates
          version: v0.17.0
        computed: setValueFromDbDetails|/spec/tls/certificates|/spec/tls/certificates
        functionCallbacks:
          getAliasOptions:
            $ref: functions#/getAliasOptions
        if: showIssuerRefAndCertificates
        moduleResolver: fetchJsons
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/certificates
        type: reusable-element
      if: ifRequestTypeEqualsTo|ReconfigureTLS
      label:
        text: labels.tls
      schema:
        $ref: schema#/properties/spec/properties/tls
      type: single-step-form
    - label:
        text: labels.timeout
      options:
      - text: 5 minutes
        value: 5m
      - text: 10 minutes
        value: 10m
      - text: 30 minutes
        value: 30m
      - text: 1 hour
        value: 1h
      - text: 2 hours
        value: 2h
      - text: 5 hours
        value: 5h
      - text: 10 hours
        value: 10h
      schema:
        $ref: schema#/properties/spec/properties/timeout
      type: select
    - computed: setApplyToIfReady
      label:
        text: labels.apply
      options:
      - text: IfReady (OpsRequest will be applied if database is ready)
        value: IfReady
      - text: Always (OpsRequest will always be applied)
        value: Always
      schema:
        $ref: schema#/properties/spec/properties/apply
      type: radio
    type: single-step-form
  id: basic
  title: steps.0.label
type: multi-step-form
