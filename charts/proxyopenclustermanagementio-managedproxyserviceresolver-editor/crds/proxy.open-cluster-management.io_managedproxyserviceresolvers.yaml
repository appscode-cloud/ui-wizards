apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: managedproxyserviceresolvers.proxy.open-cluster-management.io
spec:
  group: proxy.open-cluster-management.io
  names:
    kind: ManagedProxyServiceResolver
    listKind: ManagedProxyServiceResolverList
    plural: managedproxyserviceresolvers
    singular: managedproxyserviceresolver
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ManagedProxyServiceResolver defines a target service that need to expose from a set of managed clusters to the hub.
          To access a target service on a managed cluster from hub. First, users need to apply a proper ManagedProxyServiceResolver.
          The managed cluster should match the ManagedClusterSet in the ManagedProxyServiceResolver.Spec. The serviceNamespace and serviceName should also match the target service.
          A usage example: /examples/access-other-services/main.go
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ManagedProxyServiceResolverSpec defines the desired state
              of ManagedProxyServiceResolver.
            properties:
              managedClusterSelector:
                description: ManagedClusterSelector selects a set of managed clusters.
                properties:
                  managedClusterSet:
                    description: ManagedClusterSet defines a set of managed clusters
                      that need to expose the service.
                    properties:
                      name:
                        description: Name is the name of the managed cluster set.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: ManagedClusterSet
                    description: Type represents the type of the selector. Now only
                      ManagedClusterSet is supported.
                    enum:
                    - ManagedClusterSet
                    type: string
                type: object
              serviceSelector:
                description: ServiceSelector selects a service.
                properties:
                  serviceRef:
                    description: ServiceRef defines a service in a namespace.
                    properties:
                      name:
                        description: Name represents the name of the service.
                        type: string
                      namespace:
                        description: Namespace represents the namespace of the service.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  type:
                    default: ServiceRef
                    description: Type represents the type of the selector. Now only
                      ServiceRef type is supported.
                    enum:
                    - ServiceRef
                    type: string
                type: object
            required:
            - managedClusterSelector
            - serviceSelector
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
