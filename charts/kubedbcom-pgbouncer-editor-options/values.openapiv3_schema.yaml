properties:
  metadata:
    properties:
      release:
        properties:
          name:
            type: string
          namespace:
            type: string
        required:
        - name
        - namespace
        type: object
      resource:
        description: ResourceID identifies a resource
        properties:
          group:
            type: string
          kind:
            description: Kind is the serialized kind of the resource.  It is normally
              CamelCase and singular.
            type: string
          name:
            description: 'Name is the plural name of the resource to serve.  It must
              match the name of the CustomResourceDefinition-registration too: plural.group
              and it must be all lowercase.'
            type: string
          scope:
            description: ResourceScope is an enum defining the different scopes available
              to a custom resource
            type: string
          version:
            type: string
        required:
        - group
        type: object
    required:
    - release
    - resource
    type: object
  spec:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      authSecret:
        properties:
          name:
            type: string
          password:
            format: password
            type: string
        type: object
      databases:
        items:
          properties:
            alias:
              description: Alias to uniquely identify a target database running inside
                a specific Postgres instance.
              type: string
            databaseName:
              description: DatabaseName is the name of the target database inside
                a Postgres instance.
              type: string
            databaseRef:
              description: DatabaseRef specifies the database appbinding reference
                in any namespace.
              properties:
                name:
                  description: '`name` is the name of the app. Required'
                  type: string
                namespace:
                  description: '`namespace` is the namespace of the app. Required'
                  type: string
                parameters:
                  description: "Parameters is a set of the parameters to be used to\
                    \ override default parameters. The inline YAML/JSON payload to\
                    \ be translated into equivalent JSON object. \n The Parameters\
                    \ field is NOT secret or secured in any way and should NEVER be\
                    \ used to hold sensitive information."
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
              required:
              - name
              - namespace
              type: object
            syncUsers:
              description: SyncUsers is a boolean type and when enabled, operator
                fetches users of backend server from externally managed secrets to
                the PgBouncer server. Secrets updation or deletion are also synced
                in pgBouncer when it is enabled.
              type: boolean
          required:
          - alias
          - databaseName
          - databaseRef
          type: object
        type: array
      labels:
        additionalProperties:
          type: string
        type: object
      machine:
        enum:
        - db.t.micro
        - db.t.small
        - db.t.medium
        - db.t.large
        - db.t.xlarge
        - db.t.2xlarge
        - db.m.small
        - db.m.large
        - db.m.xlarge
        - db.m.2xlarge
        - db.m.4xlarge
        - db.m.8xlarge
        - db.m.12xlarge
        - db.m.16xlarge
        - db.m.24xlarge
        - db.r.large
        - db.r.xlarge
        - db.r.2xlarge
        - db.r.4xlarge
        - db.r.8xlarge
        - db.r.12xlarge
        - db.r.16xlarge
        - db.r.24xlarge
        type: string
      monitoring:
        properties:
          agent:
            enum:
            - prometheus.io/operator
            - prometheus.io
            - prometheus.io/builtin
            type: string
          exporter:
            properties:
              resources:
                description: Compute Resources required by the sidecar container.
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in\
                      \ spec.resourceClaims, that are used by this container. \n This\
                      \ is an alpha field and requires enabling the DynamicResourceAllocation\
                      \ feature gate. \n This field is immutable. It can only be set\
                      \ for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
            type: object
          serviceMonitor:
            properties:
              labels:
                additionalProperties:
                  type: string
                type: object
            type: object
        required:
        - agent
        - exporter
        - serviceMonitor
        type: object
      replicas:
        type: integer
      resources:
        description: ResourceRequirements describes the compute resource requirements.
        properties:
          claims:
            description: "Claims lists the names of resources, defined in spec.resourceClaims,\
              \ that are used by this container. \n This is an alpha field and requires\
              \ enabling the DynamicResourceAllocation feature gate. \n This field\
              \ is immutable. It can only be set for containers."
            items:
              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
              properties:
                name:
                  description: Name must match the name of one entry in pod.spec.resourceClaims
                    of the Pod where this field is used. It makes that resource available
                    inside a container.
                  type: string
              required:
              - name
              type: object
            type: array
            x-kubernetes-list-map-keys:
            - name
            x-kubernetes-list-type: map
          limits:
            additionalProperties:
              anyOf:
              - type: integer
              - type: string
              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              x-kubernetes-int-or-string: true
            description: 'Limits describes the maximum amount of compute resources
              allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
            type: object
          requests:
            additionalProperties:
              anyOf:
              - type: integer
              - type: string
              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              x-kubernetes-int-or-string: true
            description: 'Requests describes the minimum amount of compute resources
              required. If Requests is omitted for a container, it defaults to Limits
              if that is explicitly specified, otherwise to an implementation-defined
              value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
            type: object
        type: object
      terminationPolicy:
        enum:
        - Halt
        - Delete
        - WipeOut
        - DoNotTerminate
        type: string
      version:
        type: string
    required:
    - authSecret
    - machine
    - monitoring
    - replicas
    - resources
    - terminationPolicy
    - version
    type: object
required:
- spec
type: object
