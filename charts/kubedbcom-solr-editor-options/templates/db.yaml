{{- $machines := .Files.Get "data/machines.yaml" | fromYaml -}}
{{- $machineProfileRes := dict -}}
{{- range .Values.spec.admin.machineProfiles.machines }}
  {{- if and $.Values.spec.admin.machineProfiles.default (eq .id $.Values.spec.admin.machineProfiles.default) }}
    {{- $machineProfileRes = dict "requests" .limits "limits" .limits }}
  {{- end }}
{{- end }}
{{- $res := dict -}}
{{- $overseer_res := dict -}}
{{- $data_res := dict -}}
{{- $coordinator_res := dict -}}
{{- if eq .Values.spec.mode "Topology" }}
  {{- $overseer_res = .Values.spec.topology.overseer.podResources.resources -}}
  {{- if and .Values.spec.topology.overseer.podResources.machine (hasKey $machines .Values.spec.topology.overseer.podResources.machine) }}
    {{- $overseer_res = get (get $machines .Values.spec.topology.overseer.podResources.machine) "resources" }}
  {{- end }}
  {{- if $machineProfileRes }}
    {{- $overseer_res = $machineProfileRes }}
  {{- end  }}
  {{- $data_res = .Values.spec.topology.data.podResources.resources -}}
  {{- if and .Values.spec.topology.data.podResources.machine (hasKey $machines .Values.spec.topology.data.podResources.machine) }}
    {{- $data_res = get (get $machines .Values.spec.topology.data.podResources.machine) "resources" }}
  {{- end }}
  {{- if $machineProfileRes }}
    {{- $data_res = $machineProfileRes }}
  {{- end  }}
  {{- $coordinator_res = .Values.spec.topology.coordinator.podResources.resources -}}
  {{- if and .Values.spec.topology.coordinator.podResources.machine (hasKey $machines .Values.spec.topology.coordinator.podResources.machine) }}
    {{- $coordinator_res = get (get $machines .Values.spec.topology.coordinator.podResources.machine) "resources" }}
  {{- end }}
  {{- if $machineProfileRes }}
    {{- $coordinator_res = $machineProfileRes }}
  {{- end  }}
{{- else }}
  {{- $res = .Values.spec.podResources.resources -}}
  {{- if and .Values.spec.podResources.machine (hasKey $machines .Values.spec.podResources.machine) }}
    {{- $res = get (get $machines .Values.spec.podResources.machine) "resources" }}
  {{- end }}
  {{- if $machineProfileRes }}
    {{- $res = $machineProfileRes }}
  {{- end  }}
{{- end }}

{{- define "common.placement" -}}

{{- if .Values.spec.admin.clusterTier.placement.default }}
podPlacementPolicy:
  name: {{ .Values.spec.admin.clusterTier.placement.default }}
{{- end }}

nodeSelector:
  kubernetes.io/os: linux
{{- if .Values.spec.admin.nodeSelector }}
{{- toYaml .Values.spec.admin.nodeSelector | nindent 2 }}
{{- end }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
  app: solrs.kubedb.com
  instance: {{ include "kubedbcom-solr-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  nodepool: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
{{- end }}

{{- if or .Values.spec.admin.tolerations (eq .Values.spec.admin.deployment.default "Dedicated") }}
tolerations:
{{- if .Values.spec.admin.tolerations }}
{{- toYaml .Values.spec.admin.tolerations | nindent 2 }}
{{- end }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
  - key: app
    operator: "Equal"
    value: "solrs.kubedb.com"
    effect: "NoSchedule"
  - key: instance
    operator: "Equal"
    value: {{ include "kubedbcom-solr-editor-options.fullname" . }}
    effect: "NoSchedule"
  - key: namespace
    operator: "Equal"
    value: {{ .Release.Namespace }}
    effect: "NoSchedule"
  - key: nodepool
    operator: "Equal"
    value: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
    effect: "NoSchedule"
{{- end }}
{{- end }}
{{- end }}

apiVersion: kubedb.com/v1alpha2
kind: Solr
metadata:
  name: {{ include "kubedbcom-solr-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-solr-editor-options.labels" . | nindent 4 }}
  annotations:
    app.kubernetes.io/cluster-tier: {{ .Values.spec.admin.clusterTier.default }}
  {{- if .Values.spec.admin.machineProfiles.default }}
    kubernetes.io/instance-type: {{ .Values.spec.admin.machineProfiles.default }}
  {{- end }}
{{- if .Values.spec.annotations }}
    {{- include "kubedbcom-solr-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.admin.databases.Solr.versions.default | quote }}
  zookeeperRef:
    name: {{ .Values.spec.zookeeperRef.name }}
    namespace: {{ .Values.spec.zookeeperRef.namespace }}
{{- if eq .Values.spec.mode "Topology" }}
  topology:
    overseer:
      replicas: {{ .Values.spec.topology.overseer.replicas }}
      storage:
        storageClassName: {{ .Values.spec.admin.storageClasses.default }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.spec.topology.overseer.persistence.size }}
      podTemplate:
        spec:
          containers:
            - name: solr
              resources:
                {{- toYaml $overseer_res | nindent 16 }}
          {{- include "common.placement" . | nindent 10 }}
    data:
      replicas: {{ .Values.spec.topology.data.replicas }}
      storage:
        storageClassName: {{ .Values.spec.admin.storageClasses.default }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.spec.topology.data.persistence.size }}
      podTemplate:
        spec:
          containers:
            - name: solr
              resources:
                {{- toYaml $data_res | nindent 16 }}
          {{- include "common.placement" . | nindent 10 }}
    coordinator:
      replicas: {{ .Values.spec.topology.coordinator.replicas }}
      storage:
        storageClassName: {{ .Values.spec.admin.storageClasses.default }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.spec.topology.coordinator.persistence.size }}
      podTemplate:
        spec:
          containers:
            - name: solr
              resources:
                {{- toYaml $coordinator_res | nindent 16 }}
          {{- include "common.placement" . | nindent 10 }}
{{- else }}
  {{- if eq .Values.spec.mode "Replicaset" }}
  replicas: {{ .Values.spec.replicas }}
  {{- else }}
  replicas: 1
  {{- end }}
  storage:
    storageClassName: {{ .Values.spec.admin.storageClasses.default }}
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.spec.persistence.size }}
  podTemplate:
    spec:
      containers:
        - name: solr
          resources:
            {{- toYaml $res | nindent 12 }}
      {{- include "common.placement" . | nindent 6 }}
{{- end }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if .Values.spec.authSecret.password }}
  authSecret:
    name: {{ include "kubedbcom-solr-editor-options.fullname" . }}-auth
{{- end }}
{{- if .Values.spec.configuration }}
  configSecret:
    name: {{ include "kubedbcom-solr-editor-options.fullname" . }}-config
{{- end }}
{{- if .Values.spec.admin.tls.default }}
  tls:
    issuerRef:
      apiGroup: "cert-manager.io"
      kind: ClusterIssuer
      name: {{ .Values.spec.admin.clusterIssuers.default }}
  enableSSL: true
{{- end }}
{{- if (and .Values.spec.admin.monitoring .Values.spec.admin.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.admin.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.admin.monitoring.exporter }}
      exporter:
        resources:
          {{- toYaml .resources | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
