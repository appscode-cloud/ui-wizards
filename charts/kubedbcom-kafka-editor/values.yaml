metadata:
  resource:
    group: kubedb.com
    version: v1alpha2
    name: kafkas
    kind: Kafka
    scope: Namespaced
  release:
    name: RELEASE-NAME
    namespace: default
resources:
  kubedbComKafka: # +doc-gen:break
    apiVersion: kubedb.com/v1alpha2
    kind: Kafka
    metadata:
      name: kafka
      namespace: demo
    spec:
      authSecret:
        name: kafka-admin-cred
      enableSSL: true
      monitor:
        agent: prometheus.io/operator
        prometheus:
          exporter:
            port: 9091
          serviceMonitor:
            interval: 10s
            labels:
              release: prometheus
      storageType: Ephemeral
      terminationPolicy: WipeOut
      tls:
        issuerRef:
          apiGroup: cert-manager.io
          kind: Issuer
          name: kafka-ca
      topology:
        broker:
          replicas: 3
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: standard
        controller:
          replicas: 2
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: standard
      version: 3.3.2
  monitoringCoreosComServiceMonitor: # +doc-gen:break
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: kafka
      namespace: demo
    spec:
      endpoints:
        - honorLabels: true
          interval: 10s
          path: /metrics
          port: metrics
      namespaceSelector:
        matchNames:
          - demo
      selector:
        matchLabels:
          app.kubernetes.io/instance: kafka
          app.kubernetes.io/name: kafkas.kubedb.com
  secret_admin_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: kafka-admin-cred
      namespace: demo
    stringData:
      password: WeakPassword
      username: admin
    type: kubernetes.io/basic-auth

form:
  alert:
    ## Enable PrometheusRule alerts
    enabled: warning

    ## Labels for default rules
    labels: # +doc-gen:break
      release: kube-prometheus-stack

    ## Annotations for default rules
    annotations: {}

    ## Additional labels for PrometheusRule alerts
    additionalRuleLabels: {}

    ## Prefix for runbook URLs. Use this to override the first part of the runbookURLs that is common to all rules.
    # runbookUrl: "https://runbooks.prometheus-operator.dev/runbooks"

    groups:
      database:
        enabled: warning
        rules:
          # Specifies alert configurations for under replicated partitions
          kafkaUnderReplicatedPartitions:
            enabled: true
            duration: "10s"
            severity: warning
            val: 0
          # Specifies alert configurations for inactive controller state
          kafkaAbnormalControllerState:
            enabled: true
            duration: "10s"
            severity: warning
            val: 1
          # Specifies alert configurations offline partition replicas
          kafkaOfflinePartitions:
            enabled: true
            duration: "10s"
            severity: warning
            val: 0
          # Specifies alert configurations for min number of in sync partitions
          kafkaUnderMinIsrPartitionCount:
            enabled: true
            duration: "10s"
            severity: warning
            val: 0
          # Specifies alert configurations for offline directories
          kafkaOfflineLogDirectoryCount:
            enabled: true
            duration: "10s"
            severity: warning
            val: 0
          # Specifies alert configurations for expand rate of in out of sync replicas
          kafkaISRExpandRate:
            enabled: true
            duration: "1m"
            severity: warning
            val: 0
          # Specifies alert configurations for shrinking rate of in sync replicas
          kafkaISRShrinkRate:
            enabled: true
            duration: "1m"
            severity: warning
            val: 0
          # Specifies alert configurations for dead brokers
          kafkaBrokerCount:
            enabled: true
            duration: "1m"
            severity: critical
            val: 0
          # Specifies alert configurations for network processors idle rate goes beyond provided value
          kafkaNetworkProcessorIdlePercent:
            enabled: true
            duration: "1m"
            severity: critical
            val: 0.3
          # Specifies alert configurations for request handlers idle rate goes beyond provided value
          kafkaRequestHandlerIdlePercent:
            enabled: true
            duration: "1m"
            severity: critical
            val: 0.3
          # Specifies alert configurations replica lag and fetcher configurations
          kafkaReplicaFetcherManagerMaxLag:
            enabled: true
            duration: "1m"
            severity: critical
            val: 50
          # Specifies alert configurations for number of topics going beyond the provided threshold
          kafkaTopicCount:
            enabled: true
            duration: "1m"
            severity: warning
            val: 1000
          # Sepcifies the alert configuration for database is in Critical phase, that means one or more of the nodes are down but the database read/write are not hampered.
          kafkaPhaseCritical:
            enabled: true
            duration: "3m"
            severity: warning
          # Sepcifies the alert configuration for database is in NotReady phase, that means the database is not accepting connections, read/write are hampered.
          kafkaDown:
            enabled: true
            duration: "30s"
            severity: critical

          # Sepcifies the alert configuration for persistent volume usages.
          diskUsageHigh:
            enabled: true
            val: 80
            duration: "1m"
            severity: warning
          diskAlmostFull:
            enabled: true
            val: 95
            duration: "1m"
            severity: critical

      provisioner:
        enabled: warning
        rules:
          appPhaseNotReady:
            enabled: true
            duration: "1m"
            severity: critical
          appPhaseCritical:
            enabled: true
            duration: "15m"
            severity: warning
  capi:
    provider: ""
    namespace: ""
    clusterName: ""
    dedicated: false
    nodes: 1
    sku: ""
    zones: []
