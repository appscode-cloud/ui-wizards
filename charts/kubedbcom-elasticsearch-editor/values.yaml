form:
  alert:
    additionalRuleLabels: {}
    annotations: {}
    enabled: warning
    groups:
      database:
        enabled: critical
        rules:
          elasticsearchClusterRed:
            duration: 0m
            enabled: true
            severity: critical
          elasticsearchClusterYellow:
            duration: 0m
            enabled: true
            severity: warning
          elasticsearchDiskOutOfSpace:
            duration: 0m
            enabled: true
            severity: critical
            val: 90
          elasticsearchDiskSpaceLow:
            duration: 2m
            enabled: true
            severity: warning
            val: 80
          elasticsearchHealthyDataNodes:
            duration: 0m
            enabled: true
            severity: critical
            val: 3
          elasticsearchHealthyNodes:
            duration: 0m
            enabled: true
            severity: critical
            val: 3
          elasticsearchHeapUsageTooHigh:
            duration: 2m
            enabled: true
            severity: critical
            val: 90
          elasticsearchHeapUsageWarning:
            duration: 2m
            enabled: true
            severity: warning
            val: 80
          elasticsearchInitializingShards:
            duration: 0m
            enabled: true
            severity: info
          elasticsearchNoNewDocuments10m:
            duration: 0m
            enabled: false
            severity: info
          elasticsearchPendingTasks:
            duration: 15m
            enabled: true
            severity: warning
          elasticsearchRelocatingShards:
            duration: 0m
            enabled: true
            severity: info
          elasticsearchUnassignedShards:
            duration: 0m
            enabled: true
            severity: critical
      opsManager:
        enabled: warning
        rules:
          opsRequestFailed:
            duration: 0m
            enabled: true
            severity: critical
          opsRequestOnProgress:
            duration: 0m
            enabled: true
            severity: info
          opsRequestStatusProgressingToLong:
            duration: 30m
            enabled: true
            severity: critical
      provisioner:
        enabled: warning
        rules:
          appPhaseCritical:
            duration: 15m
            enabled: true
            severity: warning
          appPhaseNotReady:
            duration: 1m
            enabled: true
            severity: critical
      stash:
        enabled: warning
        rules:
          backupSessionFailed:
            duration: 0m
            enabled: true
            severity: critical
          backupSessionPeriodTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 1800
          noBackupSessionForTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 18000
          repositoryCorrupted:
            duration: 5m
            enabled: true
            severity: critical
          repositoryStorageRunningLow:
            duration: 5m
            enabled: true
            severity: warning
            val: 1.073741824e+10
          restoreSessionFailed:
            duration: 0m
            enabled: true
            severity: critical
          restoreSessionPeriodTooLong:
            duration: 0m
            enabled: true
            severity: warning
            val: 1800
    labels:
      release: kube-prometheus-stack
  capi:
    clusterName: ""
    dedicated: false
    namespace: ""
    nodes: 1
    provider: ""
    sku: ""
    zones: []
metadata:
  resource:
    group: kubedb.com
    version: v1alpha2
    name: elasticsearches
    kind: Elasticsearch
    scope: Namespaced
  release:
    name: RELEASE-NAME
    namespace: default
resources:
  certManagerIoIssuer_ca: # +doc-gen:break
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      name: elasticsearch-ca
      namespace: demo
    spec:
      selfSigned: {}
  coreKubestashComBackupConfiguration: # +doc-gen:break
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupConfiguration
    metadata:
      name: elasticsearch
      namespace: demo
    spec:
      backends:
        - name: elasticsearch-backend
          retentionPolicy:
            name: elasticsearch-retention-policy
            namespace: demo
          storageRef:
            name: elasticsearch-storage
            namespace: demo
      sessions:
        - addon:
            jobTemplate:
              spec:
                securityContext:
                  runAsGroup: 0
                  runAsUser: 0
            name: elasticsearch-addon
            tasks:
              - name: logical-backup
          name: elasticsearch-frequent-backup
          repositories:
            - backend: elasticsearch-backend
              directory: /es-repo
              encryptionSecret:
                name: elasticsearch-encryption-secret
                namespace: demo
              name: elasticsearch-repo
          scheduler:
            jobTemplate:
              backoffLimit: 1
            schedule: '*/5 * * * *'
          sessionHistoryLimit: 2
      target:
        apiGroup: kubedb.com
        kind: Elasticsearch
        name: elasticsearch
        namespace: demo
  coreKubestashComRestoreSession: # +doc-gen:break
    apiVersion: core.kubestash.com/v1alpha1
    kind: RestoreSession
    metadata:
      name: elasticsearch
      namespace: demo
    spec:
      addon:
        jobTemplate:
          spec:
            securityContext:
              runAsGroup: 0
              runAsUser: 0
        name: elasticsearch-addon
        tasks:
          - name: logical-backup-restore
      dataSource:
        encryptionSecret:
          name: elasticsearch-encryption-secret
          namespace: demo
        repository: elasticsearch-repo
        snapshot: latest
      target:
        apiGroup: kubedb.com
        kind: Elasticsearch
        name: elasticsearch
        namespace: demo
  kubedbComElasticsearch: # +doc-gen:break
    apiVersion: kubedb.com/v1alpha2
    kind: Elasticsearch
    metadata:
      name: elasticsearch
      namespace: demo
    spec:
      authSecret:
        name: elasticsearch-admin-cred
      configSecret:
        name: elasticsearch-user-config
      enableSSL: true
      init:
        waitForInitialRestore: true
      internalUsers:
        admin:
          backendRoles:
            - admin
          reserved: true
          secretName: elasticsearch-admin-cred
        kibanaro:
          secretName: elasticsearch-kibanaro-cred
        kibanaserver:
          reserved: true
          secretName: elasticsearch-kibanaserver-cred
        logstash:
          secretName: elasticsearch-logstash-cred
        readall:
          secretName: elasticsearch-readall-cred
        snapshotrestore:
          secretName: elasticsearch-snapshotrestore-cred
      kernelSettings:
        privileged: true
        sysctls:
          - name: vm.max_map_count
            value: "262144"
      monitor:
        agent: prometheus.io
        prometheus:
          exporter:
            resources:
              limits:
                cpu: 100m
                memory: 128Mi
              requests:
                cpu: 100m
                memory: 128Mi
      storageType: Durable
      tls:
        issuerRef:
          apiGroup: cert-manager.io
          kind: Issuer
          name: elasticsearch-ca
      topology:
        data:
          replicas: 1
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        dataCold:
          replicas: 1
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        dataContent:
          replicas: 1
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        dataFrozen:
          replicas: 1
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        dataHot:
          replicas: 1
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        dataWarm:
          replicas: 1
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        ingest:
          replicas: 2
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        master:
          replicas: 3
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        ml:
          replicas: 1
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
        transform:
          replicas: 1
          storage:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: linode-block-storage
      version: searchguard-7.10.2
  monitoringCoreosComServiceMonitor: # +doc-gen:break
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: elasticsearch
      namespace: demo
    spec:
      endpoints:
        - honorLabels: true
          interval: 30s
          path: /metrics
          port: metrics
      namespaceSelector:
        matchNames:
          - demo
      selector:
        matchLabels:
          app.kubernetes.io/instance: elasticsearch
          app.kubernetes.io/name: elasticsearches.kubedb.com
  secret_admin_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-admin-cred
      namespace: demo
    stringData:
      password: WeakPassword
      username: kibanaserver
    type: kubernetes.io/basic-auth
  secret_elastic_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-elastic-cred
      namespace: demo
    stringData:
      password: thisIs1StrongPassword
      username: elastic
    type: kubernetes.io/basic-auth
  secret_encryption_secret: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-encryption-secret
      namespace: demo
    stringData:
      RESTIC_PASSWORD: ""
  secret_init_repo_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-init-repo-cred
      namespace: demo
    stringData:
      password: ""
      username: ""
  secret_kibanaro_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-kibanaro-cred
      namespace: demo
    stringData:
      password: WeakPassword
      username: kibanaserver
    type: kubernetes.io/basic-auth
  secret_kibanaserver_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-kibanaserver-cred
      namespace: demo
    stringData:
      password: WeakPassword
      username: kibanaserver
    type: kubernetes.io/basic-auth
  secret_logstash_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-logstash-cred
      namespace: demo
    stringData:
      password: WeakPassword
      username: kibanaserver
    type: kubernetes.io/basic-auth
  secret_metrics_exporter_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-metrics-exporter-cred
      namespace: demo
    stringData:
      password: WeakPassword
      username: kibanaserver
    type: kubernetes.io/basic-auth
  secret_readall_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-readall-cred
      namespace: demo
    stringData:
      password: WeakPassword
      username: kibanaserver
    type: kubernetes.io/basic-auth
  secret_repo_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-repo-cred
      namespace: demo
    stringData:
      password: ""
      username: ""
  secret_secure_config: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-secure-config
      namespace: demo
    stringData:
      elasticsearch.yml: 'node.processors: 2'
  secret_snapshotrestore_cred: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-snapshotrestore-cred
      namespace: demo
    stringData:
      password: WeakPassword
      username: kibanaserver
    type: kubernetes.io/basic-auth
  secret_user_config: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: elasticsearch-user-config
      namespace: demo
    stringData:
      elasticsearch.yml: 'node.processors: 2'
  stashAppscodeComBackupConfiguration: # +doc-gen:break
    apiVersion: stash.appscode.com/v1beta1
    kind: BackupConfiguration
    metadata:
      name: elasticsearch
      namespace: demo
    spec:
      interimVolumeTemplate:
        metadata:
          name: elasticsearch-backup-tmp-storage
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: linode-block-storage
      repository:
        name: elasticsearch-repo
      retentionPolicy:
        keepLast: 5
        name: keep-last-5
        prune: true
      runtimeSettings:
        container:
          securityContext:
            runAsGroup: 0
            runAsUser: 0
      schedule: '*/5 * * * *'
      target:
        ref:
          apiVersion: appcatalog.appscode.com/v1alpha1
          kind: AppBinding
          name: elasticsearch
      task:
        name: elasticsearch-backup-7.3.2
  stashAppscodeComRepository_init_repo: # +doc-gen:break
    apiVersion: stash.appscode.com/v1alpha1
    kind: Repository
    metadata:
      name: elasticsearch-init-repo
      namespace: demo
    spec:
      backend:
        gcs:
          bucket: kubedb-testing
          prefix: /elasticsearch
        storageSecretName: elasticsearch-init-repo-cred
  stashAppscodeComRepository_repo: # +doc-gen:break
    apiVersion: stash.appscode.com/v1alpha1
    kind: Repository
    metadata:
      name: elasticsearch-repo
      namespace: demo
    spec:
      backend:
        gcs:
          bucket: kubedb-testing
          prefix: /elasticsearch
        storageSecretName: elasticsearch-repo-cred
  stashAppscodeComRestoreSession_init: # +doc-gen:break
    apiVersion: stash.appscode.com/v1beta1
    kind: RestoreSession
    metadata:
      name: elasticsearch-init
      namespace: demo
    spec:
      interimVolumeTemplate:
        metadata:
          name: elasticsearch-init-tmp-storage
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: linode-block-storage
      repository:
        name: elasticsearch-init-repo
      rules:
        - snapshots:
            - latest
      runtimeSettings:
        container:
          securityContext:
            runAsGroup: 0
            runAsUser: 0
      target:
        ref:
          apiVersion: appcatalog.appscode.com/v1alpha1
          kind: AppBinding
          name: elasticsearch
