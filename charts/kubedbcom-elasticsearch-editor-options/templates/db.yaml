{{- $res := .Values.spec.resources -}}
{{- $machines := .Files.Get "data/machines.yaml" | fromYaml -}}
{{- if and .Values.spec.machine (hasKey $machines .Values.spec.machine) }}
  {{- $res = get (get $machines .Values.spec.machine) "resources" }}
{{- end }}

apiVersion: kubedb.com/v1alpha2
kind: Elasticsearch
metadata:
  name: {{ include "kubedbcom-elasticsearch-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-elasticsearch-editor-options.labels" . | nindent 4 }}
{{- if .Values.spec.annotations }}
  annotations:
    {{- include "kubedbcom-elasticsearch-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.version | quote }}
  storageType: Durable
{{- if eq .Values.spec.mode "Combined" }}
  replicas: {{ .Values.spec.replicas }}
  storage:
    storageClassName: {{ .Values.spec.storageClass.name }}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.spec.persistence.size }}
  podTemplate:
    spec:
      resources:
        {{- toYaml $res | nindent 8 }}
{{- else if eq .Values.spec.mode "Dedicated" }}
  topology:
    master:
      replicas: {{ .Values.spec.topology.master.replicas }}
      resources:
        {{- $resMaster := .Values.spec.resources -}}
        {{- if and .Values.spec.topology.master.machine (hasKey $machines .Values.spec.topology.master.machine) }}
          {{- $resMaster = get (get $machines .Values.spec.topology.master.machine) "resources" }}
        {{- end }}
        {{- toYaml $resMaster | nindent 8 }}
      storage:
        storageClassName: {{ .Values.spec.storageClass.name }}
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.spec.topology.master.persistence.size }}
    data:
      replicas: {{ .Values.spec.topology.data.replicas }}
      resources:
        {{- $resData := .Values.spec.resources -}}
        {{- if and .Values.spec.topology.data.machine (hasKey $machines .Values.spec.topology.data.machine) }}
          {{- $resData = get (get $machines .Values.spec.topology.data.machine) "resources" }}
        {{- end }}
        {{- toYaml $resData | nindent 8 }}
      storage:
        storageClassName: {{ .Values.spec.storageClass.name }}
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.spec.topology.data.persistence.size }}
    ingest:
      replicas: {{ .Values.spec.topology.ingest.replicas }}
      resources:
        {{- $resIngest := .Values.spec.resources -}}
        {{- if and .Values.spec.topology.ingest.machine (hasKey $machines .Values.spec.topology.ingest.machine) }}
          {{- $resIngest = get (get $machines .Values.spec.topology.ingest.machine) "resources" }}
        {{- end }}
        {{- toYaml $resIngest | nindent 8 }}
      storage:
        storageClassName: {{ .Values.spec.storageClass.name }}
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.spec.topology.ingest.persistence.size }}
{{- end }}
  enableSSL: {{ .Values.spec.enableSSL }}
  disableSecurity: {{ .Values.spec.disableSecurity }}
  terminationPolicy: {{ .Values.spec.terminationPolicy }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{ if not (eq .Values.spec.authPlugin "X-Pack") }}
  internalUsers:
    admin:
      description: "Elasticsearch admin user"
      backendRoles:
      - admin
      reserved: true
      # secretName: {{ include "kubedbcom-elasticsearch-editor-options.fullname" . }}-admin-cred
    kibanaro:
      description: "Kibana user"
      # secretName: {{ include "kubedbcom-elasticsearch-editor-options.fullname" . }}-kibanaro-cred
    kibanaserver:
      description: "Kibana server user"
      reserved: true
      # secretName: {{ include "kubedbcom-elasticsearch-editor-options.fullname" . }}-kibanaserver-cred
    logstash:
      description: "Logstash user"
      # secretName: {{ include "kubedbcom-elasticsearch-editor-options.fullname" . }}-logstash-cred
    metrics_exporter:
      description: "Prometheus metrics exporter user"
      # secretName: {{ include "kubedbcom-elasticsearch-editor-options.fullname" . }}-metrics-exporter-cred
    readall:
      description: "Elasticsearch readall user"
      # secretName: {{ include "kubedbcom-elasticsearch-editor-options.fullname" . }}-readall-cred
    snapshotrestore:
      description: "Elasticsearch snapshot restore user"
      # secretName: {{ include "kubedbcom-elasticsearch-editor-options.fullname" . }}-snapshotrestore-cred
  rolesMapping:
    readall_and_monitor:
      users:
      - metrics_exporter
{{ end }}
{{ if (and .Values.spec.monitoring .Values.spec.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.monitoring.exporter }}
      exporter:
        resources:
          {{- toYaml .resources | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.monitoring.serviceMonitor.labels | nindent 10 }}
{{ end }}
