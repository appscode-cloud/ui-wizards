en:
  labels:
    adminPassword: Admin Password
    agent: Agent
    annotations:
      key: Key
      label: Annotations
      value: Value
    commonLabels: Common Labels
    container: Container
    containerSecurityContext: Container Security Context
    defaultDashboardsTimezone: Default Dashboards Timezone
    defaultRules: Default Rules
    enable_alertManager_question: Enable Alert Manager?
    enable_grafana_question: Enable Grafana?
    enable_grafana_operator_question: Enable Grafana Operator?
    enable_grafana_ui_server_question: Enable Grafana UI Server?
    enable_kube_grafana_dashboard_question: Enable Kube Grafana Dashboard?
    enable_kube_prometheus_stack_question: Enable Kube Prometheus Stack?
    enable_panopticon_question: Enable Panopticon?
    enable_coreDns_question: Enable Core DNS? 
    enable_kubeEtcd_question: Enable Kube Etcd? 
    enable_kubeApiServer_question: Enable Kube API Server? 
    enable_kubeControllerManager_question: Enable Kube Controller Manager? 
    enable_kubelet_question: Enable Kubelet?
    enable_kubeProxy_question: Enable Kube Proxy? 
    enable_kubeScheduler_question: Enable Kube Scheduler? 
    enable_nodeExporter_question: Enable Node Exporter? 
    enable_remoteWriteDashboards_question: Enable Remote Write Dashboards? 
    fsGroup: FS Group
    global: Global
    grafana: Grafana
    imagePullSecrets: Image Pull Secrets
    imageRegistry: Image Registry
    interval: Interval
    labels:
      key: Key
      label: Labels
      value: Value
    monitoring: Monitoring
    name: Name
    namespace: Namespace
    podMonitorNamespaceSelector: Pod Monitor Namespace Selector
    podMonitorSelector: Pod Monitor Selector
    podSecurityContext: Pod Security Context
    prometheus: Prometheus
    prometheusOperator: Propmetheus Operator
    prometheusSpec: Prometheus Spec
    pullPolicy: Pull Policy
    readOnlyRootFilesystem_question: ReadOnly Root Filesystem?
    repository: Repository
    registry: Registry
    registryFQDN: Registry FQDN
    runAsNonRoot_question: Run as Non Root?
    runAsUser: Run as User
    resources: Resources
    scrapeInterval: Scrape Interval
    select_dashboard_to_enable: Select Dashboards to enable
    service:
      cluster_ip: Cluster IP
      external_ip: External IP
      external_ips: External IPs
      external_traffic_policy: External Traffic Policy
      label: Service
      load_balancer_ip: Load Balancer IP
      load_balancer_source_range: Load Balancer Source Range
      load_balancer_source_ranges: Load Balancer Source Ranges
      nodePort: Node Port
      type: Type
    serviceAccount:
      label: Service Account
      name: Name
    serviceMonitorNamespaceSelector: Service Monitor Namespace Selector
    serviceMonitorSelector: Service Monitor Selector
    storageClassName: Storage Class Name
    storageSize: Storage Size
    storageSpec: Storage Spec
    sha: SHA
    tag: Tag
  options:
    selectedDashboards:
      coreDns: Core DNS
      kubeEtcd: Kube Etcd
      kubeApiServer: Kube API Server
      kubeControllerManager: Kube Controller Manager
      kubelet: Kubelet
      kubeProxy: Kube Proxy
      kubeScheduler: Kube Scheduler 
      nodeExporter: Node Exporter
      prometheus: Prometheus
    yesOrNo:
      'no':
        text: 'No'
      'yes':
        text: 'Yes'
    agent:
      prometheus:
        description: Injects the metric exporter sidecar and let you customize ServiceMonitor
        label: Custom ServiceMonitor
      prometheus_builtin:
        description: Inject metric exporter sidecar and add Prometheus annotations to the stats Service
        label: Custom Scrapper
      prometheus_operator:
        description: Inject metric exporter sidecar and creates a ServiceMonitor
        label: Prometheus Operator
  steps:
    - label: Grafana Operator
    - label: Grafana UI Server
    - label: Kube Grafana Dashboard
    - label: Kube Prometheus Stack
    - label: Panopticon