{{- $machines := .Files.Get "data/machines.yaml" | fromYaml -}}
{{- $res := .Values.spec.podResources.resources -}}
{{- if and .Values.spec.podResources.machine (hasKey $machines .Values.spec.podResources.machine) }}
  {{- $res = get (get $machines .Values.spec.podResources.machine) "resources" }}
{{- end }}

{{- define "common.placement" -}}

{{- if .Values.spec.admin.clusterTier.placement.default }}
podPlacementPolicy:
  name: {{ .Values.spec.admin.clusterTier.placement.default }}
{{- end }}

{{- if or .Values.spec.admin.nodeSelector (eq .Values.spec.admin.deployment.default "Dedicated") }}
nodeSelector:
{{- if .Values.spec.admin.nodeSelector }}
{{- toYaml .Values.spec.admin.nodeSelector | nindent 2 }}
{{- end }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
  app: postgreses.kubedb.com
  instance: {{ include "kubedbcom-postgres-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  nodepool: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
{{- end }}
{{- end }}

{{- if or .Values.spec.admin.tolerations (eq .Values.spec.admin.deployment.default "Dedicated") }}
tolerations:
{{- if .Values.spec.admin.tolerations }}
{{- toYaml .Values.spec.admin.tolerations | nindent 2 }}
{{- end }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
  - key: app
    operator: "Equal"
    value: "postgreses.kubedb.com"
    effect: "NoSchedule"
  - key: instance
    operator: "Equal"
    value: {{ include "kubedbcom-postgres-editor-options.fullname" . }}
    effect: "NoSchedule"
  - key: namespace
    operator: "Equal"
    value: {{ .Release.Namespace }}
    effect: "NoSchedule"
  - key: nodepool
    operator: "Equal"
    value: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
    effect: "NoSchedule"
{{- end }}
{{- end }}
{{- end }}

{{- $pgv := (split "." .Values.spec.admin.databases.Postgres.versions.default)._0 | atoi -}}
apiVersion: kubedb.com/v1
kind: Postgres
metadata:
  name: {{ include "kubedbcom-postgres-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-postgres-editor-options.labels" . | nindent 4 }}
{{- if .Values.spec.admin.archiver.default }}
    kubedb.com/archiver: "true"
{{- end }}
{{- if .Values.spec.annotations }}
  annotations:
    {{- include "kubedbcom-postgres-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.admin.databases.Postgres.versions.default | quote }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if eq .Values.spec.mode "Replicaset" }}
  replicas: {{ .Values.spec.replicas }}
{{- else }}
  replicas: 1
{{- end }}
  podTemplate:
    spec:
      containers:
        - name: postgres
          resources:
            {{- toYaml $res | nindent 12 }}
      {{- include "common.placement" . | nindent 6 }}
  storage:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.spec.persistence.size }}
    storageClassName: {{ .Values.spec.admin.storageClasses.default }}
  storageType: Durable
  deletionPolicy: {{ .Values.spec.deletionPolicy }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if .Values.spec.authSecret.password }}
  authSecret:
    name: {{ include "kubedbcom-postgres-editor-options.fullname" . }}-auth
{{- end }}
{{- if .Values.spec.configuration }}
  configSecret:
    name: {{ include "kubedbcom-postgres-editor-options.fullname" . }}-config
{{- end }}
{{- if .Values.spec.admin.tls.default }}
  tls:
    issuerRef:
      apiGroup: "cert-manager.io"
      kind: ClusterIssuer
      name: {{ .Values.spec.admin.clusterIssuers.default }}
  sslMode: verify-full
{{- end }}
{{- if (and .Values.spec.admin.monitoring .Values.spec.admin.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.admin.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.admin.monitoring.exporter }}
      exporter:
        resources:
          {{- toYaml .resources | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
{{- if (and .Values.spec.init .Values.spec.init.archiver .Values.spec.init.archiver.recoveryTimestamp) }}
  init:
    archiver:
      {{- toYaml .Values.spec.init.archiver | nindent 6 }}
{{- end }}
