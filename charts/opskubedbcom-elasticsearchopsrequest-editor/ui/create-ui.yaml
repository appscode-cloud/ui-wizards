steps:
- form:
    discriminator:
      dbDetails:
        type: object
    elements:
    - computed: getDbDetails
      if: returnFalse
      schema:
        $ref: discriminator#/properties/dbDetails
      type: input
    - if: showAndInitName
      label:
        text: labels.op_req_name
      required: true
      schema:
        $ref: schema#/properties/metadata/properties/name
      type: input
    - computed: initNamespace
      disabled: isNamespaceDisabled
      fetch: getNamespaces
      hasGroup: isRancherManaged
      if: showAndInitNamespace
      label:
        text: labels.namespace
      onChange: onNamespaceChange
      required: true
      schema:
        $ref: schema#/properties/metadata/properties/namespace
      type: select
    - computed: initDatabaseRef
      disabled: isDatabaseRefDisabled
      fetch: getDbs
      if: showAndInitDatabaseRef
      label:
        text: labels.databaseRef
      onChange: onDbChange
      refresh: true
      required: true
      schema:
        $ref: schema#/properties/spec/properties/databaseRef/properties/name
      type: select
    - if: showConfigureOpsrequestLabel
      label:
        text: labels.config_ops_request
      type: label-element
    - disabled: isDbDetailsLoading
      hasDescription: true
      if: showAndInitOpsRequestType
      individualItemDisabilityCheck: disableOpsRequest
      label:
        text: labels.ops_request_type
      onChange: onRequestTypeChange
      options:
      - description: options.UpdateVersion.description
        text: options.UpdateVersion.text
        value: UpdateVersion
      - description: options.HorizontalScaling.description
        text: options.HorizontalScaling.text
        value: HorizontalScaling
      - description: options.VerticalScaling.description
        text: options.VerticalScaling.text
        value: VerticalScaling
      - description: options.VolumeExpansion.description
        text: options.VolumeExpansion.text
        value: VolumeExpansion
      - description: options.Restart.description
        text: options.Restart.text
        value: Restart
      - description: options.ReconfigureTLS.description
        text: options.ReconfigureTLS.text
        value: ReconfigureTLS
      schema:
        $ref: schema#/properties/spec/properties/type
      type: radio
    - elements:
      - computed: setValueFromDbDetails|/spec/version
        fetch: getDbVersions
        label:
          text: labels.targetVersion
        schema:
          $ref: schema#/properties/spec/properties/updateVersion/properties/targetVersion
        type: select
      if: ifRequestTypeEqualsTo|UpdateVersion
      type: single-step-form
    - elements:
      - computed: setValueFromDbDetails|/spec/replicas
        if: ifDbTypeEqualsTo|combined|horizontalScaling
        label:
          text: labels.replicas
        schema:
          $ref: schema#/properties/spec/properties/horizontalScaling/properties/node
        type: input
      - elements:
        - computed: setValueFromDbDetails|/spec/topology/master/replicas
          label:
            text: labels.master_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/master
          type: input
        - computed: setValueFromDbDetails|/spec/topology/data/replicas
          label:
            text: labels.data_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/data
          type: input
        - computed: setValueFromDbDetails|/spec/topology/ingest/replicas
          label:
            text: labels.ingest_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/ingest
          type: input
        - computed: setValueFromDbDetails|/spec/topology/ml/replicas
          if: isAuthPluginEqualTo|X-Pack
          label:
            text: labels.ml_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/ml
          type: input
        - computed: setValueFromDbDetails|/spec/topology/transform/replicas
          if: isAuthPluginEqualTo|X-Pack
          label:
            text: labels.transform_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/transform
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataCold/replicas
          if: isAuthPluginEqualTo|X-Pack
          label:
            text: labels.data_cold_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/dataCold
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataContent/replicas
          if: isAuthPluginEqualTo|X-Pack
          label:
            text: labels.data_content_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/dataContent
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataFrozen/replicas
          if: isAuthPluginEqualTo|X-Pack
          label:
            text: labels.data_frozen_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/dataFrozen
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataHot/replicas
          if: isAuthPluginNotEqualTo|SearchGuard
          label:
            text: labels.data_hot_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/dataHot
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataWarm/replicas
          if: isAuthPluginNotEqualTo|SearchGuard
          label:
            text: labels.data_warm_node
          schema:
            $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology/properties/dataWarm
          type: input
        if: ifDbTypeEqualsTo|topology|horizontalScaling
        label:
          text: labels.replicas
        schema:
          $ref: schema#/properties/spec/properties/horizontalScaling/properties/topology
        show_label: true
        type: single-step-form
      if: ifRequestTypeEqualsTo|HorizontalScaling
      label:
        text: Horizontal Scaling Form
      type: single-step-form
    - elements:
      - elements:
        - discriminator:
            machine-master:
              default: ""
              type: string
          elements:
          - computed: setMachine|master
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|master|/spec/topology/master/resources
            schema:
              $ref: discriminator#/machine-master
            type: select
          - if: isMachineCustom|/machine-master
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/master/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/master/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-master:
                default: ""
                type: string
              topologyValue-master:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|master
              schema:
                $ref: discriminator#/topologyKey-master
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|master
              schema:
                $ref: discriminator#/topologyValue-master
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|master
          label:
            text: labels.master_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/master
          show_label: true
          type: single-step-form
        - discriminator:
            machine-data:
              default: ""
              type: string
          elements:
          - computed: setMachine|data
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|data|/spec/topology/data/resources
            schema:
              $ref: discriminator#/machine-data
            type: select
          - if: isMachineCustom|/machine-data
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/data/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/data/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-data:
                default: ""
                type: string
              topologyValue-data:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|data
              schema:
                $ref: discriminator#/topologyKey-data
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|data
              schema:
                $ref: discriminator#/topologyValue-data
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|data
          label:
            text: labels.data_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/data
          show_label: true
          type: single-step-form
        - discriminator:
            machine-ingest:
              default: ""
              type: string
          elements:
          - computed: setMachine|ingest
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|ingest|/spec/topology/ingest/resources
            schema:
              $ref: discriminator#/machine-ingest
            type: select
          - if: isMachineCustom|/machine-ingest
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/ingest/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/ingest/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-ingest:
                default: ""
                type: string
              topologyValue-ingest:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|ingest
              schema:
                $ref: discriminator#/topologyKey-ingest
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|ingest
              schema:
                $ref: discriminator#/topologyValue-ingest
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|ingest
          label:
            text: labels.ingest_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/ingest
          show_label: true
          type: single-step-form
        - discriminator:
            machine-ml:
              default: ""
              type: string
          elements:
          - computed: setMachine|ml
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|ml|/spec/topology/ml/resources
            schema:
              $ref: discriminator#/machine-ml
            type: select
          - if: isMachineCustom|/machine-ml
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/ml/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/ml/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-ml:
                default: ""
                type: string
              topologyValue-ml:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|ml
              schema:
                $ref: discriminator#/topologyKey-ml
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|ml
              schema:
                $ref: discriminator#/topologyValue-ml
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|ml
          label:
            text: labels.ml_mode
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/ml
          show_label: true
          type: single-step-form
        - discriminator:
            machine-transform:
              default: ""
              type: string
          elements:
          - computed: setMachine|transform
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|transform|/spec/topology/transform/resources
            schema:
              $ref: discriminator#/machine-transform
            type: select
          - if: isMachineCustom|/machine-transform
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/transform/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/transform/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-transform:
                default: ""
                type: string
              topologyValue-transform:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|transform
              schema:
                $ref: discriminator#/topologyKey-transform
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|transform
              schema:
                $ref: discriminator#/topologyValue-transform
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|transform
          label:
            text: labels.transform_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/transform
          show_label: true
          type: single-step-form
        - discriminator:
            machine-dataCold:
              default: ""
              type: string
          elements:
          - computed: setMachine|dataCold
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|dataCold|/spec/topology/dataCold/resources
            schema:
              $ref: discriminator#/machine-dataCold
            type: select
          - if: isMachineCustom|/machine-dataCold
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataCold/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataCold/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-dataCold:
                default: ""
                type: string
              topologyValue-dataCold:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|dataCold
              schema:
                $ref: discriminator#/topologyKey-dataCold
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|dataCold
              schema:
                $ref: discriminator#/topologyValue-dataCold
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|dataCold
          label:
            text: labels.data_cold_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/dataCold
          show_label: true
          type: single-step-form
        - discriminator:
            machine-dataContent:
              default: ""
              type: string
          elements:
          - computed: setMachine|dataContent
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|dataContent|/spec/topology/dataContent/resources
            schema:
              $ref: discriminator#/machine-dataContent
            type: select
          - if: isMachineCustom|/machine-dataContent
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataContent/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataContent/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-dataContent:
                default: ""
                type: string
              topologyValue-dataContent:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|dataContent
              schema:
                $ref: discriminator#/topologyKey-dataContent
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|dataContent
              schema:
                $ref: discriminator#/topologyValue-dataContent
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|dataContent
          label:
            text: labels.data_content_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/dataCold
          show_label: true
          type: single-step-form
        - discriminator:
            machine-dataFrozen:
              default: ""
              type: string
          elements:
          - computed: setMachine|dataFrozen
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|dataFrozen|/spec/topology/dataFrozen/resources
            schema:
              $ref: discriminator#/machine-dataFrozen
            type: select
          - if: isMachineCustom|/machine-dataFrozen
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataFrozen/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataFrozen/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-dataFrozen:
                default: ""
                type: string
              topologyValue-dataFrozen:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|dataFrozen
              schema:
                $ref: discriminator#/topologyKey-dataFrozen
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|dataFrozen
              schema:
                $ref: discriminator#/topologyValue-dataFrozen
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|dataFrozen
          label:
            text: labels.data_frozen_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/dataFrozen
          show_label: true
          type: single-step-form
        - discriminator:
            machine-dataHot:
              default: ""
              type: string
          elements:
          - computed: setMachine|dataHot
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|dataHot|/spec/topology/dataHot/resources
            schema:
              $ref: discriminator#/machine-dataHot
            type: select
          - if: isMachineCustom|/machine-dataHot
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataHot/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataHot/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-dataHot:
                default: ""
                type: string
              topologyValue-dataHot:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|dataHot
              schema:
                $ref: discriminator#/topologyKey-dataHot
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|dataHot
              schema:
                $ref: discriminator#/topologyValue-dataHot
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|dataHot
          label:
            text: labels.dataHot_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/dataHot
          show_label: true
          type: single-step-form
        - discriminator:
            machine-dataWarm:
              default: ""
              type: string
          elements:
          - computed: setMachine|dataWarm
            customClass: mt-20
            disableUnselect: true
            fetch: getMachines
            label:
              text: Machine Profile
            onChange: onMachineChange|dataWarm|/spec/topology/dataWarm/resources
            schema:
              $ref: discriminator#/machine-dataWarm
            type: select
          - if: isMachineCustom|/machine-dataWarm
            label:
              text: labels.resources
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataWarm/properties/resources
            type: resource-input-form
          - label:
              text: labels.node_selection_policy
            options:
            - text: LabelSelector
              value: LabelSelector
            - text: Taint
              value: Taint
            schema:
              $ref: schema#/properties/spec/properties/verticalScaling/properties/dataWarm/properties/nodeSelectionPolicy
            type: select
          - discriminator:
              topologyKey-dataWarm:
                default: ""
                type: string
              topologyValue-dataWarm:
                default: ""
                type: string
            elements:
            - label:
                text: labels.key
              required: isVerticalScaleTopologyRequired|dataWarm
              schema:
                $ref: discriminator#/topologyKey-dataWarm
              type: input
            - label:
                text: labels.value
              required: isVerticalScaleTopologyRequired|dataWarm
              schema:
                $ref: discriminator#/topologyValue-dataWarm
              type: input
            label:
              text: labels.topology
            show_label: true
            type: single-step-form
          if: hasResourceValue|dataWarm
          label:
            text: labels.data_warm_node
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/dataWarm
          show_label: true
          type: single-step-form
        if: ifDbTypeEqualsTo|topology|verticalScaling
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling
        type: single-step-form
      - discriminator:
          machine-node:
            default: ""
            type: string
        elements:
        - computed: setMachine|node
          customClass: mt-20
          disableUnselect: true
          fetch: getMachines
          label:
            text: Machine Profile
          onChange: onMachineChange|node|/spec/podTemplate/spec/resources
          schema:
            $ref: discriminator#/machine-node
          type: select
        - if: isMachineCustom|/machine-node
          label:
            text: labels.resources
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/node/properties/resources
          type: resource-input-form
        - label:
            text: labels.node_selection_policy
          options:
          - text: LabelSelector
            value: LabelSelector
          - text: Taint
            value: Taint
          schema:
            $ref: schema#/properties/spec/properties/verticalScaling/properties/node/properties/nodeSelectionPolicy
          type: select
        - discriminator:
            topologyKey-node:
              default: ""
              type: string
            topologyValue-node:
              default: ""
              type: string
          elements:
          - label:
              text: labels.key
            required: isVerticalScaleTopologyRequired|node
            schema:
              $ref: discriminator#/topologyKey-node
            type: input
          - label:
              text: labels.value
            required: isVerticalScaleTopologyRequired|node
            schema:
              $ref: discriminator#/topologyValue-node
            type: input
          label:
            text: labels.topology
          show_label: true
          type: single-step-form
        if: ifDbTypeEqualsTo|combined|verticalScaling
        label:
          text: labels.node
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling/properties/node
        show_label: true
        type: single-step-form
      - computed: setValueFromDbDetails|/spec/monitor/prometheus/exporter/resources|/spec/verticalScaling/exporter/resources
        label:
          text: labels.exporter
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling/properties/exporter/properties/resources
        type: resource-input-form
      if: ifRequestTypeEqualsTo|VerticalScaling
      type: single-step-form
    - elements:
      - computed: setValueFromDbDetails|/spec/storage/resources/requests/storage
        if: ifDbTypeEqualsTo|combined|VolumeExpansion
        label:
          text: labels.storage.size
        customValidation:
          regex: checkVolume|/spec/storage/resources/requests/storage|/spec/volumeExpansion/node
        schema:
          $ref: schema#/properties/spec/properties/volumeExpansion/properties/node
        type: input
      - label:
          text: Mode
        options:
        - text: Offline
          value: Offline
        - text: Online
          value: Online
        required: true
        schema:
          $ref: schema#/properties/spec/properties/volumeExpansion/properties/mode
        type: select
      - elements:
        - computed: setValueFromDbDetails|/spec/topology/master/storage/resources/requests/storage
          if: hasVolumeExpansion|master
          label:
            text: labels.storage.master_size
          customValidation:
            regex: checkVolume|/spec/topology/master/storage/resources/requests/storage|/spec/volumeExpansion/master
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/master
          type: input
        - computed: setValueFromDbDetails|/spec/topology/data/storage/resources/requests/storage
          if: hasVolumeExpansion|data
          label:
            text: labels.storage.data_size
          customValidation:
            regex: checkVolume|/spec/topology/data/storage/resources/requests/storage|/spec/volumeExpansion/data
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/data
          type: input
        - computed: setValueFromDbDetails|/spec/topology/ingest/storage/resources/requests/storage
          if: hasVolumeExpansion|ingest
          label:
            text: labels.storage.ingest_size
          customValidation:
            regex: checkVolume|/spec/topology/ingest/storage/resources/requests/storage|/spec/volumeExpansion/ingest
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/ingest
          type: input
        - computed: setValueFromDbDetails|/spec/topology/ml/storage/resources/requests/storage
          if: hasVolumeExpansion|ml
          label:
            text: labels.storage.ml_size
          customValidation:
            regex: checkVolume|/spec/topology/ml/storage/resources/requests/storage|/spec/volumeExpansion/ml
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/ml
          type: input
        - computed: setValueFromDbDetails|/spec/topology/transform/storage/resources/requests/storage
          if: hasVolumeExpansion|transform
          label:
            text: labels.storage.transform_size
          customValidation:
            regex: checkVolume|/spec/topology/transform/storage/resources/requests/storage|/spec/volumeExpansion/transform
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/transform
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataCold/storage/resources/requests/storage
          if: hasVolumeExpansion|dataCold
          label:
            text: labels.storage.data_cold_size
          customValidation:
            regex: checkVolume|/spec/topology/dataCold/storage/resources/requests/storage|/spec/volumeExpansion/dataCold
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/dataCold
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataContent/storage/resources/requests/storage
          if: hasVolumeExpansion|dataContent
          label:
            text: labels.storage.data_content_size
          customValidation:
            regex: checkVolume|/spec/topology/dataContent/storage/resources/requests/storage|/spec/volumeExpansion/dataContent
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/dataContent
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataFrozen/storage/resources/requests/storage
          if: hasVolumeExpansion|dataFrozen
          label:
            text: labels.storage.data_frozen_size
          customValidation:
            regex: checkVolume|/spec/topology/dataFrozen/storage/resources/requests/storage|/spec/volumeExpansion/dataFrozen
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/dataFrozen
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataHot/storage/resources/requests/storage
          if: hasVolumeExpansion|dataHot
          label:
            text: labels.storage.data_hot_size
          customValidation:
            regex: checkVolume|/spec/topology/dataHot/storage/resources/requests/storage|/spec/volumeExpansion/dataHot
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/dataHot
          type: input
        - computed: setValueFromDbDetails|/spec/topology/dataWarm/storage/resources/requests/storage
          if: hasVolumeExpansion|dataWarm
          label:
            text: labels.storage.data_warm_size
          customValidation:
            regex: checkVolume|/spec/topology/dataWarm/storage/resources/requests/storage|/spec/volumeExpansion/dataWarm
          schema:
            $ref: schema#/properties/spec/properties/volumeExpansion/properties/dataWarm
          type: input
        if: ifDbTypeEqualsTo|topology|VolumeExpansion
        label:
          text: labels.storage.size
        schema:
          $ref: schema#/properties/spec/properties/volumeExpansion
        show_label: true
        type: single-step-form
      if: ifRequestTypeEqualsTo|VolumeExpansion
      label:
        text: Volume Expansion Form
      type: single-step-form
    - elements:
      - discriminator:
          reconfigurationType:
            type: string
        elements:
        - label:
            text: labels.reconfigurationType
          onChange: onReconfigurationTypeChange
          options:
          - text: Select New Config Secret
            value: selectNewConfigSecret
          - text: Apply Config
            value: applyConfig
          - text: Remove
            value: remove
          required: true
          schema:
            $ref: discriminator#/properties/reconfigurationType
          type: radio
        - elements:
          - add_new_button:
              label: labels.createConfig
              target: _blank
              url:
                function: createSecretUrl
            computed: setValueFromDbDetails|/spec/configSecret/name
            fetch: getConfigSecrets
            label:
              text: labels.configSecret
            refresh: true
            required: true
            schema:
              $ref: schema#/properties/spec/properties/configuration/properties/configSecret/properties/name
            type: select
          if: ifReconfigurationTypeEqualsTo|selectNewConfigSecret
          label:
            text: Configuration config secret
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/configSecret
          type: single-step-form
        - addFormLabel: labels.applyConfig.label
          element:
            discriminator:
              configArray:
                emitAs: applyConfig
                type: array
            elements:
            - label:
                text: labels.applyConfig.key
              required: true
              schema:
                $ref: discriminator#/properties/configArray/items/properties/key
              type: input
            - label:
                text: labels.applyConfig.value
              required: true
              schema:
                $ref: discriminator#/properties/configArray/items/properties/value
              type: editor
            type: single-step-form
          if: ifReconfigurationTypeEqualsTo|applyConfig
          label:
            text: labels.applyConfig.label
          onChange: onApplyconfigChange
          required: true
          schema:
            $ref: discriminator#/properties/applyConfig
          tableContents:
          - inTableColumn: true
            label:
              text: labels.applyConfig.key
            path: key
            type: value
            typeOfValue: string
          - inTableColumn: true
            label:
              text: labels.applyConfig.value
            path: value
            type: value
            typeOfValue: code
          type: single-step-form-array
        - if: returnFalse
          label:
            text: labels.removeCustomConfig
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/removeCustomConfig
          type: switch
        label:
          text: labels.configuration
        schema:
          $ref: schema#/properties/spec/properties/configuration
        show_label: true
        type: single-step-form
      if: ifRequestTypeEqualsTo|Reconfigure
      label:
        text: Reconfigure Form
      type: single-step-form
    - discriminator:
        tlsOperation:
          default: update
          type: string
      elements:
      - computed: initTlsOperation
        if: hasTlsField
        label:
          text: labels.tlsOperation
        onChange: onTlsOperationChange
        options:
        - text: Update
          value: update
        - text: Rotate
          value: rotate
        - text: Remove
          value: remove
        schema:
          $ref: discriminator#/properties/tlsOperation
        type: radio
      - if: returnFalse
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/remove
        type: switch
      - if: returnFalse
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/rotateCertificates
        type: switch
      - elements:
        - computed: initIssuerRefApiGroup
          disabled: true
          label:
            text: labels.api_group
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/apiGroup
          type: input
        - computed: setValueFromDbDetails|/spec/tls/issuerRef/kind
          label:
            text: labels.kind
          options:
          - text: Issuer
            value: Issuer
          - text: ClusterIssuer
            value: ClusterIssuer
          required: isIssuerRefRequired
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/kind
          type: select
        - allowUserDefinedOption: true
          computed: setValueFromDbDetails|/spec/tls/issuerRef/name
          fetch: getIssuerRefsName
          label:
            text: labels.name
          required: isIssuerRefRequired
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/name
          type: select
        if: showIssuerRefAndCertificates
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/issuerRef
        type: single-step-form
      - alias: reusable_certificates
        chart:
          name: uibytebuildersdev-component-certificates
          version: v0.17.0
        computed: setValueFromDbDetails|/spec/tls/certificates|/spec/tls/certificates
        functionCallbacks:
          getAliasOptions:
            $ref: functions#/getAliasOptions
        if: showIssuerRefAndCertificates
        moduleResolver: fetchJsons
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/certificates
        type: reusable-element
      if: ifRequestTypeEqualsTo|ReconfigureTLS
      label:
        text: labels.tls
      schema:
        $ref: schema#/properties/spec/properties/tls
      type: single-step-form
    - label:
        text: labels.timeout
      options:
      - text: 5 minutes
        value: 5m
      - text: 10 minutes
        value: 10m
      - text: 30 minutes
        value: 30m
      - text: 1 hour
        value: 1h
      - text: 2 hours
        value: 2h
      - text: 5 hours
        value: 5h
      - text: 10 hours
        value: 10h
      schema:
        $ref: schema#/properties/spec/properties/timeout
      type: select
    - computed: setApplyToIfReady
      label:
        text: labels.apply
      options:
      - text: IfReady (OpsRequest will be applied if database is ready)
        value: IfReady
      - text: Always (OpsRequest will always be applied)
        value: Always
      schema:
        $ref: schema#/properties/spec/properties/apply
      type: radio
    type: single-step-form
  id: basic
  title: steps.0.label
type: multi-step-form
