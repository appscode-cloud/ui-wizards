type: multi-step-form
step:
  - type: single-step-form
    elements:
# common
      - type: input
        label: op_req_name
        if:
          type: function
          name: showAndInitName
        validation:
          type: required
        schema: schema/properties/metadata/properties/name
      - type: select
        label: Namespace
        if:
          type: function
          name: showAndInitNamespace
        init:
          type: func
          value: initNamespace
        disable: isNamespaceDisabled
        loader: getNamespaces
        validation:
          type: required
        hasGroup: true
        schema: schema/properties/metadata/properties/namespace
      - type: select
        label: Database Ref
        if:
          type: function
          name: showAndInitDatabaseRef
        loader:
          name: getDbs
          watchPaths:
            - schema/properties/metadata/properties/namespace
        init:
          type: func
          value: initDatabaseRef
        validation:
          type: required
        disable: isDatabaseRefDisabled
        refresh: true
        # watcher:
        #   paths:
        #     - schema/properties/metadata/properties/namespace
        #   func: initDatabaseRef
        schema: schema/properties/spec/properties/databaseRef/properties/name
      - type: label-element
        label: config_ops_request
        if:
          type: function
          name: showConfigureOpsrequestLabel
      - type: radio
        label: Type of Ops Request
        if:
          type: function
          name: showAndInitOpsRequestType
        options:
          - description: Update your database to any version
            text: Update Version
            value: UpdateVersion
          - description: Scale up or down pod count
            text: Horizontal Scaling
            value: HorizontalScaling
          - description: Manage your CPU resources
            text: Vertical Scaling
            value: VerticalScaling
          - description: Expand database volumes
            text: Volume Expansion
            value: VolumeExpansion
          - description: Restart your database
            text: Restart
            value: Restart
          - description: Reconfigure TLS
            text: ReconfigureTLS
            value: ReconfigureTLS
        init:
          type: func
          value: getRequestTypeFromRoute
        disable: isDbDetailsLoading
        watcher:
          func: isDbDetailsLoading
          paths:
            - temp/dbDetails
            - schema/properties/spec/properties/databaseRef/properties/name
        isHorizontal: true
        schema: schema/properties/spec/properties/type
# UpdateVersion
      - type: block-layout
        showLabels: false
        if:
          type: function
          name: ifRequestTypeEqualsTo|UpdateVersion
        elements:
          - type: select
            label: Target Version
            init:
              type: func
              value: setValueFromDbDetails|/spec/version
            loader: getDbVersions
            schema: schema/properties/spec/properties/updateVersion/properties/targetVersion
# Horizontal Scale
      - type: block-layout
        label: Horizontal Scaling Form
        if:
          type: function
          name: ifRequestTypeEqualsTo|HorizontalScaling
        elements:
          - type: input
            label: Replicas
            if:
              type: function
              name: ifDbTypeEqualsTo|Combined|horizontalScaling
            init:
              type: func
              value: setValueFromDbDetails|/spec/replicas
            schema: schema/properties/spec/properties/horizontalScaling/properties/node
          - type: block-layout
            label: Replicas
            if:
              type: function
              name: ifDbTypeEqualsTo|Topology|horizontalScaling
            showLabels: true
            elements:
              - type: input
                label: Master Node
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/master/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/master
              - type: input
                label: Data Node
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/data/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/data
              - type: input
                label: Ingest Node
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/ingest/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/ingest
              - type: input
                label: ML Node
                if:
                  type: function
                  name: isAuthPluginEqualTo|X-Pack
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/ml/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/ml
              - type: input
                label: Transform Node
                if:
                  type: function
                  name: isAuthPluginEqualTo|X-Pack
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/transform/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/transform
              - type: input
                label: Data Cold Node
                if:
                  type: function
                  name: isAuthPluginEqualTo|X-Pack
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataCold/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/dataCold
              - type: input
                label: Data Content Node
                if:
                  type: function
                  name: isAuthPluginEqualTo|X-Pack
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataContent/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/dataContent
              - type: input
                label: Data Frozen Node
                if:
                  type: function
                  name: isAuthPluginEqualTo|X-Pack
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataFrozen/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/dataFrozen
              - type: input
                label: Data Hot Node
                if:
                  type: function
                  name: isAuthPluginNotEqualTo|SearchGuard
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataHot/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/dataHot
              - type: input
                label: Data Warm Node
                if:
                  type: function
                  name: isAuthPluginNotEqualTo|SearchGuard
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataWarm/replicas
                schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/dataWarm
# vertical Scale
      - type: block-layout
        if:
          type: function
          name: ifRequestTypeEqualsTo|VerticalScaling
        elements:
          - type: block-layout
            if:
              type: function
              name: ifDbTypeEqualsTo|Topology|verticalScaling
            showLabels: false
            elements:
              - type: block-layout
                label: Master Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|master
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|master
                    # watcher:
                    #   func: onMachineChange|master|/spec/topology/master/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/master/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/master/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/master/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|master
                        schema: temp/topologyKey-master
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|master
                        schema: temp/topologyValue-master
              - type: block-layout
                label: Data Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|data
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|data
                    # watcher:
                    #   func: onMachineChange|data|/spec/topology/data/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/data/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/data/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/data/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|data
                        schema: temp/topologyKey-data
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|data
                        schema: temp/topologyValue-data
              - type: block-layout
                label: Ingest Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|ingest
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|ingest
                    # watcher:
                    #   func: onMachineChange|ingest|/spec/topology/ingest/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/ingest/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/ingest/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/ingest/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|ingest
                        schema: temp/topologyKey-ingest
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|ingest
                        schema: temp/topologyValue-ingest
              - type: block-layout
                label: ML Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|ml
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|ml
                    # watcher:
                    #   func: onMachineChange|ml|/spec/topology/ml/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/ml/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/ml/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/ml/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|ml
                        schema: temp/topologyKey-ml
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|ml
                        schema: temp/topologyKey-ml
              - type: block-layout
                label: Transform Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|transform
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|transform
                    # watcher:
                    #   func: onMachineChange|transform|/spec/topology/transform/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/transform/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/transform/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/transform/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|transform
                        schema: temp/topologyKey-transform
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|transform
                        schema: temp/topologyValue-transform
              - type: block-layout
                label: Data Cold Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|dataCold
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|dataCold
                    # watcher:
                    #   func: onMachineChange|dataCold|/spec/topology/dataCold/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/dataCold/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataCold/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataCold/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataCold
                        schema: temp/topologyKey-dataCold
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataCold
                        schema: temp/topologyValue-dataCold
              - type: block-layout
                label: Data Content Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|dataContent
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|dataContent
                    # watcher:
                    #   func: onMachineChange|dataContent|/spec/topology/dataContent/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/dataContent/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataContent/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataContent/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataContent
                        schema: temp/topologyKey-dataContent
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataContent
                        schema: temp/topologyValue-dataContent
              - type: block-layout
                label: Data Frozen Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|dataFrozen
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|dataFrozen
                    # watcher:
                    #   func: onMachineChange|dataFrozen|/spec/topology/dataFrozen/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/dataFrozen/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataFrozen/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataFrozen/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataFrozen
                        schema: temp/topologyKey-dataFrozen
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataFrozen
                        schema: temp/topologyValue-dataFrozen
              - type: block-layout
                label: Data Hot Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|dataHot
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|dataHot
                    # watcher:
                    #   func: onMachineChange|dataHot|/spec/topology/dataHot/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/dataHot/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataHot/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataHot/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataHot
                        schema: temp/topologyKey-dataHot
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataHot
                        schema: temp/topologyValue-dataHot
              - type: block-layout
                label: Data Warm Node
                showLabels: true
                if:
                  type: function
                  name: hasResourceValue|dataWarm
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|dataWarm
                    # watcher:
                    #   func: onMachineChange|dataWarm|/spec/topology/dataWarm/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/dataWarm/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataWarm/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/dataWarm/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataWarm
                        schema: temp/topologyKey-dataWarm
                      - type: input
                        label: Value
                        validation:
                          type: custom
                          name: isVerticalScaleTopologyRequired|dataWarm
                        schema: temp/topologyValue-dataWarm
          - type: block-layout
            label: Node
            showLabels: true
            if:
              type: function
              name: ifDbTypeEqualsTo|Combined|verticalScaling
            elements:
              - type: machine-compare
                label: Resources
                loader: getMachines
                init:
                  type: func
                  value: setMachine|node
                # watcher:
                #   func: onMachineChange|node|/spec/podTemplate/spec/resources
                #   paths:
                #     - schema/properties/spec/properties/verticalScaling/properties/node/properties/resources
                schema: schema/properties/spec/properties/verticalScaling/properties/node/properties/resources
              - type: select
                label: Node Selection Policy
                options:
                  - text: LabelSelector
                    value: LabelSelector
                  - text: Taint
                    value: Taint
                schema: schema/properties/spec/properties/verticalScaling/properties/node/properties/nodeSelectionPolicy
              - type: block-layout
                label: Topology
                showLabels: true
                elements:
                  - type: input
                    label: Key
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|node
                    schema: temp/topologyKey-node
                  - type: input
                    label: Value
                    validation:
                      type: custom
                      name: isVerticalScaleTopologyRequired|node
                    schema: temp/topologyValue-node
          - type: machine-compare
            label: Exporter
            init:
              type: func
              value: setValueFromDbDetails|/spec/monitor/prometheus/exporter/resources|/spec/verticalScaling/exporter/resources
            schema: schema/properties/spec/properties/verticalScaling/properties/exporter/properties/resources
# Volume Expansion
      - type: block-layout
        label: Volume Expansion Form
        if:
          type: function
          name: ifRequestTypeEqualsTo|VolumeExpansion
        elements:
          - type: input
            label: Storage Size
            if:
              type: function
              name: ifDbTypeEqualsTo|Combined|VolumeExpansion
            init:
              type: func
              value: setValueFromDbDetails|/spec/storage/resources/requests/storage
            validation:
              type: custom
              name: checkVolume|/spec/storage/resources/requests/storage|/spec/volumeExpansion/node
            schema: schema/properties/spec/properties/volumeExpansion/properties/node
          - type: select
            label: Mode
            validation:
              type: required
            options:
              - text: Offline
                value: Offline
              - text: Online
                value: Online
            schema: schema/properties/spec/properties/volumeExpansion/properties/mode
          - type: block-layout
            label: Storage Size
            if:
              type: function
              name: ifDbTypeEqualsTo|Topology|VolumeExpansion
            showLabels: true
            elements:
              - type: input
                label: Master Size
                if:
                  type: function
                  name: hasVolumeExpansion|master
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/master/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/master/storage/resources/requests/storage|/spec/volumeExpansion/master
                schema: schema/properties/spec/properties/volumeExpansion/properties/master
              - type: input
                label: Data Size
                if:
                  type: function
                  name: hasVolumeExpansion|data
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/data/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/data/storage/resources/requests/storage|/spec/volumeExpansion/data
                schema: schema/properties/spec/properties/volumeExpansion/properties/data
              - type: input
                label: Ingest Size
                if:
                  type: function
                  name: hasVolumeExpansion|ingest
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/ingest/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/ingest/storage/resources/requests/storage|/spec/volumeExpansion/ingest
                schema: schema/properties/spec/properties/volumeExpansion/properties/ingest
              - type: input
                label: ML Size
                if:
                  type: function
                  name: hasVolumeExpansion|ml
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/ml/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/ml/storage/resources/requests/storage|/spec/volumeExpansion/ml
                schema: schema/properties/spec/properties/volumeExpansion/properties/ml
              - type: input
                label: Transform Size
                if:
                  type: function
                  name: hasVolumeExpansion|transform
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/transform/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/transform/storage/resources/requests/storage|/spec/volumeExpansion/transform
                schema: schema/properties/spec/properties/volumeExpansion/properties/transform
              - type: input
                label: Data Cold Size
                if:
                  type: function
                  name: hasVolumeExpansion|dataCold
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataCold/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/dataCold/storage/resources/requests/storage|/spec/volumeExpansion/dataCold
                schema: schema/properties/spec/properties/volumeExpansion/properties/dataCold
              - type: input
                label: Data Content Size
                if:
                  type: function
                  name: hasVolumeExpansion|dataContent
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataContent/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/dataContent/storage/resources/requests/storage|/spec/volumeExpansion/dataContent
                schema: schema/properties/spec/properties/volumeExpansion/properties/dataContent
              - type: input
                label: Data Frozen Size
                if:
                  type: function
                  name: hasVolumeExpansion|dataFrozen
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataFrozen/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/dataFrozen/storage/resources/requests/storage|/spec/volumeExpansion/dataFrozen
                schema: schema/properties/spec/properties/volumeExpansion/properties/dataFrozen
              - type: input
                label: Data Hot Size
                if:
                  type: function
                  name: hasVolumeExpansion|dataHot
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataHot/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/dataHot/storage/resources/requests/storage|/spec/volumeExpansion/dataHot
                schema: schema/properties/spec/properties/volumeExpansion/properties/dataHot
              - type: input
                label: Data Warm Size
                if:
                  type: function
                  name: hasVolumeExpansion|dataWarm
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/dataWarm/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/dataWarm/storage/resources/requests/storage|/spec/volumeExpansion/dataWarm
                schema: schema/properties/spec/properties/volumeExpansion/properties/dataWarm
# Reconfigure TLS
      - type: block-layout
        label: TLS
        if:
          type: function
          name: ifRequestTypeEqualsTo|ReconfigureTLS
        elements:
          - type: radio
            label: TLS Operation
            if:
              type: function
              name: hasTlsField
            init:
              type: func
              value: initTlsOperation
            options:
              - text: Update
                value: update
              - text: Rotate
                value: rotate
              - text: Remove
                value: remove
            watcher:
              func: onTlsOperationChange
              paths:
                - temp/tlsOperation
            schema: temp/tlsOperation
          - type: switch
            label: ''
            if:
              type: function
              name: returnFalse
            schema: schema/properties/spec/properties/tls/properties/remove
          - type: switch
            label: ''
            if:
              type: function
              name: returnFalse
            schema: schema/properties/spec/properties/tls/properties/rotateCertificates
          - type: block-layout
            label: Issuer Ref
            if:
              type: function
              name: showIssuerRefAndCertificates
            showLabels: false
            elements:
              - type: input
                label: API Group
                init:
                  type: func
                  value: initIssuerRefApiGroup
                disable: returnTrue
                schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/apiGroup
              - type: select
                label: Kind
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/tls/issuerRef/kind
                validation:
                  type: custom
                  name: isIssuerRefRequired
                options:
                  - text: Issuer
                    value: Issuer
                  - text: ClusterIssuer
                    value: ClusterIssuer
                schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/kind
              - type: select
                label: Name
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/tls/issuerRef/name
                loader:
                  name: getIssuerRefsName
                  watchPaths:
                    - schema/properties/spec/properties/tls/properties/issuerRef/properties/kind
                    - schema/properties/metadata/properties/namespace
                validation:
                  type: custom
                  name: isIssuerRefRequired
                schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/name
          - type: block-layout
            label: Certificates
            if:
              type: function
              name: showIssuerRefAndCertificates
            loader: setValueFromDbDetails|/spec/tls/certificates|/spec/tls/certificates
            elements:
              - type: select
                label: Alias
                loader: fetchAliasOptions
                disable: disableAlias
                schema: schema/properties/spec/properties/tls/properties/certificates/items/properties/alias
              - type: input
                label: Secret Name
                schema: schema/properties/spec/properties/tls/properties/certificates/items/properties/secretName
              - type: input
                label: Duration
                schema: schema/properties/spec/properties/tls/properties/certificates/items/properties/duration
              - type: input
                label: Renew Before
                schema: schema/properties/spec/properties/tls/properties/certificates/items/properties/renewBefore
              - type: block-layout
                label: Subject
                showLabels: true
                elements:
                  - type: array-object-form
                    label: Organizations
                    schema: schema/items/properties/subject/properties/organizations
                    elements:
                      - type: input
                        label: organization
                        schema: schema/items/properties/subject/properties/organizations/items
                  - type: array-object-form
                    label: Countries
                    schema: schema/items/properties/subject/properties/countries
                    elements:
                      - type: input
                        label: country
                        schema: schema/items/properties/subject/properties/countries/items
                  - type: array-object-form
                    label: Organizational Units
                    schema: schema/items/properties/subject/properties/organizationalUnits
                    elements:
                      - type: input
                        label: organizational_unit
                        schema: schema/items/properties/subject/properties/organizationalUnits/items
                  - type: array-object-form
                    label: Provinces
                    schema: schema/items/properties/subject/properties/provinces
                    elements:
                      - type: input
                        label: province
                        schema: schema/items/properties/subject/properties/provinces/items
              - type: array-object-form
                label: DNS Names
                schema: schema/items/properties/dnsNames
                elements:
                  - type: input
                    label: dns name
                    schema: schema/items/properties/dnsNames/items
              - type: array-object-form
                label: IP Addresses
                schema: schema/items/properties/ipAddresses
                elements:
                  - type: input
                    label: ip address
                    schema: schema/items/properties/ipAddresses/items
# common
      - type: select
        label: Timeout
        schema: 'schema/properties/spec/properties/timeout'
        options:
          - text: 5 minutes
            value: 5m
          - text: 10 minutes
            value: 10m
          - text: 30 minutes
            value: 30m
          - text: 1 hour
            value: 1h
          - text: 2 hours
            value: 2h
          - text: 5 hours
            value: 5h
          - text: 10 hours
            value: 10h
      - type: radio
        label: apply
        schema: 'schema/properties/spec/properties/apply'
        init:
          type: func
          value: setApplyToIfReady
        options:
          - text: IfReady (OpsRequest will be applied if database is ready)
            value: IfReady
          - text: Always (OpsRequest will always be applied)
            value: Always
