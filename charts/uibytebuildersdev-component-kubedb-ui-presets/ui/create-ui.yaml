elements:
- elements:
  - label:
      text: labels.deployment.toggle
    schema:
      $ref: schema#/properties/deployment/properties/toggle
    type: switch
  - hasDescription: true
    options:
    - description: labels.deployment.shared
      text: Shared
      value: Shared
    - description: labels.deployment.dedicated
      text: Dedicated
      value: Dedicated
    schema:
      $ref: schema#/properties/deployment/properties/default
    type: radio
  hideForm: true
  label:
    text: labels.deployment.name
  schema:
    $ref: schema#/properties/deployment
  show_label: true
  type: single-step-form
- elements:
  - label:
      text: labels.clusterTier.toggle
    schema:
      $ref: schema#/properties/clusterTier/properties/toggle
    type: switch
  - options:
    - text: General Purpose
      value: GeneralPurpose
    - text: Memory Optimized
      value: MemoryOptimized
    - text: CPU Optimized
      value: CPUOptimized
    schema:
      $ref: schema#/properties/clusterTier/properties/default
    type: radio
  - elements:
    - label:
        text: labels.clusterTier.placement.toggle
      schema:
        $ref: schema#/properties/clusterTier/properties/placement/properties/toggle
      type: switch
    - fetch: getPlacements
      label:
        text: labels.clusterTier.placement.availablePlacement
      schema:
        $ref: schema#/properties/clusterTier/properties/placement/properties/available
      type: multiselect
    - disableUnselect: true
      fetch: getOptions|clusterTier/placement
      label:
        text: labels.clusterTier.placement.default
      schema:
        $ref: schema#/properties/clusterTier/properties/placement/properties/default
      type: select
    schema:
      $ref: schema#/properties/clusterTier/properties/placement
    type: single-step-form
  - elements:
    - label:
        text: labels.clusterTier.nodeTopology.toggle
      schema:
        $ref: schema#/properties/clusterTier/properties/nodeTopology/properties/toggle
      type: switch
    - fetch: getNodeTopology
      label:
        text: labels.clusterTier.nodeTopology.availableNodeTopology
      schema:
        $ref: schema#/properties/clusterTier/properties/nodeTopology/properties/available
      type: multiselect
    - disableUnselect: true
      fetch: getOptions|clusterTier/nodeTopology
      label:
        text: labels.clusterTier.nodeTopology.default
      schema:
        $ref: schema#/properties/clusterTier/properties/nodeTopology/properties/default
      type: select
    schema:
      $ref: schema#/properties/clusterTier/properties/nodeTopology
    type: single-step-form
  hideForm: false
  label:
    text: labels.clusterTier.name
  schema:
    $ref: schema#/properties/clusterTier
  show_label: true
  type: single-step-form
- discriminator:
    allDbVersions:
      default: {}
      type: object
    clickhouse:
      default:
        isConfigure: false
      type: object
    druid:
      default:
        isConfigure: false
      type: object
    elasticsearch:
      default:
        isConfigure: false
      type: object
    ferretdb:
      default:
        isConfigure: false
      type: object
    kafka:
      default:
        isConfigure: false
      type: object
    mariadb:
      default:
        isConfigure: false
      type: object
    memcached:
      default:
        isConfigure: false
      type: object
    mongodb:
      default:
        isConfigure: false
      type: object
    mssqlserver:
      default:
        isConfigure: false
      type: object
    mysql:
      default:
        isConfigure: false
      type: object
    perconaxtradb:
      default:
        isConfigure: false
      type: object
    pgbouncer:
      default:
        isConfigure: false
      type: object
    pgpool:
      default:
        isConfigure: false
      type: object
    postgres:
      default:
        isConfigure: false
      type: object
    proxysql:
      default:
        isConfigure: false
      type: object
    rabbitmq:
      default:
        isConfigure: false
      type: object
    redis:
      default:
        isConfigure: false
      type: object
    singlestore:
      default:
        isConfigure: false
      type: object
    solr:
      default:
        isConfigure: false
      type: object
    zookeeper:
      default:
        isConfigure: false
      type: object
  elements:
  - fetch: FetchAllDbVersions
    if: returnFalse
    schema:
      $ref: discriminator#/allDbVersions
    type: input
  - label:
      text: labels.databases.ClickHouse.configure
    schema:
      $ref: discriminator#/clickhouse/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.ClickHouse.toggle
        schema:
          $ref: schema#/properties/databases/properties/ClickHouse/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|ClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          $ref: schema#/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/ClickHouse/properties/versions
      type: single-step-form
    if: isConfigureDb|clickhouse
    schema:
      $ref: schema#/properties/databases/properties/ClickHouse
    type: single-step-form
  - label:
      text: labels.databases.Druid.configure
    schema:
      $ref: discriminator#/druid/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Druid.toggle
        schema:
          $ref: schema#/properties/databases/properties/Druid/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Druid
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|Druid
        schema:
          $ref: schema#/properties/databases/properties/Druid/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Druid
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Druid/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Druid/properties/versions
      type: single-step-form
    if: isConfigureDb|druid
    schema:
      $ref: schema#/properties/databases/properties/Druid
    type: single-step-form
  - label:
      text: labels.databases.Elasticsearch.configure
    schema:
      $ref: discriminator#/elasticsearch/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Elasticsearch.toggle
        schema:
          $ref: schema#/properties/databases/properties/Elasticsearch/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Elasticsearch
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|Elasticsearch
        schema:
          $ref: schema#/properties/databases/properties/Elasticsearch/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Elasticsearch
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Elasticsearch/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Elasticsearch/properties/versions
      type: single-step-form
    if: isConfigureDb|elasticsearch
    schema:
      $ref: schema#/properties/databases/properties/Elasticsearch
    type: single-step-form
  - label:
      text: labels.databases.FerretDB.configure
    schema:
      $ref: discriminator#/ferretdb/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.FerretDB.toggle
        schema:
          $ref: schema#/properties/databases/properties/FerretDB/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|FerretDB
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ferretdb
        schema:
          $ref: schema#/properties/databases/properties/FerretDB/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|FerretDB
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/FerretDB/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/FerretDB/properties/versions
      type: single-step-form
    if: isConfigureDb|ferretdb
    schema:
      $ref: schema#/properties/databases/properties/FerretDB
    type: single-step-form
  - label:
      text: labels.databases.Kafka.configure
    schema:
      $ref: discriminator#/kafka/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Kafka.toggle
        schema:
          $ref: schema#/properties/databases/properties/Kafka/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Kafka
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|kafka
        schema:
          $ref: schema#/properties/databases/properties/Kafka/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Kafka
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Kafka/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Kafka/properties/versions
      type: single-step-form
    if: isConfigureDb|kafka
    schema:
      $ref: schema#/properties/databases/properties/Kafka
    type: single-step-form
  - label:
      text: labels.databases.MSSQLServer.configure
    schema:
      $ref: discriminator#/mssqlserver/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.MSSQLServer.toggle
        schema:
          $ref: schema#/properties/databases/properties/MSSQLServer/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|MSSQLServer
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|mssqlserver
        schema:
          $ref: schema#/properties/databases/properties/MSSQLServer/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|MSSQLServer
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/MSSQLServer/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/MSSQLServer/properties/versions
      type: single-step-form
    if: isConfigureDb|mssqlserver
    schema:
      $ref: schema#/properties/databases/properties/MSSQLServer
    type: single-step-form
  - label:
      text: labels.databases.MariaDB.configure
    schema:
      $ref: discriminator#/mariadb/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.MariaDB.toggle
        schema:
          $ref: schema#/properties/databases/properties/MariaDB/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|MariaDB
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|mariadb
        schema:
          $ref: schema#/properties/databases/properties/MariaDB/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|MariaDB
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/MariaDB/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/MariaDB/properties/versions
      type: single-step-form
    if: isConfigureDb|mariadb
    schema:
      $ref: schema#/properties/databases/properties/MariaDB
    type: single-step-form
  - label:
      text: labels.databases.Memcached.configure
    schema:
      $ref: discriminator#/memcached/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Memcached.toggle
        schema:
          $ref: schema#/properties/databases/properties/Memcached/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Memcached
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|memcached
        schema:
          $ref: schema#/properties/databases/properties/Memcached/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Memcached
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Memcached/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Memcached/properties/versions
      type: single-step-form
    if: isConfigureDb|memcached
    schema:
      $ref: schema#/properties/databases/properties/Memcached
    type: single-step-form
  - label:
      text: labels.databases.MongoDB.configure
    schema:
      $ref: discriminator#/mongodb/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.MongoDB.toggle
        schema:
          $ref: schema#/properties/databases/properties/MongoDB/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|MongoDB
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|mongodb
        schema:
          $ref: schema#/properties/databases/properties/MongoDB/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|MongoDB
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/MongoDB/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/MongoDB/properties/versions
      type: single-step-form
    if: isConfigureDb|mongodb
    schema:
      $ref: schema#/properties/databases/properties/MongoDB
    type: single-step-form
  - label:
      text: labels.databases.MySQL.configure
    schema:
      $ref: discriminator#/mysql/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.MySQL.toggle
        schema:
          $ref: schema#/properties/databases/properties/MySQL/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|MySQL
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|mysql
        schema:
          $ref: schema#/properties/databases/properties/MySQL/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|MySQL
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/MySQL/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/MySQL/properties/versions
      type: single-step-form
    if: isConfigureDb|mysql
    schema:
      $ref: schema#/properties/databases/properties/MySQL
    type: single-step-form
  - label:
      text: labels.databases.PerconaXtraDB.configure
    schema:
      $ref: discriminator#/perconaxtradb/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.PerconaXtraDB.toggle
        schema:
          $ref: schema#/properties/databases/properties/PerconaXtraDB/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|PerconaXtraDB
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|perconaxtradb
        schema:
          $ref: schema#/properties/databases/properties/PerconaXtraDB/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|PerconaXtraDB
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/PerconaXtraDB/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/PerconaXtraDB/properties/versions
      type: single-step-form
    if: isConfigureDb|perconaxtradb
    schema:
      $ref: schema#/properties/databases/properties/PerconaXtraDB
    type: single-step-form
  - label:
      text: labels.databases.PgBouncer.configure
    schema:
      $ref: discriminator#/pgbouncer/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.PgBouncer.toggle
        schema:
          $ref: schema#/properties/databases/properties/PgBouncer/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|PgBouncer
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|pgbouncer
        schema:
          $ref: schema#/properties/databases/properties/PgBouncer/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|PgBouncer
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/PgBouncer/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/PgBouncer/properties/versions
      type: single-step-form
    if: isConfigureDb|pgbouncer
    schema:
      $ref: schema#/properties/databases/properties/PgBouncer
    type: single-step-form
  - label:
      text: labels.databases.Pgpool.configure
    schema:
      $ref: discriminator#/pgpool/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Pgpool.toggle
        schema:
          $ref: schema#/properties/databases/properties/Pgpool/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Pgpool
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|pgpool
        schema:
          $ref: schema#/properties/databases/properties/Pgpool/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Pgpool
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Pgpool/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Pgpool/properties/versions
      type: single-step-form
    if: isConfigureDb|pgpool
    schema:
      $ref: schema#/properties/databases/properties/Pgpool
    type: single-step-form
  - label:
      text: labels.databases.Postgres.configure
    schema:
      $ref: discriminator#/postgres/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Postgres.toggle
        schema:
          $ref: schema#/properties/databases/properties/Postgres/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Postgres
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|postgres
        schema:
          $ref: schema#/properties/databases/properties/Postgres/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Postgres
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Postgres/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Postgres/properties/versions
      type: single-step-form
    if: isConfigureDb|postgres
    schema:
      $ref: schema#/properties/databases/properties/Postgres
    type: single-step-form
  - label:
      text: labels.databases.ProxySQL.configure
    schema:
      $ref: discriminator#/proxysql/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.ProxySQL.toggle
        schema:
          $ref: schema#/properties/databases/properties/ProxySQL/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|ProxySQL
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|proxysql
        schema:
          $ref: schema#/properties/databases/properties/ProxySQL/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ProxySQL
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/ProxySQL/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/ProxySQL/properties/versions
      type: single-step-form
    if: isConfigureDb|proxysql
    schema:
      $ref: schema#/properties/databases/properties/ProxySQL
    type: single-step-form
  - label:
      text: labels.databases.RabbitMQ.configure
    schema:
      $ref: discriminator#/rabbitmq/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.RabbitMQ.toggle
        schema:
          $ref: schema#/properties/databases/properties/RabbitMQ/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|RabbitMQ
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|rabbitmq
        schema:
          $ref: schema#/properties/databases/properties/RabbitMQ/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|RabbitMQ
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/RabbitMQ/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/RabbitMQ/properties/versions
      type: single-step-form
    if: isConfigureDb|rabbitmq
    schema:
      $ref: schema#/properties/databases/properties/RabbitMQ
    type: single-step-form
  - label:
      text: labels.databases.Redis.configure
    schema:
      $ref: discriminator#/redis/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Redis.toggle
        schema:
          $ref: schema#/properties/databases/properties/Redis/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Redis
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|redis
        schema:
          $ref: schema#/properties/databases/properties/Redis/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Redis
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Redis/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Redis/properties/versions
      type: single-step-form
    if: isConfigureDb|redis
    schema:
      $ref: schema#/properties/databases/properties/Redis
    type: single-step-form
  - label:
      text: labels.databases.Singlestore.configure
    schema:
      $ref: discriminator#/singlestore/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Singlestore.toggle
        schema:
          $ref: schema#/properties/databases/properties/Singlestore/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Singlestore
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|singlestore
        schema:
          $ref: schema#/properties/databases/properties/Singlestore/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Singlestore
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Singlestore/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Singlestore/properties/versions
      type: single-step-form
    if: isConfigureDb|singlestore
    schema:
      $ref: schema#/properties/databases/properties/Singlestore
    type: single-step-form
  - label:
      text: labels.databases.Solr.configure
    schema:
      $ref: discriminator#/solr/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.Solr.toggle
        schema:
          $ref: schema#/properties/databases/properties/Solr/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|Solr
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|solr
        schema:
          $ref: schema#/properties/databases/properties/Solr/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|Solr
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/Solr/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/Solr/properties/versions
      type: single-step-form
    if: isConfigureDb|solr
    schema:
      $ref: schema#/properties/databases/properties/Solr
    type: single-step-form
  - label:
      text: labels.databases.ZooKeeper.configure
    schema:
      $ref: discriminator#/zookeeper/isConfigure
    type: switch
  - elements:
    - elements:
      - label:
          text: labels.databases.ZooKeeper.toggle
        schema:
          $ref: schema#/properties/databases/properties/ZooKeeper/properties/versions/properties/toggle
        type: switch
      - fetch: FetchDbVersions|ZooKeeper
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|zookeeper
        schema:
          $ref: schema#/properties/databases/properties/ZooKeeper/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ZooKeeper
        label:
          text: labels.databases.default
        schema:
          $ref: schema#/properties/databases/properties/ZooKeeper/properties/versions/properties/default
        type: select
      schema:
        $ref: schema#/properties/databases/properties/ZooKeeper/properties/versions
      type: single-step-form
    if: isConfigureDb|zookeeper
    schema:
      $ref: schema#/properties/databases/properties/ZooKeeper
    type: single-step-form
  hideForm: true
  label:
    text: labels.databases.name
  schema:
    $ref: schema#/properties/databases
  show_label: true
  type: single-step-form
- elements:
  - label:
      text: labels.storageClass.toggle
    schema:
      $ref: schema#/properties/storageClasses/properties/toggle
    type: switch
  - fetch: getStorageClass
    label:
      text: labels.storageClass.available
    schema:
      $ref: schema#/properties/storageClasses/properties/available
    type: multiselect
  - fetch: getOptions|storageClasses
    label:
      text: labels.storageClass.default
    schema:
      $ref: schema#/properties/storageClasses/properties/default
    type: select
  hideForm: false
  label:
    text: labels.storageClass.name
  schema:
    $ref: schema#/properties/storageClasses
  show_label: true
  type: single-step-form
- elements:
  - label:
      text: labels.storageClass.toggle
    schema:
      $ref: schema#/properties/tls/properties/toggle
    type: switch
  - label:
      text: labels.tls.default
    schema:
      $ref: schema#/properties/tls/properties/default
    type: switch
  hideForm: true
  label:
    text: labels.tls.name
  schema:
    $ref: schema#/properties/tls
  show_label: true
  type: single-step-form
- elements:
  - label:
      text: labels.clusterIssuers.toggle
    schema:
      $ref: schema#/properties/clusterIssuers/properties/toggle
    type: switch
  - fetch: getClusterIssuers
    label:
      text: labels.clusterIssuers.available
    schema:
      $ref: schema#/properties/clusterIssuers/properties/available
    type: multiselect
  - fetch: getOptions|clusterIssuers
    label:
      text: labels.clusterIssuers.default
    schema:
      $ref: schema#/properties/clusterIssuers/properties/default
    type: select
  hideForm: false
  label:
    text: labels.clusterIssuers.name
  schema:
    $ref: schema#/properties/clusterIssuers
  show_label: true
  type: single-step-form
- elements:
  - label:
      text: labels.expose.toggle
    schema:
      $ref: schema#/properties/expose/properties/toggle
    type: switch
  - label:
      text: labels.expose.default
    schema:
      $ref: schema#/properties/expose/properties/default
    type: switch
  hideForm: true
  label:
    text: labels.expose.name
  schema:
    $ref: schema#/properties/expose
  show_label: true
  type: single-step-form
- elements:
  - label:
      text: labels.monitoring.toggle
    schema:
      $ref: schema#/properties/monitoring/properties/toggle
    type: switch
  - label:
      text: labels.monitoring.agent
    options:
    - text: prometheus.io/operator
      value: prometheus.io/operator
    - text: prometheus.io
      value: prometheus.io
    - text: prometheus.io/builtin
      value: prometheus.io/builtin
    schema:
      $ref: schema#/properties/monitoring/properties/agent
    type: radio
  - elements:
    - label:
        text: labels.monitoring.exporter.name
      schema:
        $ref: schema#/properties/monitoring/properties/exporter/properties/resources
      type: resource-input-form
    schema:
      $ref: schema#/properties/monitoring/properties/exporter
    type: single-step-form
  hideForm: true
  label:
    text: labels.monitoring.name
  schema:
    $ref: schema#/properties/monitoring
  show_label: true
  type: single-step-form
- elements:
  - label:
      text: labels.alert.toggle
    schema:
      $ref: schema#/properties/alert/properties/toggle
    type: switch
  hideForm: true
  label:
    text: labels.alert.name
  schema:
    $ref: schema#/properties/alert
  show_label: true
  type: single-step-form
- elements:
  - label:
      text: labels.archiver.toggle
    schema:
      $ref: schema#/properties/archiver/properties/toggle
    type: switch
  - label:
      text: labels.archiver.default
    schema:
      $ref: schema#/properties/archiver/properties/default
    type: switch
  hideForm: true
  label:
    text: labels.archiver.name
  schema:
    $ref: schema#/properties/archiver
  show_label: true
  type: single-step-form
if: isKubedbUiPreset
schema:
  $ref: schema#/
type: single-step-form
