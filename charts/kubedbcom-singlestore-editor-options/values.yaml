# Default values for kubedbcom-singlestore-editor-options.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

metadata:
  resource:
    group: kubedb.com
    kind: Singlestore
    name: singlestores
    scope: Namespaced
    version: v1alpha2
  release:
    # Release name
    name: ""
    # Release namespace
    namespace: ""

spec:
  # Annotations to add to the database custom resource
  annotations: {}

  # Labels to add to all the template objects
  labels: {}

  # Standalone, Topology
  mode: Standalone
  topology:
    aggregator:
      persistence:
        size: 10Gi

      podResources:
        machine: ""

        resources:
          limits:
            cpu: 500m
            memory: 2Gi
      replicas: 2
    leaf:
      persistence:
        size: 10Gi

      podResources:
        machine: ""

        resources:
          limits:
            cpu: 500m
            memory: 2Gi
      replicas: 3

  licenseSecret:
    name: ""

  deletionPolicy: WipeOut

  persistence:
    size: 10Gi
  podResources:
    machine: ""

    resources:
      limits:
        cpu: 500m
        memory: 1Gi

  authSecret:
    name: ""

    password: ""
  configuration: ""

  admin:
    deployment:
      default: Dedicated
      toggle: true
    clusterTier:
      default: "GeneralPurpose"
      toggle: true
      nodeTopology:
        available: ["m4", "m7gd", "c5d", "c7g", "t4g", "r5a", "r6g", "a-family", "b-family", "d-family", "standard-bsv2-family", "standard-ddv4-family", "standard-dv2-family"]
        default: "standard-bsv2-family"
        toggle: true
      placement:
        available: ["majority-on-spot", "minority-on-spot", "multizone", "ondemand-only", "one-on-ondemand", "spot-only", "zone-ap-southeast-1a", "zone-ap-southeast-1b", "zone-ap-southeast-1c", "default"]
        default: "default"
        toggle: true

    databases:
      Singlestore:
        versions:
          available: ["8.1.32", "8.5.7"]
          default: "8.1.32"
          toggle: true
    storageClasses:
      available: ["linode-block-storage", "default", "standard", "gp2"]
      default: "default"
      toggle: true

    tls:
      default: true
      toggle: true
    clusterIssuers:
      available: ["global-ca", "cluster-issuer"]
      default: "cluster-issuer"
      toggle: true
    webUI:
      default: false
      toggle: false

    monitoring:
      # Name of monitoring agent (one of "prometheus.io", "prometheus.io/operator", "prometheus.io/builtin")
      agent: prometheus.io/operator
      exporter:
        resources: # +doc-gen:break
          requests:
            cpu: 100m
            memory: 128Mi
      toggle: true
    alert:
      toggle: true

    archiver:
      toggle: false
      default: false

  backup:
    tool: ""
    toggle: true
    kubestash:
      schedule: "0 */2 * * *"
      storageRef:
        name: default
        namespace: stash
      retentionPolicy:
        name: "keep-1mo"
        namespace: stash
      encryptionSecret:
        name: default-encryption-secret
        namespace: stash
  monitoring:
    serviceMonitor:
      # Specify the labels for ServiceMonitor.
      # Prometheus crd will select ServiceMonitor using these labels.
      # Only usable when monitoring agent is `prometheus.io/webhook server`.
      labels:
        monitoring.appscode.com/prometheus: federated

form:
  alert:
    ## Enable PrometheusRule alerts
    enabled: warning

    ## Labels for default rules
    labels: # +doc-gen:break
      release: kube-prometheus-stack

    ## Annotations for default rules
    annotations: {}

    ## Additional labels for PrometheusRule alerts
    additionalRuleLabels: {}

    ## Prefix for runbook URLs. Use this to override the first part of the runbookURLs that is common to all rules.
    # runbookUrl: "https://runbooks.prometheus-operator.dev/runbooks"

    groups:
      database:
        enabled: warning
        rules:
          # Specifies the alert configuration for database is in NotReady phase, that means the database is not accepting connections, read/write are hampered.
          singlestoreInstanceDown:
            enabled: true
            duration: "0m"
            severity: critical
          # Specifies the alert configuration for service is down.
          singlestoreServiceDown:
            enabled: true
            duration: "0m"
            severity: critical
          # Specifies the alert configuration for too many connections.
          singlestoreTooManyConnections:
            enabled: true
            duration: "2m"
            val: 80
            severity: warning
          # Specifies the alert configuration for high thread running.
          singlestoreHighThreadsRunning:
            enabled: true
            duration: "2m"
            val: 60
            severity: warning
          # Specifies the alert configuration for one or more pod are restarted.
          singlestoreRestarted:
            enabled: true
            duration: "0m"
            val: 60
            severity: warning
          # Specifies the alert configuration for high query.
          singlestoreHighQPS:
            enabled: true
            duration: "0m"
            val: 1000
            severity: critical
          # Specifies the alert configuration for high incoming bytes.
          singlestoreHighIncomingBytes:
            enabled: true
            duration: "0m"
            val: 1048576 # 1MB
            severity: critical
          # Specifies the alert configuration for high outgoing bytes.
          singlestoreHighOutgoingBytes:
            enabled: true
            duration: "0m"
            val: 1048576 # 1MB
            severity: critical
          # Sepcifies the alert configuration for persistent volume usages.
          diskUsageHigh:
            enabled: true
            val: 80
            duration: "1m"
            severity: warning
          diskAlmostFull:
            enabled: true
            val: 95
            duration: "1m"
            severity: critical
      provisioner:
        enabled: warning
        rules:
          appPhaseNotReady:
            enabled: true
            duration: "1m"
            severity: critical
          appPhaseCritical:
            enabled: true
            duration: "15m"
            severity: warning
      kubeStash:
        enabled: warning
        rules:
          backupSessionFailed:
            enabled: true
            duration: "0m"
            severity: critical
          restoreSessionFailed:
            enabled: true
            duration: "0m"
            severity: critical
          noBackupSessionForTooLong:
            enabled: true
            duration: "0m"
            val: 18000
            severity: warning
          repositoryCorrupted:
            enabled: true
            duration: "5m"
            severity: critical
          repositoryStorageRunningLow:
            enabled: true
            duration: "5m"
            val: 10737418240 # 10GB
            severity: warning
          backupSessionPeriodTooLong:
            enabled: true
            duration: "0m"
            val: 1800 # 30 minute
            severity: warning
          restoreSessionPeriodTooLong:
            enabled: true
            duration: "0m"
            val: 1800 # 30 minute
            severity: warning
