properties:
  metadata:
    properties:
      release:
        properties:
          name:
            type: string
          namespace:
            type: string
        required:
        - name
        - namespace
        type: object
      resource:
        description: ResourceID identifies a resource
        properties:
          group:
            type: string
          kind:
            description: Kind is the serialized kind of the resource.  It is normally
              CamelCase and singular.
            type: string
          name:
            description: 'Name is the plural name of the resource to serve.  It must
              match the name of the CustomResourceDefinition-registration too: plural.group
              and it must be all lowercase.'
            type: string
          scope:
            description: ResourceScope is an enum defining the different scopes available
              to a custom resource
            type: string
          version:
            type: string
        required:
        - group
        type: object
    required:
    - release
    - resource
    type: object
  spec:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      backend:
        properties:
          credentialSecret:
            properties:
              azure:
                properties:
                  accountKey:
                    type: string
                required:
                - accountKey
                type: object
              consul:
                properties:
                  aclToken:
                    type: string
                required:
                - aclToken
                type: object
              dynamodb:
                properties:
                  accessKey:
                    type: string
                  secretKey:
                    type: string
                  sessionToken:
                    type: string
                required:
                - accessKey
                - secretKey
                type: object
              etcd:
                properties:
                  password:
                    type: string
                  username:
                    type: string
                required:
                - password
                - username
                type: object
              gcs:
                properties:
                  saJson:
                    type: string
                required:
                - saJson
                type: object
              mysql:
                properties:
                  password:
                    type: string
                  username:
                    type: string
                required:
                - password
                - username
                type: object
              name:
                type: string
              postgresql:
                properties:
                  connectionURL:
                    type: string
                required:
                - connectionURL
                type: object
              s3:
                properties:
                  accessKey:
                    type: string
                  secretKey:
                    type: string
                required:
                - accessKey
                - secretKey
                type: object
              swift:
                properties:
                  authToken:
                    type: string
                  password:
                    type: string
                  username:
                    type: string
                required:
                - authToken
                - password
                - username
                type: object
            type: object
          provider:
            properties:
              azure:
                properties:
                  accountName:
                    type: string
                required:
                - accountName
                type: object
              consul:
                properties:
                  address:
                    type: string
                  path:
                    type: string
                required:
                - address
                - path
                type: object
              dynamodb:
                type: object
              etcd:
                properties:
                  address:
                    type: string
                required:
                - address
                type: object
              gcs:
                properties:
                  bucket:
                    type: string
                required:
                - bucket
                type: object
              inmem:
                type: object
              raft:
                properties:
                  persistence:
                    properties:
                      size:
                        type: string
                    required:
                    - size
                    type: object
                  storageClass:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                required:
                - persistence
                - storageClass
                type: object
              s3:
                properties:
                  bucket:
                    type: string
                  credentialSecret:
                    type: string
                required:
                - bucket
                - credentialSecret
                type: object
              swift:
                type: object
              type:
                enum:
                - azure
                - consul
                - dynamodb
                - etcd
                - gcs
                - inmem
                - mysql
                - postgresql
                - raft
                - s3
                - swift
                type: string
            required:
            - type
            type: object
          tlsSecret:
            properties:
              consul:
                properties:
                  caCrt:
                    type: string
                  clientCrt:
                    type: string
                  clientKey:
                    type: string
                required:
                - caCrt
                - clientCrt
                - clientKey
                type: object
              mysql:
                properties:
                  tlsCaFile:
                    type: string
                required:
                - tlsCaFile
                type: object
              name:
                type: string
            type: object
        required:
        - credentialSecret
        - provider
        - tlsSecret
        type: object
      labels:
        additionalProperties:
          type: string
        type: object
      machine:
        enum:
        - db.t.micro
        - db.t.small
        - db.t.medium
        - db.t.large
        - db.t.xlarge
        - db.t.2xlarge
        - db.m.small
        - db.m.large
        - db.m.xlarge
        - db.m.2xlarge
        - db.m.4xlarge
        - db.m.8xlarge
        - db.m.12xlarge
        - db.m.16xlarge
        - db.m.24xlarge
        - db.r.large
        - db.r.xlarge
        - db.r.2xlarge
        - db.r.4xlarge
        - db.r.8xlarge
        - db.r.12xlarge
        - db.r.16xlarge
        - db.r.24xlarge
        type: string
      monitoring:
        properties:
          agent:
            enum:
            - prometheus.io
            - prometheus.io/operator
            - prometheus.io/builtin
            type: string
          exporter:
            properties:
              resources:
                description: Compute Resources required by the sidecar container.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
            type: object
          serviceMonitor:
            properties:
              labels:
                additionalProperties:
                  type: string
                type: object
            type: object
        required:
        - agent
        - exporter
        - serviceMonitor
        type: object
      replicas:
        type: integer
      resources:
        description: ResourceRequirements describes the compute resource requirements.
        properties:
          limits:
            additionalProperties:
              anyOf:
              - type: integer
              - type: string
              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              x-kubernetes-int-or-string: true
            description: 'Limits describes the maximum amount of compute resources
              allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
            type: object
          requests:
            additionalProperties:
              anyOf:
              - type: integer
              - type: string
              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              x-kubernetes-int-or-string: true
            description: 'Requests describes the minimum amount of compute resources
              required. If Requests is omitted for a container, it defaults to Limits
              if that is explicitly specified, otherwise to an implementation-defined
              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
            type: object
        type: object
      terminationPolicy:
        enum:
        - Halt
        - Delete
        - WipeOut
        - DoNotTerminate
        type: string
      unsealer:
        properties:
          credentialSecret:
            properties:
              awsKmsSsm:
                properties:
                  accessKey:
                    type: string
                  secretKey:
                    type: string
                required:
                - accessKey
                - secretKey
                type: object
              azureKeyVault:
                properties:
                  clientCert:
                    type: string
                  clientCertPassword:
                    type: string
                  clientId:
                    type: string
                  clientSecret:
                    type: string
                required:
                - clientCert
                - clientCertPassword
                - clientId
                - clientSecret
                type: object
              googleKmsGcs:
                properties:
                  saJson:
                    type: string
                required:
                - saJson
                type: object
              name:
                type: string
            type: object
          mode:
            properties:
              awsKmsSsm:
                properties:
                  kmsKeyID:
                    type: string
                  region:
                    type: string
                required:
                - kmsKeyID
                - region
                type: object
              azureKeyVault:
                properties:
                  vaultBaseURL:
                    type: string
                required:
                - vaultBaseURL
                type: object
              googleKmsGcs:
                properties:
                  bucket:
                    type: string
                  kmsCryptoKey:
                    type: string
                  kmsKeyRing:
                    type: string
                  kmsLocation:
                    type: string
                  kmsProject:
                    type: string
                required:
                - bucket
                - kmsCryptoKey
                - kmsKeyRing
                - kmsLocation
                - kmsProject
                type: object
              type:
                enum:
                - awsKmsSsm
                - azureKeyVault
                - googleKmsGcs
                - kubernetesSecret
                type: string
            required:
            - type
            type: object
        required:
        - credentialSecret
        - mode
        type: object
      version:
        type: string
    required:
    - backend
    - machine
    - monitoring
    - resources
    - terminationPolicy
    - unsealer
    - version
    type: object
required:
- spec
type: object
