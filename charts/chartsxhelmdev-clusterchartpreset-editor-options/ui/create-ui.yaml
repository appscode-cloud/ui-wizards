---
steps:
- form:
    elements:
    - discriminator:
        configureClickHouse:
          default: false
          type: boolean
        configureDruid:
          default: false
          type: boolean
        configureElasticsearch:
          default: false
          type: boolean
        configureFerretDB:
          default: false
          type: boolean
        configureKafka:
          default: false
          type: boolean
        configureMSSQLServer:
          default: false
          type: boolean
        configureMariaDB:
          default: false
          type: boolean
        configureMemcached:
          default: false
          type: boolean
        configureMongoDB:
          default: false
          type: boolean
        configureMySQL:
          default: false
          type: boolean
        configurePerconaXtraDB:
          default: false
          type: boolean
        configurePgBouncer:
          default: false
          type: boolean
        configurePgpool:
          default: false
          type: boolean
        configurePostgres:
          default: false
          type: boolean
        configureProxySQL:
          default: false
          type: boolean
        configureRabbitMQ:
          default: false
          type: boolean
        configureRedis:
          default: false
          type: boolean
        configureSinglestore:
          default: false
          type: boolean
        configureSolr:
          default: false
          type: boolean
        configureZooKeeper:
          default: false
          type: boolean
      elements:
      - elements:
        - label:
            text: labels.deployment.toggle
          schema:
            "$ref": schema#/properties/spec/properties/kubeDB/properties/deployment/properties/toggle
          type: switch
        - hasDescription: true
          options:
          - description: labels.deployment.shared
            text: Shared
            value: Shared
          - description: labels.deployment.dedicated
            text: Dedicated
            value: Dedicated
          schema:
            "$ref": schema#/properties/spec/properties/kubeDB/properties/deployment/properties/default
          type: radio
        label:
          text: labels.deployment.name
        show_label: true
        type: single-step-form
      - elements:
        - label:
            text: labels.clusterTier.toggle
          schema:
            "$ref": schema#/properties/spec/properties/kubeDB/properties/clusterTier/properties/toggle
          type: switch
        - options:
          - text: General Purpose
            value: GeneralPurpose
          - text: Memory Optimized
            value: MemoryOptimized
          - text: CPU Optimized
            value: CPUOptimized
          schema:
            "$ref": schema#/properties/spec/properties/kubeDB/properties/clusterTier/properties/default
          type: radio
        - fetch: getNodeTopology
          label:
            text: labels.clusterTier.availableNodeTopology
          schema:
            "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
          type: multiselect
        - disableUnselect: true
          fetch: getOptions|clusterTier/placement
          label:
            text: labels.placement
          schema:
            "$ref": schema#/properties/spec/properties/kubeDB/properties/clusterTier/properties/placement/properties/default
          type: select
        - fetch: getNodeTopology
          label:
            text: labels.clusterTier.availableNodeTopology
          schema:
            "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
          type: multiselect
        - disableUnselect: true
          fetch: getOptions|clusterTier/nodeTopology
          label:
            text: labels.clusterTier.default
          schema:
            "$ref": schema#/properties/spec/properties/kubeDB/properties/clusterTier/properties/nodeTopology/properties/default
          type: select
        label:
          text: labels.clusterTier.name
        show_label: true
        type: single-step-form
      - label:
          text: Configure Databases
        type: label-element
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - label:
          text: labels.databases.ClickHouse.configure
        schema:
          "$ref": discriminator#/configureClickHouse
        type: switch
      - fetch: FetchDbVersions|clickhouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.versions
        onChange: clearDefaultVersion|ClickHouse
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/available
        type: multiselect
      - fetch: availableVersions|ClickHouse
        if: isConfigureDb|configureClickHouse
        label:
          text: labels.databases.default
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/databases/properties/ClickHouse/properties/versions/properties/default
        type: select
      - fetch: getOptions|storageClasses
        label:
          text: labels.storage.select
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/storageClasses/properties/default
        type: select
      - label:
          text: labels.tls.select
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/tls/properties/default
        type: switch
      - fetch: getOptions|clusterIssuers
        label:
          text: labels.clusterIssuers.select
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/clusterIssuers/properties/default
        type: select
      - label:
          text: labels.webUI.select
        schema:
          "$ref": schema#/properties/spec/properties/kubeDB/properties/webUI/properties/default
        type: switch
      type: single-step-form
    - elements: []
      type: single-step-form
    - elements: []
      type: single-step-form
    type: single-step-form
  id: options
  title: Basic
type: multi-step-form
