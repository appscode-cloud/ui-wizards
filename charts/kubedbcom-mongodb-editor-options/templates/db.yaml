{{- $res := .Values.spec.resources -}}
{{- $machines := .Files.Get "data/machines.yaml" | fromYaml -}}
{{- if and .Values.spec.machine (hasKey $machines .Values.spec.machine) }}
  {{- $res = get (get $machines .Values.spec.machine) "resources" }}
{{- end }}
{{ $poolName := printf "%s-%s-%s" .Values.form.capi.clusterName .Release.Namespace (include "kubedbcom-mongodb-editor-options.fullname" .) }}

apiVersion: kubedb.com/v1alpha2
kind: MongoDB
metadata:
  name: {{ include "kubedbcom-mongodb-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-mongodb-editor-options.labels" . | nindent 4 }}
{{- if .Values.spec.annotations }}
  annotations:
    {{- include "kubedbcom-mongodb-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.version | quote }}
{{- if or (eq .Values.spec.mode "Standalone") (eq .Values.spec.mode "Replicaset") }}
  replicas: {{ (eq .Values.spec.mode "Replicaset") | ternary .Values.spec.replicaSet.replicas 1 }}
  storageType: Durable
  storage:
    storageClassName: {{ .Values.spec.storageClass.name }}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.spec.persistence.size }}
{{- end }}
{{- if eq .Values.spec.mode "Replicaset" }}
  replicaSet:
    name: {{ .Values.spec.replicaSet.name }}
{{- end }}
{{- if eq .Values.spec.mode "Sharded" }}
  shardTopology:
    configServer:
      replicas: {{ .Values.spec.shardTopology.configServer.replicas }}
      podTemplate:
        spec:
          resources:
            {{- toYaml $res | nindent 12 }}
          {{- if and .Values.form.capi.provider .Values.form.capi.dedicated }}
          tolerations:
            - key: dedicated
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capa") .Values.form.capi.dedicated }}
          nodeSelector:
            eks.amazonaws.com/nodegroup: {{ $poolName }}
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capg") .Values.form.capi.dedicated }}
          nodeSelector:
            gke.cloud.google.com/nodepool: {{ $poolName }}
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capz") .Values.form.capi.dedicated }}
          nodeSelector:
            kubernetes.azure.com/agentpool: {{ $poolName }}
          {{- end }}
      storage:
        resources:
          requests:
            storage: {{ .Values.spec.shardTopology.configServer.persistence.size }}
        storageClassName: {{ .Values.spec.storageClass.name }}
    mongos:
      replicas: {{ .Values.spec.shardTopology.mongos.replicas }}
      podTemplate:
        spec:
          resources:
            {{- toYaml $res | nindent 12 }}
          {{- if and .Values.form.capi.provider .Values.form.capi.dedicated }}
          tolerations:
            - key: dedicated
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capa") .Values.form.capi.dedicated }}
          nodeSelector:
            eks.amazonaws.com/nodegroup: {{ $poolName }}
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capg") .Values.form.capi.dedicated }}
          nodeSelector:
            gke.cloud.google.com/nodepool: {{ $poolName }}
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capz") .Values.form.capi.dedicated }}
          nodeSelector:
            kubernetes.azure.com/agentpool: {{ $poolName }}
          {{- end }}
    shard:
      shards: {{ .Values.spec.shardTopology.shard.shards }}
      replicas: {{ .Values.spec.shardTopology.shard.replicas }}
      podTemplate:
        spec:
          resources:
            {{- toYaml $res | nindent 12 }}
          {{- if and .Values.form.capi.provider .Values.form.capi.dedicated }}
          tolerations:
            - key: dedicated
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capa") .Values.form.capi.dedicated }}
          nodeSelector:
            eks.amazonaws.com/nodegroup: {{ $poolName }}
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capg") .Values.form.capi.dedicated }}
          nodeSelector:
            gke.cloud.google.com/nodepool: {{ $poolName }}
          {{- end }}
          {{- if and (eq .Values.form.capi.provider "capz") .Values.form.capi.dedicated }}
          nodeSelector:
            kubernetes.azure.com/agentpool: {{ $poolName }}
          {{- end }}
      storage:
        resources:
          requests:
            storage: {{ .Values.spec.shardTopology.shard.persistence.size }}
        storageClassName: {{ .Values.spec.storageClass.name }}
{{- else }}
  podTemplate:
    spec:
      resources:
        {{- toYaml $res | nindent 8 }}
      {{- if and .Values.form.capi.provider .Values.form.capi.dedicated }}
      tolerations:
        - key: dedicated
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      {{- end }}
      {{- if and (eq .Values.form.capi.provider "capa") .Values.form.capi.dedicated }}
      nodeSelector:
        eks.amazonaws.com/nodegroup: {{ $poolName }}
      {{- end }}
      {{- if and (eq .Values.form.capi.provider "capg") .Values.form.capi.dedicated }}
      nodeSelector:
        gke.cloud.google.com/nodepool: {{ $poolName }}
      {{- end }}
      {{- if and (eq .Values.form.capi.provider "capz") .Values.form.capi.dedicated }}
      nodeSelector:
        kubernetes.azure.com/agentpool: {{ $poolName }}
      {{- end }}
{{- end }}
  terminationPolicy: {{ .Values.spec.terminationPolicy }}
  clusterAuthMode: {{ .Values.spec.clusterAuthMode }}
  sslMode: {{ .Values.spec.sslMode }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if (and .Values.spec.monitoring .Values.spec.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.monitoring.exporter }}
      exporter:
        args:
          - --compatible-mode
        resources:
          {{- toYaml .resources | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
