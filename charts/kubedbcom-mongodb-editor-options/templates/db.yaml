{{- $res := .Values.spec.resources -}}
{{- $machines := .Files.Get "data/machines.yaml" | fromYaml -}}
{{- if and .Values.spec.machine (hasKey $machines .Values.spec.machine) }}
  {{- $res = get (get $machines .Values.spec.machine) "resources" }}
{{- end }}

apiVersion: kubedb.com/v1alpha2
kind: MongoDB
metadata:
  name: {{ include "kubedbcom-mongodb-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-mongodb-editor-options.labels" . | nindent 4 }}
{{- if .Values.spec.annotations }}
  annotations:
    {{- include "kubedbcom-mongodb-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.version | quote }}
{{- if or (eq .Values.spec.mode "Standalone") (eq .Values.spec.mode "Replicaset") }}
  replicas: {{ (eq .Values.spec.mode "Replicaset") | ternary .Values.spec.replicaSet.replicas 1 }}
  storageType: Durable
  storage:
    storageClassName: {{ .Values.spec.storageClass.name }}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ .Values.spec.persistence.size }}
{{- end }}
{{- if eq .Values.spec.mode "Replicaset" }}
  replicaSet:
    name: {{ .Values.spec.replicaSet.name }}
{{- end }}
{{- if eq .Values.spec.mode "Sharded" }}
  shardTopology:
    configServer:
      replicas: {{ .Values.spec.shardTopology.configServer.replicas }}
      podTemplate:
        spec:
          resources:
            {{- toYaml $res | nindent 12 }}
      storage:
        resources:
          requests:
            storage: {{ .Values.spec.shardTopology.configServer.persistence.size }}
        storageClassName: {{ .Values.spec.storageClass.name }}
    mongos:
      replicas: {{ .Values.spec.shardTopology.mongos.replicas }}
      podTemplate:
        spec:
          resources:
            {{- toYaml $res | nindent 12 }}
    shard:
      shards: {{ .Values.spec.shardTopology.shard.shards }}
      replicas: {{ .Values.spec.shardTopology.shard.replicas }}
      podTemplate:
        spec:
          resources:
            {{- toYaml $res | nindent 12 }}
      storage:
        resources:
          requests:
            storage: {{ .Values.spec.shardTopology.shard.persistence.size }}
        storageClassName: {{ .Values.spec.storageClass.name }}
{{- else }}
  podTemplate:
    spec:
      resources:
        {{- toYaml $res | nindent 8 }}
{{- end }}
  terminationPolicy: {{ .Values.spec.terminationPolicy }}
  clusterAuthMode: {{ .Values.spec.clusterAuthMode }}
  sslMode: {{ .Values.spec.sslMode }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{ if .Values.spec.monitoring }}
  monitor:
    agent: {{ .Values.spec.monitoring.agent }}
    prometheus:
      exporter:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.monitoring.serviceMonitor.labels | nindent 10 }}
{{ end }}
