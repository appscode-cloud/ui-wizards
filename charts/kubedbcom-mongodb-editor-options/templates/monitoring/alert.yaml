{{ $app := (include "kubedbcom-mongodb-editor-options.fullname" .) }}

{{ if (include "kubedbcom-mongodb-editor-options.alertsEnabled" .Values.form.alert.enabled) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $app }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- include "kubedbcom-mongodb-editor-options.selectorLabels" . | nindent 4 }}
{{- if .Values.form.alert.labels }}
    {{- toYaml .Values.form.alert.labels | nindent 4 }}
{{- end }}
{{- if .Values.form.alert.annotations }}
  annotations:
    {{- toYaml .Values.form.alert.annotations | nindent 4 }}
{{- end }}
spec:
  groups:
  {{ with .Values.form.alert.groups.database -}}
  {{ if (include "kubedbcom-mongodb-editor-options.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mongodb.database.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbVirtualMemoryUsage.enabled .rules.mongodbVirtualMemoryUsage.severity)) -}}
    - alert: MongodbVirtualMemoryUsage
      expr: sum(mongodb_ss_mem_virtual{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) BY (job) > {{ .rules.mongodbVirtualMemoryUsage.val }}
      for: {{ .rules.mongodbVirtualMemoryUsage.duration }}
      labels:
        severity: {{ .rules.mongodbVirtualMemoryUsage.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB virtual memory usage (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "High memory usage\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbReplicationLag.enabled .rules.mongodbReplicationLag.severity)) -}}
    - alert: MongodbReplicationLag
      expr: mongodb_mongod_replset_member_replication_lag{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} > {{ .rules.mongodbReplicationLag.val }}
      for: {{ .rules.mongodbReplicationLag.duration }}
      labels:
        severity: {{ .rules.mongodbReplicationLag.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB database has replication lag (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Mongodb replication lag is more than {{ .rules.mongodbReplicationLag.val }}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbNumberCursorsOpen.enabled .rules.mongodbNumberCursorsOpen.severity)) -}}
    - alert: MongodbNumberCursorsOpen
      expr: mongodb_ss_metrics_cursor_open{csr_type="total",job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} > {{ .rules.mongodbNumberCursorsOpen.val }}
      for: {{ .rules.mongodbNumberCursorsOpen.duration }}
      labels:
        severity: {{ .rules.mongodbNumberCursorsOpen.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB number cursors open (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Too many cursors opened by MongoDB for clients (> 10k)\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbCursorsTimeouts.enabled .rules.mongodbCursorsTimeouts.severity)) -}}
    - alert: MongodbCursorsTimeouts
      expr: increase(mongodb_ss_metrics_cursor_timedOut{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}[1m]) > {{ .rules.mongodbCursorsTimeouts.val }}
      for: {{ .rules.mongodbCursorsTimeouts.duration }}
      labels:
        severity: {{ .rules.mongodbCursorsTimeouts.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB cursors timeouts (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Too many cursors are timing out\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbTooManyConnections.enabled .rules.mongodbTooManyConnections.severity)) -}}
    - alert: MongodbTooManyConnections
      expr: avg by(instance) (rate(mongodb_ss_connections{conn_type="current",job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}[1m])) / avg by(instance) (sum (mongodb_ss_connections) by (instance)) * 100 > {{ .rules.mongodbTooManyConnections.val }}
      for: {{ .rules.mongodbTooManyConnections.duration }}
      labels:
        severity: {{ .rules.mongodbTooManyConnections.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB too many connections (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Too many connections (> 80%)\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongoDBPhaseCritical.enabled .rules.mongoDBPhaseCritical.severity)) -}}
    - alert: MongoDBPhaseCritical
      expr: kubedb_com_mongodb_status_phase{app="{{ $app }}", namespace="{{ $.Release.Namespace }}",phase="Critical"} >= 1
      for: {{ .rules.mongoDBPhaseCritical.duration }}
      labels:
        severity: {{ .rules.mongoDBPhaseCritical.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB database is in Critical state (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Database in Critical state, one or more database nodes are not working properly.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongoDBDown.enabled .rules.mongoDBDown.severity)) -}}
    - alert: MongoDBDown
      expr: kubedb_com_mongodb_status_phase{app="{{ $app }}", namespace="{{ $.Release.Namespace }}",phase="NotReady"} >= 1
      for: {{ .rules.mongoDBDown.duration }}
      labels:
        severity: {{ .rules.mongoDBDown.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB database is in NotReady state (instance {{`{{`}} $labels.instance {{`}}`}})
        description: "Database in NotReady state, database read/write is failing.\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbHighLatency.enabled .rules.mongodbHighLatency.severity)) -}}
    - alert: MongoDBHighLatency
      expr: |
        rate(mongodb_ss_opLatencies_latency{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}[5m]) /
        rate(mongodb_ss_opLatencies_ops{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}[5m]) > {{ .rules.mongodbHighLatency.val }}
      for: {{ .rules.mongodbHighLatency.duration }}
      labels:
        severity: {{ .rules.mongodbHighLatency.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: High latency in mongodb instances {{`{{`}} $labels.instance {{`}}`}}
        description: "High latency in instances\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbHighTicketUtilization.enabled .rules.mongodbHighTicketUtilization.severity)) -}}
    - alert: MongoDBHighTicketUtilization
      expr: |
        (mongodb_ss_wt_concurrentTransactions_out{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} /
        mongodb_ss_wt_concurrentTransactions_totalTickets{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) * 100
        > {{ .rules.mongodbHighTicketUtilization.val }}
      for: {{ .rules.mongodbHighTicketUtilization.duration }}
      labels:
        severity: {{ .rules.mongodbHighTicketUtilization.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Ticket usage over 75% {{`{{`}} $labels.instance {{`}}`}}
        description: "Ticket usage over 75%\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbRecurrentCursorTimeout.enabled .rules.mongodbRecurrentCursorTimeout.severity)) -}}
    - alert: MongoDBRecurrentCursorTimeout
      expr: rate(mongodb_ss_metrics_cursor_timedOut{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}[5m]) > {{ .rules.mongodbRecurrentCursorTimeout.val }}
      for: {{ .rules.mongodbRecurrentCursorTimeout.duration }}
      labels:
        severity: {{ .rules.mongodbRecurrentCursorTimeout.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Recurrent cursors timeout in instance {{`{{`}} $labels.instance {{`}}`}}
        description: "Recurrent cursors timeout\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mongodbRecurrentMemoryPageFaults.enabled .rules.mongodbRecurrentMemoryPageFaults.severity)) -}}
    - alert: MongoDBRecurrentMemoryPageFaults
      expr: rate(mongodb_ss_extra_info_page_faults{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}[5m]) > {{ .rules.mongodbRecurrentMemoryPageFaults.val }}
      for: {{ .rules.mongodbRecurrentMemoryPageFaults.duration }}
      labels:
        severity: {{ .rules.mongodbRecurrentMemoryPageFaults.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Recurrent memory page faults in instance {{`{{`}} $labels.instance {{`}}`}}
        description: "Recurrent memory page faults\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{end -}}
  {{end -}}


  {{ with .Values.form.alert.groups.provisioner -}}
  {{ if (include "kubedbcom-mongodb-editor-options.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mongodb.provisioner.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseNotReady.enabled .rules.appPhaseNotReady.severity)) -}}
    - alert: KubeDBMongoDBPhaseNotReady
      expr: kubedb_com_mongodb_status_phase{phase="NotReady",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.appPhaseNotReady.duration }}
      labels:
        severity: {{ .rules.appPhaseNotReady.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB MongoDB Phase NotReady (mongodb {{`{{`}} $labels.mongodb {{`}}`}})
        description: "KubeDB MongoDB Phase not ready on {{`{{`}} $labels.mongodb {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseCritical.enabled .rules.appPhaseCritical.severity)) -}}
    - alert: KubeDBMongoDBPhaseCritical
      expr: kubedb_com_mongodb_status_phase{phase="Critical",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.appPhaseCritical.duration }}
      labels:
        severity: {{ .rules.appPhaseCritical.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB MongoDB Phase Critical (mongodb {{`{{`}} $labels.mongodb {{`}}`}})
        description: "KubeDB MongoDB Phase Critical {{`{{`}} $labels.mongodb {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.opsManager -}}
  {{ if (include "kubedbcom-mongodb-editor-options.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mongodb.opsManager.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestOnProgress.enabled .rules.opsRequestOnProgress.severity)) -}}
    - alert: KubeDBMongoDBOpsRequestOnProgress
      expr: ops_kubedb_com_mongodbopsrequest_status_phase{phase="Progressing",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestOnProgress.duration }}
      labels:
        severity: {{ .rules.opsRequestOnProgress.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDBOpsRequest on progress (mongodbopsrequest {{`{{`}} $labels.mongodbopsrequest {{`}}`}})
        description: "MaraiDBOpsRequest {{`{{`}} $labels.mongodbopsrequest {{`}}`}} is in progressressing status\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestStatusProgressingToLong.enabled .rules.opsRequestStatusProgressingToLong.severity)) -}}
    - alert: KubeDBMongoDBOpsRequestStatusProgressingToLong
      expr: ops_kubedb_com_mongodbopsrequest_status_phase{phase="Progressing",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestStatusProgressingToLong.duration }}
      labels:
        severity: {{ .rules.opsRequestStatusProgressingToLong.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDBOpsRequest is in progressing status for too long (mongodbopsrequest {{`{{`}} $labels.mongodbopsrequest {{`}}`}})
        description: "MaraiDBOpsRequest {{`{{`}} $labels.mongodbopsrequest {{`}}`}} is in progressing status for too long\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestFailed.enabled .rules.opsRequestFailed.severity)) -}}
    - alert: KubeDBMongoDBOpsRequestFailed
      expr: ops_kubedb_com_mongodbopsrequest_status_phase{phase="Failed",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestFailed.duration }}
      labels:
        severity: {{ .rules.opsRequestFailed.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDBOpsRequest failed (mongodbopsrequest {{`{{`}} $labels.mongodbopsrequest {{`}}`}})
        description: "MaraiDBOpsRequest {{`{{`}} $labels.mongodbopsrequest {{`}}`}} failed \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.stash -}}
  {{ if (include "kubedbcom-mongodb-editor-options.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mongodb.stash.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.backupSessionFailed.enabled .rules.backupSessionFailed.severity)) -}}
    - alert: MongoDBStashBackupSessionFailed
      expr: stash_backup_session_success * on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} == 0
      for: {{ .rules.backupSessionFailed.duration }}
      labels:
        severity: {{ .rules.backupSessionFailed.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB Stash backup session failed (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MongoDB Stash backupsession failed {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.restoreSessionFailed.enabled .rules.restoreSessionFailed.severity)) -}}
    - alert: MongoDBStashRestoreSessionFailed
      expr: stash_restore_session_success * on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_restoresession_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} == 0
      for: {{ .rules.restoreSessionFailed.duration }}
      labels:
        severity: {{ .rules.restoreSessionFailed.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB Stash restore session failed (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MongoDB Stash restore session failed {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.noBackupSessionForTooLong.enabled .rules.noBackupSessionForTooLong.severity)) -}}
    - alert: MongoDBStashNoBackupSessionForTooLong
      expr: time() - stash_backup_last_success_time_seconds + on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} - 1 > {{ .rules.noBackupSessionForTooLong.val }}
      for: {{ .rules.noBackupSessionForTooLong.duration }}
      labels:
        severity: {{ .rules.noBackupSessionForTooLong.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB Stash no backup for last {{ .rules.noBackupSessionForTooLong.val }} second (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MongoDB Stash no backup for too long {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.repositoryCorrupted.enabled .rules.repositoryCorrupted.severity)) -}}
    - alert: MongoDBStashRepositoryCorrupted
      expr: stash_repository_integrity * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"}
      for: {{ .rules.repositoryCorrupted.duration }}
      labels:
        severity: {{ .rules.repositoryCorrupted.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB Stash repository corrupted (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MongoDB Stash repository corrupted {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.repositoryStorageRunningLow.enabled .rules.repositoryStorageRunningLow.severity)) -}}
    - alert: MongoDBStashRepositoryStorageRunningLow
      expr: stash_repository_size_bytes * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} > {{ .rules.repositoryStorageRunningLow.val }}
      for: {{ .rules.repositoryStorageRunningLow.duration }}
      labels:
        severity: {{ .rules.repositoryStorageRunningLow.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MongoDB Stash Repository storage more than {{ .rules.repositoryStorageRunningLow.val }} byte. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MongoDB Stash Repository storage running low {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.backupSessionPeriodTooLong.enabled .rules.backupSessionPeriodTooLong.severity)) -}}
    - alert: MongoDBStashBackupSessionPeriodTooLong
      expr: stash_backup_session_duration_seconds * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} > {{ .rules.backupSessionPeriodTooLong.val }}
      for: {{ .rules.backupSessionPeriodTooLong.duration }}
      labels:
        severity: {{ .rules.backupSessionPeriodTooLong.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary:  MongoDB Stash backup session took more than {{ .rules.backupSessionPeriodTooLong.val }} second to complete. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MongoDB Stash backup session taking to long to complete {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.restoreSessionPeriodTooLong.enabled .rules.restoreSessionPeriodTooLong.severity)) -}}
    - alert: MongoDBStashRestoreSessionPeriodTooLong
      expr: stash_restore_session_duration_seconds * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_restoresession_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} > {{ .rules.restoreSessionPeriodTooLong.val }}
      for: {{ .rules.restoreSessionPeriodTooLong.duration }}
      labels:
        severity: {{ .rules.restoreSessionPeriodTooLong.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary:  MongoDB Stash restore session took more than {{ .rules.restoreSessionPeriodTooLong.val }} second to complete. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MongoDB Stash restore session taking to long to complete {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.schemaManager -}}
  {{ if (include "kubedbcom-mongodb-editor-options.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mongodb.schemaManager.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaPendingForTooLong.enabled .rules.schemaPendingForTooLong.severity)) -}}
    - alert: KubeDBMongoDBSchemaPendingForTooLong
      expr: schema_kubedb_com_mongodbdatabase_status_phase{phase="Pending",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaPendingForTooLong.duration }}
      labels:
        severity: {{ .rules.schemaPendingForTooLong.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema pending for too long for (mongodbdatabase {{`{{`}} $labels.mongodbdatabase {{`}}`}})
        description: "KubeDB schema pending for too long.\n {{`{{`}} $labels.mongodbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaInProgressForTooLong.enabled .rules.schemaInProgressForTooLong.severity)) -}}
    - alert: KubeDBMongoDBSchemaInProgressForTooLong
      expr: schema_kubedb_com_mongodbdatabase_status_phase{phase="InProgress",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaInProgressForTooLong.duration }}
      labels:
        severity: {{ .rules.schemaInProgressForTooLong.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema is in progress for too long for (mongodbdatabase {{`{{`}} $labels.mongodbdatabase {{`}}`}})
        description: "KubeDB schema is in progress for too long.\n {{`{{`}} $labels.mongodbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaTerminatingForTooLong.enabled .rules.schemaTerminatingForTooLong.severity)) -}}
    - alert: KubeDBMongoDBSchemaTerminatingForTooLong
      expr: schema_kubedb_com_mongodbdatabase_status_phase{phase="Terminating",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaTerminatingForTooLong.duration }}
      labels:
        severity: {{ .rules.schemaTerminatingForTooLong.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema terminating for too long for (mongodbdatabase {{`{{`}} $labels.mongodbdatabase {{`}}`}})
        description: "KubeDB schema terminating for too long.\n {{`{{`}} $labels.mongodbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaFailed.enabled .rules.schemaFailed.severity)) -}}
    - alert: KubeDBMongoDBSchemaFailed
      expr: schema_kubedb_com_mongodbdatabase_status_phase{phase="Failed",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaFailed.duration }}
      labels:
        severity: {{ .rules.schemaFailed.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema failed for (mongodbdatabase {{`{{`}} $labels.mongodbdatabase {{`}}`}})
        description: "KubeDB schema failed.\n {{`{{`}} $labels.mongodbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-mongodb-editor-options.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaExpired.enabled .rules.schemaExpired.severity)) -}}
    - alert: KubeDBMongoDBSchemaExpired
      expr: schema_kubedb_com_mongodbdatabase_status_phase{phase="Expired",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaExpired.duration }}
      labels:
        severity: {{ .rules.schemaExpired.severity }}
        {{- include "kubedbcom-mongodb-editor-options.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema expired for (mongodbdatabase {{`{{`}} $labels.mongodbdatabase {{`}}`}})
        description: "KubeDB schema expired.\n {{`{{`}} $labels.mongodbdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}

{{ end }}
