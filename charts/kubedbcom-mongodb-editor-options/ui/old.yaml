type: multi-step-form
step:
  - type: single-step-form
    elements:
      - type: input
        label: Database Name
        validation:
          type: required
        schema: schema/properties/metadata/properties/name
      - type: select
        label: Namespace
        loader: getNamespaces
        validation:
          type: required
        hasGroup: true
        schema: schema/properties/metadata/properties/namespace
      - type: select
        label: Database Version
        # loader: getDatabaseVersions
        validation:
          type: required
        schema: schema/properties/spec/properties/version
      - type: radio
        label: Database Mode
        options:
          - description: Single instance for development and testing
            text: Standalone
            value: Standalone
          - description: Multiple replicas for high availability
            text: Replicaset
            value: Replicaset
          - description: Horizontal scaling with multiple shards
            text: Sharded
            value: Sharded
        validation:
          type: required
        schema: schema/properties/spec/properties/mode
        # watcher:
        #   func: onModeChange
        #   paths:
        #     - schema/properties/spec/properties/mode
# Replicaset Configuration
      - type: block-layout
        label: Replicaset Configuration
        if:
          type: function
          name: isEqualToModelPathValue|Replicaset|/spec/mode
        elements:
          - type: input
            label: Replicaset Name
            schema: schema/properties/spec/properties/replicaSet/properties/name
          - type: input
            label: Number of Replicas
            validation:
              type: required
            schema: schema/properties/spec/properties/replicaSet/properties/replicas
          - type: switch
            label: Enable Horizons
            if:
              type: function
              name: isTlsEnabled
            schema: schema/properties/spec/properties/replicaSet/properties/enableHorizons
            # watcher:
            #   func: onHorizonsChange
            #   paths:
            #     - schema/properties/spec/properties/replicaSet/properties/enableHorizons
          - type: label-element
            label: Horizons count should be equal to Replica Number
            if:
              type: function
              name: isHorizonsEnabled
          - type: array-object-form
            label: Horizons
            if:
              type: function
              name: isHorizonsEnabled
            schema: schema/properties/spec/properties/replicaSet/properties/horizons
            elements:
              - type: input
                label: Horizon DNS
                schema: schema/properties/spec/properties/replicaSet/properties/horizons/items
# Sharded Configuration
      - type: block-layout
        label: Sharded Configuration
        if:
          type: function
          name: isEqualToModelPathValue|Sharded|/spec/mode
        elements:
          - type: block-layout
            label: Shard Configuration
            elements:
              - type: input
                label: Number of Shards
                validation:
                  type: required
                schema: schema/properties/spec/properties/shardTopology/properties/shard/properties/shards
              - type: input
                label: Replicas per Shard
                validation:
                  type: required
                schema: schema/properties/spec/properties/shardTopology/properties/shard/properties/replicas
              - type: input
                label: Storage Size
                validation:
                  type: required
                schema: schema/properties/spec/properties/shardTopology/properties/shard/properties/persistence/properties/size
              - type: machine-compare
                label: Resources
                loader: getMachines
                init:
                  type: func
                  value: setMachine|shard
                # watcher:
                #   func: onMachineChange|shard|/spec/shardTopology/shard/podResources/resources
                #   paths:
                #     - schema/properties/spec/properties/shardTopology/properties/shard/properties/podResources/properties/resources
                schema: schema/properties/spec/properties/shardTopology/properties/shard/properties/podResources/properties/resources
          - type: block-layout
            label: Config Server Configuration
            elements:
              - type: input
                label: Config Server Replicas
                validation:
                  type: required
                schema: schema/properties/spec/properties/shardTopology/properties/configServer/properties/replicas
              - type: input
                label: Storage Size
                validation:
                  type: required
                schema: schema/properties/spec/properties/shardTopology/properties/configServer/properties/persistence/properties/size
              - type: machine-compare
                label: Resources
                loader: getMachines
                init:
                  type: func
                  value: setMachine|configServer
                # watcher:
                #   func: onMachineChange|configServer|/spec/shardTopology/configServer/podResources/resources
                #   paths:
                #     - schema/properties/spec/properties/shardTopology/properties/configServer/properties/podResources/properties/resources
                schema: schema/properties/spec/properties/shardTopology/properties/configServer/properties/podResources/properties/resources
          - type: block-layout
            label: Mongos Configuration
            elements:
              - type: input
                label: Mongos Replicas
                validation:
                  type: required
                schema: schema/properties/spec/properties/shardTopology/properties/mongos/properties/replicas
              - type: machine-compare
                label: Resources
                loader: getMachines
                init:
                  type: func
                  value: setMachine|mongos
                # watcher:
                #   func: onMachineChange|mongos|/spec/shardTopology/mongos/podResources/resources
                #   paths:
                #     - schema/properties/spec/properties/shardTopology/properties/mongos/properties/podResources/properties/resources
                schema: schema/properties/spec/properties/shardTopology/properties/mongos/properties/podResources/properties/resources
# Machine Profile (for Standalone and Replicaset)
      - type: block-layout
        label: Machine Profile
        if:
          type: function
          name: notEqualToDatabaseMode|Sharded
        elements:
          - type: machine-compare
            label: Resources
            loader: getMachines
            init:
              type: func
              value: setMachine|standalone
            # watcher:
            #   func: onMachineChange|standalone|/spec/podResources/resources
            #   paths:
            #     - schema/properties/spec/properties/podResources/properties/resources
            schema: schema/properties/spec/properties/podResources/properties/resources
# Storage Configuration
      - type: select
        label: Storage Class
        loader: getStorageClasses
        validation:
          type: required
        schema: schema/properties/spec/properties/storageClass/properties/name
      - type: input
        label: Storage Size
        if:
          type: function
          name: showStorageSizeField
        validation:
          type: required
        schema: schema/properties/spec/properties/persistence/properties/size
# Advanced Configuration
      - type: block-layout
        label: Advanced Configuration
        elements:
          - type: object-item
            label: Labels
            schema: schema/properties/spec/properties/labels
          - type: object-item
            label: Annotations
            schema: schema/properties/spec/properties/annotations
          - type: select
            label: Deletion Policy
            options:
              - description: Delete database and all data
                text: Delete
                value: Delete
              - description: Halt database but keep data
                text: Halt
                value: Halt
              - description: Delete database and wipe all data
                text: WipeOut
                value: WipeOut
              - description: Prevent deletion
                text: DoNotTerminate
                value: DoNotTerminate
            validation:
              type: required
            schema: schema/properties/spec/properties/deletionPolicy
          - type: switch
            label: Enable Authentication
            schema: schema/properties/spec/properties/authSecret/properties/enabled
            # watcher:
            #   func: onAuthChange
            #   paths:
            #     - schema/properties/spec/properties/authSecret/properties/enabled
          - type: select
            label: Auth Secret
            if:
              type: function
              name: showAuthSecretDropdown
            loader: getSecrets
            schema: schema/properties/spec/properties/authSecret/properties/name
          - type: input
            label: Auth Password
            if:
              type: function
              name: showAuthPasswordField
            schema: schema/properties/spec/properties/authSecret/properties/password
          - type: switch
            label: Enable Configuration
            schema: schema/properties/spec/properties/configSecret/properties/enabled
            # watcher:
            #   func: onConfigChange
            #   paths:
            #     - schema/properties/spec/properties/configSecret/properties/enabled
          - type: editor
            label: Configuration
            hasCopy: true
            if:
              type: function
              name: showConfigurationEditor
            schema: schema/properties/spec/properties/configuration
# Arbiter Configuration (only for Replicaset and Sharded)
          - type: switch
            label: Enable Arbiter
            if:
              type: function
              name: notEqualToDatabaseMode|Standalone
            schema: schema/properties/spec/properties/arbiter/properties/enabled
            # watcher:
            #   func: onArbiterChange
            #   paths:
            #     - schema/properties/spec/properties/arbiter/properties/enabled
          - type: block-layout
            label: Arbiter Configuration
            if:
              type: function
              name: showArbiter
            elements:
              - type: machine-compare
                label: Resources
                loader: getMachines
                init:
                  type: func
                  value: setMachine|arbiter
                # watcher:
                #   func: onMachineChange|arbiter|/spec/arbiter/podResources/resources
                #   paths:
                #     - schema/properties/spec/properties/arbiter/properties/podResources/properties/resources
                schema: schema/properties/spec/properties/arbiter/properties/podResources/properties/resources
# Hidden Configuration (only for Replicaset and Sharded)
          - type: switch
            label: Enable Hidden Nodes
            if:
              type: function
              name: notEqualToDatabaseMode|Standalone
            schema: schema/properties/spec/properties/hidden/properties/enabled
            # watcher:
            #   func: onHiddenChange
            #   paths:
            #     - schema/properties/spec/properties/hidden/properties/enabled
          - type: block-layout
            label: Hidden Node Configuration
            if:
              type: function
              name: showHidden
            elements:
              - type: input
                label: Hidden Replicas
                validation:
                  type: required
                schema: schema/properties/spec/properties/hidden/properties/replicas
              - type: input
                label: Storage Size
                validation:
                  type: required
                schema: schema/properties/spec/properties/hidden/properties/persistence/properties/size
              - type: machine-compare
                label: Resources
                loader: getMachines
                init:
                  type: func
                  value: setMachine|hidden
                # watcher:
                #   func: onMachineChange|hidden|/spec/hidden/podResources/resources
                #   paths:
                #     - schema/properties/spec/properties/hidden/properties/podResources/properties/resources
                schema: schema/properties/spec/properties/hidden/properties/podResources/properties/resources
# Point in Time Recovery
          - type: switch
            label: Enable Point-in-Time Recovery
            schema: schema/properties/spec/properties/init/properties/archiver/properties/enabled
            # watcher:
            #   func: onRecoveryChange
            #   paths:
            #     - schema/properties/spec/properties/init/properties/archiver/properties/enabled
          - type: block-layout
            label: Recovery Configuration
            if:
              type: function
              name: showRecovery
            elements:
              - type: input
                label: Reference Namespace
                validation:
                  type: required
                schema: schema/properties/spec/properties/init/properties/archiver/properties/ref/properties/namespace
              - type: input
                label: Reference Name
                validation:
                  type: required
                schema: schema/properties/spec/properties/init/properties/archiver/properties/ref/properties/name
              - type: input
                label: Recovery Timestamp
                schema: schema/properties/spec/properties/init/properties/archiver/properties/recoveryTimestamp
# Deployment Configuration
          - type: radio
            label: Deployment Mode
            options:
              - description: Shared deployment
                text: Shared
                value: Shared
              - description: Dedicated deployment
                text: Dedicated
                value: Dedicated
            schema: schema/properties/spec/properties/admin/properties/deployment/properties/default
          - type: radio
            label: Cluster Tier
            options:
              - text: General Purpose
                value: GeneralPurpose
              - text: Memory Optimized
                value: MemoryOptimized
              - text: CPU Optimized
                value: CPUOptimized
            schema: schema/properties/spec/properties/admin/properties/clusterTier/properties/default
          - type: select
            label: Placement
            loader: getPlacementOptions
            schema: schema/properties/spec/properties/admin/properties/clusterTier/properties/placement/properties/default
          - type: select
            label: Node Topology
            loader: getNodeTopologyOptions
            schema: schema/properties/spec/properties/admin/properties/clusterTier/properties/nodeTopology/properties/default
# Additional Options
      - type: block-layout
        label: Additional Options
        elements:
# Monitoring
          - type: switch
            label: Enable Monitoring
            schema: schema/properties/spec/properties/monitoring/properties/enabled
            # watcher:
            #   func: onMonitoringChange
            #   paths:
            #     - schema/properties/spec/properties/monitoring/properties/enabled
          - type: select
            label: Alert Level
            if:
              type: function
              name: showAlerts
            options:
              - text: None
                value: none
              - text: Critical
                value: critical
              - text: Warning
                value: warning
              - text: Info
                value: info
            schema: schema/properties/form/properties/alert/properties/enabled
# Backup
          - type: switch
            label: Enable Backup
            schema: schema/properties/spec/properties/backup/properties/enabled
            # watcher:
            #   func: onBackupChange
            #   paths:
            #     - schema/properties/spec/properties/backup/properties/enabled
          - type: switch
            label: Enable Archiver
            if:
              type: function
              name: showArchiver
            schema: schema/properties/spec/properties/admin/properties/archiver/properties/enable/properties/default
            # watcher:
            #   func: onArchiverChange
            #   paths:
            #     - schema/properties/spec/properties/admin/properties/archiver/properties/enable/properties/default
# TLS
          - type: switch
            label: Enable TLS
            schema: schema/properties/spec/properties/admin/properties/tls/properties/default
            # watcher:
            #   func: onTLSChange
            #   paths:
            #     - schema/properties/spec/properties/admin/properties/tls/properties/default
          - type: select
            label: Cluster Issuer
            if:
              type: function
              name: showIssuer
            loader: getClusterIssuers
            validation:
              type: required
            schema: schema/properties/spec/properties/admin/properties/clusterIssuers/properties/default
# Gateway
          - type: switch
            label: Expose via Gateway
            schema: schema/properties/spec/properties/admin/properties/expose/properties/default
            watcher:
              func: onExposeChange
              paths:
                - schema/properties/spec/properties/admin/properties/expose/properties/default