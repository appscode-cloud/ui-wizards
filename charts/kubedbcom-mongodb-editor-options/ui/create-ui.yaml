steps:
  - form:
      elements:
        - label:
            text: labels.basic_info
            hasLine: true
          type: label-element
        - label:
            text: labels.database.name
          type: input
          schema:
            $ref: 'schema#/properties/metadata/properties/release/properties/name'
        - label:
            text: labels.namespace
          fetch: getResources|core|v1|namespaces
          type: select
          schema:
            $ref: 'schema#/properties/metadata/properties/release/properties/namespace'
        - label:
            text: labels.database.version
          fetch: getMongoDbVersions|catalog.kubedb.com|v1alpha1|mongodbversions
          type: select
          schema:
            $ref: 'schema#/properties/spec/properties/version'
        - isArray: true
          schema:
            $ref: 'schema#/properties/spec/properties/labels'
          keys:
            label:
              text: labels.labels.key
          label:
            text: labels.labels.label
          type: key-value-input-form
          values:
            label:
              text: labels.labels.value
            type: input
            schema:
              $ref: 'schema#/properties/spec/properties/labels/additionalProperties'
        - isArray: true
          schema:
            $ref: 'schema#/properties/spec/properties/annotations'
          keys:
            label:
              text: labels.annotations.key
          label:
            text: labels.annotations.label
          type: key-value-input-form
          values:
            label:
              text: labels.annotations.value
            type: input
            schema:
              $ref: 'schema#/properties/spec/properties/annotations/additionalProperties'
        - label:
            text: labels.database.mode
          schema:
            $ref: 'schema#/properties/spec/properties/mode'
          type: radio
          hasDescription: true
          options:
            - value: Standalone
              text: options.database.mode.Standalone.label
              description: options.database.mode.Standalone.description
            - text: options.database.mode.Replicaset.label
              value: Replicaset
              description: options.database.mode.Replicaset.description
            - text: options.database.mode.Sharded.label
              value: Sharded
              description: options.database.mode.Sharded.description
        - if: isEqualToModelPathValue|Replicaset|/spec/mode
          elements:
            - label:
                text: labels.replicaset.name
              type: input
              schema:
                $ref: 'schema#/properties/spec/properties/replicaSet/properties/name'
            - label:
                text: labels.replicaset.number
              type: input
              schema:
                $ref: 'schema#/properties/spec/properties/replicas'
        - if: showStorageSizeField
          label:
            text: labels.storage.size
          type: input
          schema:
            $ref: 'schema#/properties/spec/properties/persistence/properties/size'
        - label:
            text: labels.storage.class
          fetch: getResources|storage.k8s.io|v1|storageclasses
          type: select
          schema:
            $ref: 'schema#/properties/spec/properties/storageClass/properties/name'
        - if: isEqualToModelPathValue|Sharded|/spec/mode
          elements:
            - label:
                text: labels.shardNodes
                hasLine: true
              type: label-element
            - label:
                text: labels.shards
              type: input
              schema:
                $ref: 'schema#/properties/spec/properties/shardTopology/properties/shard/properties/shards'
            - label:
                text: labels.storage.size
              type: input
              schema:
                $ref: 'schema#/properties/spec/properties/shardTopology/properties/shard/properties/persistence/properties/size'
            - label:
                text: labels.configServer
                hasLine: true
              type: label-element
            - label:
                text: labels.storage.size
              type: input
              schema:
                $ref: 'schema#/properties/spec/properties/shardTopology/properties/configServer/properties/persistence/properties/size'
            - label:
                text: labels.mongos
                hasLine: true
              type: label-element
            - label:
                text: labels.replicaset.number
              type: input
              schema:
                $ref: 'schema#/properties/spec/properties/shardTopology/properties/mongos/properties/replicas'
        - label:
            text: labels.terminationPolicy
          schema:
            $ref: 'schema#/properties/spec/properties/terminationPolicy'
          type: radio
          hasDescription: true
          options:
            - value: Delete
              text: options.terminationPolicy.delete.label
              description: options.terminationPolicy.delete.description
            - value: Halt
              text: options.terminationPolicy.halt.label
              description: options.terminationPolicy.halt.description
            - value: WipeOut
              text: options.terminationPolicy.wipeOut.label
              description: options.terminationPolicy.wipeOut.description
            - value: DoNotTerminate
              text: options.terminationPolicy.doNotTerminate.label
              description: options.terminationPolicy.doNotTerminate.description
        - label:
            text: labels.database.secret
            hasLine: true
          type: label-element
        - schema:
            $ref: 'discriminator#/createAuthSecret'
          type: radio
          options:
            - value: true
              text: options.database.secret.customSecret.label
            - value: false
              text: options.database.secret.existingSecret.label
        - if: showAuthSecretField
          elements:
            - if: hasExistingSecret
              label:
                text: labels.secret
              fetch: getSecrets
              type: select
              schema:
                $ref: 'schema#/properties/spec/properties/authSecret/properties/name'
            - if: hasNoExistingSecret
              label:
                text: labels.secret
              type: input
              schema:
                $ref: 'schema#/properties/spec/properties/authSecret/properties/name'
        - if: showAuthPasswordField
          label:
            text: labels.password
          type: input
          schema:
            $ref: 'schema#/properties/spec/properties/authSecret/properties/password'
        - label:
            text: labels.configOptions
            hasLine: true
          type: label-element
        - hasDescription: true
          hasDependencies: true
          owner:
            $ref: 'store#/user/username'
          cluster:
            $ref: 'store#/clusterInfo/name'
          options:
            - text: options.configOptions.topology.label
              value: topology
              description: options.configOptions.topology.description
            - text: options.configOptions.tls.label
              value: tls
              description: options.configOptions.tls.description
              dependencies:
                - name: Cert-Manager
                  url: 'https://cert-manager.io/docs/'
                  group: cert-manager.io
                  version: v1
                  resource: issuers
            - text: options.configOptions.initialization.label
              value: initialization
              description: options.configOptions.initialization.description
            - text: options.configOptions.backup.label
              value: backupconfiguration
              description: options.configOptions.backup.description
              dependencies:
                - name: Stash
                  url: 'https://stash.run/'
                  group: stash.appscode.com
                  version: v1beta1
                  resource: backupconfigurations
            - text: options.configOptions.networking.label
              value: networking
              description: options.configOptions.networking.description
            - text: options.configOptions.monitoring.label
              value: monitoring
              description: options.configOptions.monitoring.description
              dependencies:
                - name: Prometheus Operator
                  url: 'https://github.com/prometheus-operator'
                  group: monitoring.coreos.com
                  version: v1
                  resource: servicemonitors
            - text: options.configOptions.customConfig.label
              value: custom-config
              description: options.configOptions.customConfig.description
            - text: options.configOptions.podTemplate.label
              value: pod-template
              description: options.configOptions.podTemplate.description
          type: configure-options
          schema:
            $ref: 'schema#/properties/spec/properties/configurationOptions'
      discriminator:
        createAuthSecret:
          type: boolean
          default: true
      type: single-step-form
    title: steps.0.label
type: multi-step-form
hasPreviewPanel: true
