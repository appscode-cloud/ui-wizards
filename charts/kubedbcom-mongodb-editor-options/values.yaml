# Default values for kubedbcom-mongodb-editor-options.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

metadata:
  resource:
    group: kubedb.com
    kind: MongoDB
    name: mongodbs
    scope: Namespaced
    version: v1alpha2
  release:
    # Release name
    name: ""
    # Release namespace
    namespace: ""

spec:
  # Annotations to add to the database custom resource
  annotations: {}

  # Labels to add to all the template objects
  labels: {}

  # Standalone, Replicaset, Sharded
  mode: Replicaset
  replicaSet:
    name: rs0
    replicas: 3
  shardTopology:
    shard:
      replicas: 3
      shards: 2
      podResources:
        machine: ""
        resources:
          limits:
            cpu: 900m
            memory: 1Gi
      persistence:
        size: 10Gi
    configServer:
      replicas: 3
      podResources:
        machine: ""
        resources:
          limits:
            cpu: 800m
            memory: 1Gi
      persistence:
        size: 2Gi
    mongos:
      replicas: 2
      podResources:
        machine: ""
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
  arbiter:
    enabled: false
    podResources:
      machine: ""
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
  hidden:
    enabled: false
    replicas: 1
    podResources:
      machine: ""
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
    persistence:
      size: 10Gi

  deletionPolicy: WipeOut

  persistence:
    size: 10Gi
  podResources:
    machine: ""

    resources:
      limits:
        cpu: 700m
        memory: 1Gi

  authSecret:
    name: ""

    password: ""
  configuration: ""

  admin:
    deployment:
      default: Dedicated
      toggle: false
    clusterTier:
      default: "GeneralPurpose"
      toggle: false
      nodeTopology:
        available: ["m4", "m7gd", "c5d", "c7g", "t4g", "r5a", "r6g", "a-family", "b-family", "d-family", "standard-bsv2-family", "standard-ddv4-family", "standard-dv2-family"]
        default: "standard-bsv2-family"
        toggle: false
      placement:
        available: ["majority-on-spot", "minority-on-spot", "multizone", "ondemand-only", "one-on-ondemand", "spot-only", "zone-ap-southeast-1a", "zone-ap-southeast-1b", "zone-ap-southeast-1c", "default"]
        default: "default"
        toggle: false

    databases:
      MongoDB:
        versions:
          available: ["4.4.26", "6.0.12"]
          default: "6.0.12"
          toggle: true
    storageClasses:
      available: ["linode-block-storage", "default", "standard", "gp2"]
      default: "default"
      toggle: true

    tls:
      default: false
      toggle: false
    clusterIssuers:
      available: ["global-ca", "cluster-issuer"]
      default: "cluster-issuer"
      toggle: true
    webUI:
      default: false
      toggle: false

    monitoring:
      # Name of monitoring agent (one of "prometheus.io", "prometheus.io/operator", "prometheus.io/builtin")
      agent: prometheus.io/operator
      exporter:
        resources: # +doc-gen:break
          requests:
            cpu: 100m
            memory: 128Mi
      serviceMonitor:
        # Specify the labels for ServiceMonitor.
        # Prometheus crd will select ServiceMonitor using these labels.
        # Only usable when monitoring agent is `prometheus.io/webhook server`.
        labels:
          monitoring.appscode.com/prometheus: federated
      toggle: false
    alerts:
      toggle: true

    archiver:
      toggle: false
      default: false
    backup:
      tool: ""
      toggle: false

      kubestash:
        schedule: "0 */2 * * *"
        storageRef:
          name: default
          namespace: stash
        retentionPolicy:
          name: "keep-1mo"
          namespace: stash
        encryptionSecret:
          name: default-encryption-secret
          namespace: stash


form:
  alert:
    ## Enable PrometheusRule alerts
    enabled: warning

    ## Labels for default rules
    labels: # +doc-gen:break
      release: kube-prometheus-stack

    ## Annotations for default rules
    annotations: {}

    ## Additional labels for PrometheusRule alerts
    additionalRuleLabels: {}

    ## Prefix for runbook URLs. Use this to override the first part of the runbookURLs that is common to all rules.
    # runbookUrl: "https://runbooks.prometheus-operator.dev/runbooks"

    groups:
      database:
        enabled: warning
        rules:
          # Sepcifies the alert configuration for virtual memory usage.
          mongodbVirtualMemoryUsage:
            enabled: true
            val: 2097152 # 2GB
            duration: "1m"
            severity: warning
          # Sepcifies the alert configuration for replication lag.
          mongodbReplicationLag:
            enabled: true
            val: 10
            duration: "0m"
            severity: critical
          # Sepcifies the alert configuration for number of opened cursors are more than a specified amount.
          mongodbNumberCursorsOpen:
            enabled: true
            val: 10000
            duration: "2m"
            severity: warning
          # Sepcifies the alert configuration for timed out cursors.
          mongodbCursorsTimeouts:
            enabled: true
            val: 100
            duration: "2m"
            severity: warning
          # Sepcifies the alert configuration for too many connections are opened.
          mongodbTooManyConnections:
            enabled: true
            val: 80 # percentage
            duration: "2m"
            severity: warning
          # Sepcifies the alert configuration for database is in Critical phase, that means one or more of the nodes are down but the database read/write are not hampered.
          mongoDBPhaseCritical:
            enabled: true
            duration: "3m"
            severity: warning
          # Sepcifies the alert configuration for database is in NotReady phase, that means the database is not accepting connections, read/write are hampered.
          mongoDBDown:
            enabled: true
            duration: "30s"
            severity: critical
          # Sepcifies the alert configuration for high latency.
          mongodbHighLatency:
            enabled: true
            val: 250000
            duration: "10m"
            severity: warning
          # Sepcifies the alert configuration for high ticket utilizations.
          mongodbHighTicketUtilization:
            enabled: true
            val: 75 # percentage
            duration: "10m"
            severity: warning
          # Sepcifies the alert configuration for recurrent cursor timeout.
          mongodbRecurrentCursorTimeout:
            enabled: true
            val: 0
            duration: "30m"
            severity: warning
          # Sepcifies the alert configuration for recurrent memory page faults.
          mongodbRecurrentMemoryPageFaults:
            enabled: true
            val: 0
            duration: "30m"
            severity: warning
      provisioner:
        enabled: warning
        rules:
          appPhaseNotReady:
            enabled: true
            duration: "1m"
            severity: critical
          appPhaseCritical:
            enabled: true
            duration: "15m"
            severity: warning
      opsManager:
        enabled: warning
        rules:
          opsRequestOnProgress:
            enabled: true
            duration: "0m"
            severity: info
          opsRequestStatusProgressingToLong:
            enabled: true
            duration: "30m"
            severity: critical
          opsRequestFailed:
            enabled: true
            duration: "0m"
            severity: critical
      stash:
        enabled: warning
        rules:
          backupSessionFailed:
            enabled: true
            duration: "0m"
            severity: critical
          restoreSessionFailed:
            enabled: true
            duration: "0m"
            severity: critical
          noBackupSessionForTooLong:
            enabled: true
            duration: "0m"
            val: 18000
            severity: warning
          repositoryCorrupted:
            enabled: true
            duration: "5m"
            severity: critical
          repositoryStorageRunningLow:
            enabled: true
            duration: "5m"
            val: 10737418240 # 10GB
            severity: warning
          backupSessionPeriodTooLong:
            enabled: true
            duration: "0m"
            val: 1800 # 30 minute
            severity: warning
          restoreSessionPeriodTooLong:
            enabled: true
            duration: "0m"
            val: 1800 # 30 minute
            severity: warning
      schemaManager:
        enabled: warning
        rules:
          schemaPendingForTooLong:
            enabled: true
            duration: "30m"
            severity: warning
          schemaInProgressForTooLong:
            enabled: true
            duration: "30m"
            severity: warning
          schemaTerminatingForTooLong:
            enabled: true
            duration: "30m"
            severity: warning
          schemaFailed:
            enabled: true
            duration: "0m"
            severity: warning
          schemaExpired:
            enabled: true
            duration: "0m"
            severity: warning
