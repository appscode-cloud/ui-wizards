steps:
- form:
    discriminator:
      dbDetails:
        type: object
    elements:
    - computed: getDbDetails
      if: returnFalse
      schema:
        $ref: discriminator#/properties/dbDetails
      type: input
    - if: showAndInitName
      label:
        text: labels.op_req_name
      required: true
      schema:
        $ref: schema#/properties/metadata/properties/name
      type: input
    - computed: initNamespace
      disabled: isNamespaceDisabled
      fetch: getNamespaces
      if: showAndInitNamespace
      label:
        text: labels.namespace
      onChange: onNamespaceChange
      required: true
      schema:
        $ref: schema#/properties/metadata/properties/namespace
      type: select
    - computed: initDatabaseRef
      disabled: isDatabaseRefDisabled
      fetch: getDbs
      if: showAndInitDatabaseRef
      label:
        text: labels.databaseRef
      onChange: onDbChange
      refresh: true
      required: true
      schema:
        $ref: schema#/properties/spec/properties/proxyRef/properties/name
      type: select
    - if: showConfigureOpsrequestLabel
      label:
        text: labels.config_ops_request
      type: label-element
    - computed: getRequestTypeFromRoute
      disabled: isDbDetailsLoading
      hasDescription: true
      if: showAndInitOpsRequestType
      label:
        text: labels.ops_request_type
      onChange: onRequestTypeChange
      options:
      - description: options.UpdateVersion.description
        text: options.UpdateVersion.text
        value: UpdateVersion
      - description: options.HorizontalScaling.description
        text: options.HorizontalScaling.text
        value: HorizontalScaling
      - description: options.VerticalScaling.description
        text: options.VerticalScaling.text
        value: VerticalScaling
      - description: options.Restart.description
        text: options.Restart.text
        value: Restart
      - description: options.Reconfigure.description
        text: options.Reconfigure.text
        value: Reconfigure
      - description: options.ReconfigureTLS.description
        text: options.ReconfigureTLS.text
        value: ReconfigureTLS
      schema:
        $ref: schema#/properties/spec/properties/type
      type: radio
    - computed: setValueFromDbDetails|/spec/version
      fetch: getDbVersions
      if: ifRequestTypeEqualsTo|UpdateVersion
      label:
        text: labels.targetVersion
      schema:
        $ref: schema#/properties/spec/properties/updateVersion/properties/targetVersion
      type: select
    - elements:
      - computed: setValueFromDbDetails|/spec/replicas
        label:
          text: labels.replicas
        schema:
          $ref: schema#/properties/spec/properties/horizontalScaling/properties/member
        type: input
      if: ifRequestTypeEqualsTo|HorizontalScaling
      label:
        text: Horizontal Scaling Form
      schema:
        $ref: schema#/properties/spec/properties/horizontalScaling
      type: single-step-form
    - elements:
      - computed: setValueFromDbDetails|/spec/podTemplate/spec/resources|/spec/verticalScaling/proxysql/resources
        label:
          text: labels.resources
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling/properties/proxysql/properties/resources
        type: resource-input-form
      - label:
          text: labels.node_selection_policy
        options:
        - text: LabelSelector
          value: LabelSelector
        - text: Taint
          value: Taint
        schema:
          $ref: schema#/properties/spec/properties/verticalScaling/properties/proxysql/properties/nodeSelectionPolicy
        type: select
      - discriminator:
          topologyKey:
            default: ""
            type: string
          topologyValue:
            default: ""
            type: string
        elements:
        - label:
            text: labels.key
          required: isVerticalScaleTopologyRequired
          schema:
            $ref: discriminator#/topologyKey
          type: input
        - label:
            text: labels.value
          required: isVerticalScaleTopologyRequired
          schema:
            $ref: discriminator#/topologyValue
          type: input
        label:
          text: labels.topology
        show_label: true
        type: single-step-form
      if: ifRequestTypeEqualsTo|VerticalScaling
      label:
        text: labels.proxysql
      schema:
        $ref: schema#/properties/spec/properties/verticalScaling/properties/proxysql
      show_label: true
      type: single-step-form
    - elements:
      - computed: setValueFromDbDetails|/spec/initConfig/adminVariables|/spec/configuration/adminVariables
        isArray: true
        keys:
          label:
            text: labels.annotations.key
        label:
          text: labels.configuration.adminVariables
        schema:
          $ref: schema#/properties/spec/properties/configuration/properties/adminVariables
        type: key-value-input-form
        values:
          label:
            text: labels.annotations.value
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/adminVariables
          type: input
      - computed: setValueFromDbDetails|/spec/initConfig/mysqlVariables|/spec/configuration/mysqlVariables
        isArray: true
        keys:
          label:
            text: labels.annotations.key
        label:
          text: labels.configuration.mysqlVariables
        schema:
          $ref: schema#/properties/spec/properties/configuration/properties/mysqlVariables
        type: key-value-input-form
        values:
          label:
            text: labels.annotations.value
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/mysqlVariables
          type: input
      - elements:
        - label:
            text: labels.configuration.reqType
          onChange: onMySQLUserReqTypeChange
          options:
          - add
          - update
          - delete
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/mysqlQueryRules/properties/reqType
          type: select
        - addFormLabel: labels.configuration.queryRule
          computed: setMySQLRules
          element:
            discriminator:
              mysqlQueryRules:
                emitAs: mysqlQueryRules
                type: array
            elements:
            - isArray: true
              keys:
                label:
                  text: labels.annotations.key
              label:
                text: labels.configuration.rules
              schema:
                $ref: discriminator#/properties/mysqlQueryRules/items/properties/rules
              type: key-value-input-form
              values:
                label:
                  text: labels.annotations.value
                schema:
                  $ref: discriminator#/properties/mysqlQueryRules/items/properties/rules/additionalProperties
                type: input
            schema:
              $ref: discriminator#/properties/mysqlQueryRules/items
            type: single-step-form
          label:
            text: labels.configuration.queryRules
          onChange: onMySQLRulesChange
          schema:
            $ref: discriminator#/properties/mysqlQueryRules
          tableContents:
          - inTableColumn: true
            label:
              text: labels.configuration.rules
            path: rules
            type: value
            typeOfValue: key-value
          type: single-step-form-array
        label:
          text: labels.configuration.mysqlQueryRules
        schema:
          $ref: schema#/properties/spec/properties/configuration/properties/mysqlQueryRules
        show_label: true
        type: single-step-form
      - customClass: mt-10
        elements:
        - label:
            text: labels.configuration.reqType
          onChange: onMySQLUserReqTypeChange
          options:
          - add
          - update
          - delete
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/reqType
          type: select
        - addFormLabel: labels.configuration.user
          customClass: mt-20
          element:
            elements:
            - label:
                text: labels.configuration.username
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/username
              type: input
            - label:
                text: labels.configuration.active
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/active
              type: input
            - label:
                text: labels.configuration.default_schema
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/default_schema
              type: input
            - label:
                text: labels.configuration.use_ssl
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/use_ssl
              type: input
            - label:
                text: labels.configuration.attributes
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/attributes
              type: input
            - label:
                text: labels.configuration.backend
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/backend
              type: input
            - label:
                text: labels.configuration.comment
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/comment
              type: input
            - label:
                text: labels.configuration.default_hostgroup
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/default_hostgroup
              type: input
            - label:
                text: labels.configuration.fast_forward
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/fast_forward
              type: input
            - label:
                text: labels.configuration.frontend
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/frontend
              type: input
            - label:
                text: labels.configuration.max_connections
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/max_connections
              type: input
            - label:
                text: labels.configuration.schema_locked
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/schema_locked
              type: input
            - label:
                text: labels.configuration.transaction_persistent
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/transaction_persistent
              type: input
            schema:
              $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items
            type: single-step-form
          if: showUserCreationField
          label:
            text: labels.configuration.users
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users
          tableContents:
          - inTableColumn: true
            label:
              text: labels.configuration.username
            path: username
            type: value
            typeOfValue: string
          - inTableColumn: true
            label:
              text: labels.configuration.active
            path: active
            type: value
            typeOfValue: string
          - inTableColumn: true
            label:
              text: labels.configuration.default_schema
            path: default_schema
            type: value
            typeOfValue: string
          - inTableColumn: true
            label:
              text: labels.configuration.use_ssl
            path: use_ssl
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.attributes
            path: attributes
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.backend
            path: backend
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.comment
            path: comment
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.default_hostgroup
            path: default_hostgroup
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.fast_forward
            path: fast_forward
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.frontend
            path: frontend
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.max_connections
            path: max_connections
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.schema_locked
            path: schema_locked
            type: value
            typeOfValue: string
          - label:
              text: labels.configuration.transaction_persistent
            path: transaction_persistent
            type: value
            typeOfValue: string
          type: single-step-form-array
        - addFormLabel: labels.configuration.user
          customClass: mt-20
          element:
            elements:
            - label:
                text: labels.configuration.username
              schema:
                $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items/properties/username
              type: input
            schema:
              $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users/items
            type: single-step-form
          if: showUserDeletionField
          label:
            text: labels.configuration.users
          schema:
            $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers/properties/users
          tableContents:
          - inTableColumn: true
            label:
              text: labels.configuration.username
            path: username
            type: value
            typeOfValue: string
          type: single-step-form-array
        label:
          text: labels.configuration.mysqlUsers
        schema:
          $ref: schema#/properties/spec/properties/configuration/properties/mysqlUsers
        show_label: true
        type: single-step-form
      if: ifRequestTypeEqualsTo|Reconfigure
      schema:
        $ref: schema#/properties/spec/properties/configuration
      type: single-step-form
    - discriminator:
        tlsOperation:
          default: update
          type: string
      elements:
      - computed: initTlsOperation
        if: hasTlsField
        label:
          text: labels.tlsOperation
        onChange: onTlsOperationChange
        options:
        - text: Update
          value: update
        - text: Rotate
          value: rotate
        - text: Remove
          value: remove
        schema:
          $ref: discriminator#/properties/tlsOperation
        type: radio
      - if: returnFalse
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/remove
        type: switch
      - if: returnFalse
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/rotateCertificates
        type: switch
      - elements:
        - computed: initIssuerRefApiGroup
          disabled: true
          label:
            text: labels.api_group
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/apiGroup
          type: input
        - computed: setValueFromDbDetails|/spec/tls/issuerRef/kind
          label:
            text: labels.kind
          options:
          - text: Issuer
            value: Issuer
          - text: ClusterIssuer
            value: ClusterIssuer
          required: isIssuerRefRequired
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/kind
          type: select
        - allowUserDefinedOption: true
          computed: setValueFromDbDetails|/spec/tls/issuerRef/name
          fetch: getIssuerRefsName
          label:
            text: labels.name
          required: isIssuerRefRequired
          schema:
            $ref: schema#/properties/spec/properties/tls/properties/issuerRef/properties/name
          type: select
        if: showIssuerRefAndCertificates
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/issuerRef
        type: single-step-form
      - alias: reusable_certificates
        chart:
          name: uibytebuildersdev-component-certificates
          version: v0.4.20
        computed: setValueFromDbDetails|/spec/tls/certificates|/spec/tls/certificates
        functionCallbacks:
          getAliasOptions:
            $ref: functions#/getAliasOptions
        if: showIssuerRefAndCertificates
        moduleResolver: fetchJsons
        schema:
          $ref: schema#/properties/spec/properties/tls/properties/certificates
        type: reusable-element
      if: ifRequestTypeEqualsTo|ReconfigureTLS
      label:
        text: labels.tls
      schema:
        $ref: schema#/properties/spec/properties/tls
      type: single-step-form
    - customClass: mt-10
      label:
        text: labels.timeout
      options:
      - text: 5 minutes
        value: 5m
      - text: 10 minutes
        value: 10m
      - text: 30 minutes
        value: 30m
      - text: 1 hour
        value: 1h
      - text: 2 hours
        value: 2h
      - text: 5 hours
        value: 5h
      - text: 10 hours
        value: 10h
      schema:
        $ref: schema#/properties/spec/properties/timeout
      type: select
    - computed: setApplyToIfReady
      label:
        text: labels.apply
      options:
      - text: IfReady (OpsRequest will be applied if database is ready)
        value: IfReady
      - text: Always (OpsRequest will always be applied)
        value: Always
      schema:
        $ref: schema#/properties/spec/properties/apply
      type: radio
    type: single-step-form
  id: basic
  title: steps.0.label
type: multi-step-form
