steps:
- form:
    discriminator:
      bundleApiLoaded:
        default: false
        type: boolean
    elements:
    - computed: initBundle
      if: returnFalse
      type: label-element
    - disableUnselect: true
      fetch: getAdminOptions|databases/MSSQLServer/versions
      if: isToggleOn|databases/MSSQLServer/versions
      label:
        text: labels.database.version
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/databases/properties/MSSQLServer/properties/versions/properties/default
      type: select
    - hasDescription: true
      label:
        text: labels.database.mode
      onChange: onModeChange
      options:
      - description: options.database.mode.Standalone.description
        text: options.database.mode.Standalone.label
        value: Standalone
      - description: options.database.mode.Topology.description
        text: options.database.mode.Topology.label
        value: Topology
      schema:
        $ref: schema#/properties/spec/properties/mode
      type: radio
    - element:
        label:
          text: labels.databases
        schema:
          $ref: schema#/properties/spec/properties/topology/properties/availabilityGroup/properties/databases
        type: input
      if: isEqualToModelPathValue|Topology|/spec/mode
      label:
        text: labels.availabilityGroup
      schema:
        $ref: schema#/properties/spec/properties/topology/properties/availabilityGroup
      type: list-input-form
    - if: isEqualToModelPathValue|Topology|/spec/mode
      label:
        text: labels.replicaset.number
      schema:
        $ref: schema#/properties/spec/properties/replicas
      type: input
    - elements:
      - computed: setMachineToCustom
        fetch: getMachineListForOptions
        label:
          text: Machine
        onChange: onMachineChange
        schema:
          $ref: schema#/properties/spec/properties/podResources/properties/machine
        type: select
      - computed: setLimits|cpu
        disabled: isMachineNotCustom
        label:
          text: labels.cpu
        schema:
          $ref: schema#/properties/spec/properties/podResources/properties/resources/properties/requests/properties/cpu
        type: input
      - computed: setLimits|memory
        disabled: isMachineNotCustom
        label:
          text: labels.memory
        onChange: setRequests|memory
        schema:
          $ref: schema#/properties/spec/properties/podResources/properties/resources/properties/requests/properties/memory
        type: input
      label:
        text: labels.machine_profile
      show_label: true
      type: single-step-form
    - fetch: getAdminOptions|storageClasses
      label:
        text: labels.storage.class
      schema:
        $ref: schema#/properties/spec/properties/admin/properties/storageClasses/properties/default
      type: select
    - if: showStorageSizeField
      label:
        text: labels.storage.size
      schema:
        $ref: schema#/properties/spec/properties/persistence/properties/size
      type: input
    - elements:
      - fetch: getAdminOptions|clusterIssuers
        if: isEqualToModelPathValue|Topology|/spec/mode
        label:
          text: labels.clusterIssuers
        required: true
        schema:
          $ref: schema#/properties/spec/properties/admin/properties/clusterIssuers/properties/default
        type: select
      type: single-step-form
    - accordion: true
      description:
        text: Configure Credentials, Deployment Mode etc.
      discriminator:
        configDatabase:
          default: false
          type: boolean
        createAuthSecret:
          default: false
          type: boolean
        recovery:
          default: false
          type: boolean
      elements:
      - elements:
        - isArray: true
          keys:
            label:
              text: labels.labels.key
          label:
            text: labels.labels.label
          schema:
            $ref: schema#/properties/spec/properties/labels
          type: key-value-input-form
          values:
            label:
              text: labels.labels.value
            schema:
              $ref: schema#/properties/spec/properties/labels/additionalProperties
            type: input
        - isArray: true
          keys:
            label:
              text: labels.annotations.key
          label:
            text: labels.annotations.label
          schema:
            $ref: schema#/properties/spec/properties/annotations
          type: key-value-input-form
          values:
            label:
              text: labels.annotations.value
            schema:
              $ref: schema#/properties/spec/properties/annotations/additionalProperties
            type: input
        hideForm: true
        label:
          text: Labels & Annotations
        show_label: true
        type: single-step-form
      - customClass: mt-20
        label:
          text: labels.deletionPolicy
        onChange: setStorageClass
        options:
        - description: options.deletionPolicy.delete.description
          text: options.deletionPolicy.delete.label
          value: Delete
        - description: options.deletionPolicy.halt.description
          text: options.deletionPolicy.halt.label
          value: Halt
        - description: options.deletionPolicy.wipeOut.description
          text: options.deletionPolicy.wipeOut.label
          value: WipeOut
        - description: options.deletionPolicy.doNotTerminate.description
          text: options.deletionPolicy.doNotTerminate.label
          value: DoNotTerminate
        schema:
          $ref: schema#/properties/spec/properties/deletionPolicy
        type: select
      - label:
          text: Provide Authentication Credentials?
        onChange: onAuthChange
        schema:
          $ref: discriminator#/createAuthSecret
        type: switch
      - if: showAuthPasswordField
        label:
          text: labels.name
        schema:
          $ref: schema#/properties/spec/properties/authSecret/properties/name
        type: input
      - if: showAuthPasswordField
        label:
          text: labels.password
        schema:
          $ref: schema#/properties/spec/properties/authSecret/properties/password
        type: input
      - label:
          text: Configure Database?
        onChange: clearConfiguration
        schema:
          $ref: discriminator#/configDatabase
        type: switch
      - if: isConfigDatabaseOn
        label:
          text: Configuration
        schema:
          $ref: schema#/properties/spec/properties/configuration
        type: editor
      - label:
          text: Point in-time Recovery?
        schema:
          $ref: discriminator#/recovery
        type: switch
      - elements:
        - customClass: mt-10
          label:
            text: Recovery Timestamp
          schema:
            $ref: schema#/properties/spec/properties/init/properties/archiver/properties/recoveryTimestamp
          type: input
        - elements:
          - fetch: fetchNamespaces
            hasGroup: true
            if: isClusterRancherManaged|rancher
            label:
              text: Namespace
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/encryptionSecret/properties/namespace
            type: select
          - fetch: fetchNamespaces
            if: isClusterRancherManaged|notRancher
            label:
              text: Namespace
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/encryptionSecret/properties/namespace
            type: select
          - fetch: getRecoveryNames|encryptionSecret
            label:
              text: Name
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/encryptionSecret/properties/name
            type: select
          label:
            text: Encryption Secret
          schema:
            $ref: schema#/properties/spec/properties/init/properties/archiver/properties/encryptionSecret
          show_label: true
          type: single-step-form
        - elements:
          - fetch: fetchNamespaces
            hasGroup: true
            if: isClusterRancherManaged|rancher
            label:
              text: Namespace
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/fullDBRepository/properties/namespace
            type: select
          - fetch: fetchNamespaces
            if: isClusterRancherManaged|notRancher
            label:
              text: Namespace
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/fullDBRepository/properties/namespace
            type: select
          - fetch: getRecoveryNames|fullDBRepository
            label:
              text: Name
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/fullDBRepository/properties/name
            type: select
          label:
            text: Full DB Repository
          schema:
            $ref: schema#/properties/spec/properties/init/properties/archiver/properties/fullDBRepository
          show_label: true
          type: single-step-form
        - elements:
          - fetch: fetchNamespaces
            hasGroup: true
            if: isClusterRancherManaged|rancher
            label:
              text: Namespace
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/manifestRepository/properties/namespace
            type: select
          - fetch: fetchNamespaces
            if: isClusterRancherManaged|notRancher
            label:
              text: Namespace
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/manifestRepository/properties/namespace
            type: select
          - fetch: getRecoveryNames|manifestRepository
            label:
              text: Name
            schema:
              $ref: schema#/properties/spec/properties/init/properties/archiver/properties/manifestRepository/properties/name
            type: select
          label:
            text: Manifest Repository
          schema:
            $ref: schema#/properties/spec/properties/init/properties/archiver/properties/manifestRepository
          show_label: true
          type: single-step-form
        if: showRecovery
        label:
          text: Point in-time Recovery
        schema:
          $ref: schema#/properties/spec/properties/init/properties/archiver
        show_label: true
        type: single-step-form
      - hasDescription: true
        if: isToggleOn|deployment
        label:
          text: labels.deployment.name
        options:
        - description: labels.deployment.shared
          text: Shared
          value: Shared
        - description: labels.deployment.dedicated
          text: Dedicated
          value: Dedicated
        schema:
          $ref: schema#/properties/spec/properties/admin/properties/deployment/properties/default
        type: radio
      - if: isToggleOn|clusterTier
        isHorizontal: true
        label:
          text: labels.clusterTier
        options:
        - text: General Purpose
          value: GeneralPurpose
        - text: Memory Optimized
          value: MemoryOptimized
        - text: CPU Optimized
          value: CPUOptimized
        schema:
          $ref: schema#/properties/spec/properties/admin/properties/clusterTier/properties/default
        type: radio
      - disableUnselect: true
        fetch: getAdminOptions|clusterTier/placement
        if: isToggleOn|clusterTier/placement
        label:
          text: labels.placement
        schema:
          $ref: schema#/properties/spec/properties/admin/properties/clusterTier/properties/placement/properties/default
        type: select
      - disableUnselect: true
        fetch: getNodeTopology
        if: isToggleOn|clusterTier/nodeTopology
        label:
          text: labels.nodeTopology
        schema:
          $ref: schema#/properties/spec/properties/admin/properties/clusterTier/properties/nodeTopology/properties/default
        type: select
      hideForm: true
      label:
        text: Advanced Configuration
      show_label: true
      type: single-step-form
    - accordion: true
      description:
        text: Enable Backup, Monitoring, TLS etc.
      discriminator:
        backup:
          default: false
          type: boolean
      elements:
      - discriminator:
          monitoring:
            default: false
            type: boolean
        elements:
        - computed: setMonitoring
          if: isToggleOn|monitoring
          label:
            text: labels.enable_monitoring
          onChange: updateAlertValue
          schema:
            $ref: discriminator#/monitoring
          type: switch
        type: single-step-form
      - elements:
        - if: isToggleOn|archiver
          label:
            text: Enable Archiver?
          schema:
            $ref: schema#/properties/spec/properties/admin/properties/archiver/properties/default
          type: switch
        type: single-step-form
      - computed: setBackup
        if: isToggleOn|backup
        label:
          text: Enable Backup?
        onChange: onBackupSwitch
        schema:
          $ref: discriminator#/backup
        type: switch
      if: showAdditionalSettings
      label:
        text: Additional Options
      show_label: true
      type: single-step-form
    type: single-step-form
  id: options
  title: steps.0.label
type: multi-step-form
