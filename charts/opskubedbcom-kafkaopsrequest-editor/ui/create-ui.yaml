type: multi-step-form
step:
  - type: single-step-form
    elements:
# common
      - type: input
        label: op_req_name
        if:
          type: function
          name: showAndInitName
        validation:
          type: required
        schema: schema/properties/metadata/properties/name
      - type: select
        label: Namespace
        if:
          type: function
          name: showAndInitNamespace
        init:
          type: func
          value: initNamespace
        disable: isNamespaceDisabled
        loader: getNamespaces
        validation:
          type: required
        hasGroup: isRancherManaged
        schema: schema/properties/metadata/properties/namespace
      - type: select
        label: Database Ref
        if:
          type: function
          name: showAndInitDatabaseRef
        loader:
          name: getDbs
          watchPaths:
            - schema/properties/metadata/properties/namespace
        init:
          type: func
          value: initDatabaseRef
        validation:
          type: required
        disable: isDatabaseRefDisabled
        refresh: true
        # watcher:
        #   paths:
        #     - schema/properties/metadata/properties/namespace
        #   func: initDatabaseRef
        schema: schema/properties/spec/properties/databaseRef/properties/name
      - type: label-element
        label: config_ops_request
        if:
          type: function
          name: showConfigureOpsrequestLabel
      - type: radio
        label: Type of Ops Request
        if:
          type: function
          name: showAndInitOpsRequestType
        options:
          - description: Update your database to any version
            text: Update Version
            value: UpdateVersion
          - description: Scale up or down pod count
            text: Horizontal Scaling
            value: HorizontalScaling
          - description: Manage your CPU resources
            text: Vertical Scaling
            value: VerticalScaling
          - description: Manage your database size
            text: Volume Expansion
            value: VolumeExpansion
          - description: Restart your database
            text: Restart
            value: Restart
          - description: Reconfigure your database
            text: Reconfigure
            value: Reconfigure
          - description: Reconfigure your database tls configuration
            text: Reconfigure TLS
            value: ReconfigureTLS
        init:
          type: func
          value: getRequestTypeFromRoute
        disable: isDbDetailsLoading
        watcher:
          func: isDbDetailsLoading
          paths:
            - temp/dbDetails
            - schema/properties/spec/properties/databaseRef/properties/name
        isHorizontal: true
        schema: schema/properties/spec/properties/type
# UpdateVersion
      - type: block-layout
        showLabels: false
        if:
          type: function
          name: ifRequestTypeEqualsTo|UpdateVersion
        elements:
          - type: select
            label: Target Version
            init:
              type: func
              value: setValueFromDbDetails|/spec/version
            loader: getDbVersions
            schema: schema/properties/spec/properties/updateVersion/properties/targetVersion
# Horizontal Scale
      - type: block-layout
        label: Horizontal Scaling Form
        if:
          type: function
          name: ifRequestTypeEqualsTo|HorizontalScaling
        elements:
          - type: input
            label: Node
            if:
              type: function
              name: ifDbTypeEqualsTo|Combined|horizontalScaling
            init:
              type: func
              value: setValueFromDbDetails|/spec/replicas
            schema: schema/properties/spec/properties/horizontalScaling/properties/node
          - type: block-layout
            label: Topology horizontal scaling
            if:
              name: ifDbTypeEqualsTo|Topology|horizontalScaling
              type: function
            elements:
              - type: block-layout
                label: Broker Horizontal Scaling
                showLabels: false
                elements:
                  - type: label-element
                    label: Broker
                  - type: input
                    label: Replicas
                    schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/broker
                    init:
                      type: func
                      value: setValueFromDbDetails|/spec/topology/broker/replicas
              - type: block-layout
                label: Controller Horizontal Scaling
                showLabels: false
                elements:
                  - type: label-element
                    label: Controller
                  - type: input
                    label: Replicas
                    init:
                      type: func
                      value: setValueFromDbDetails|/spec/topology/controller/replicas
                    schema: schema/properties/spec/properties/horizontalScaling/properties/topology/properties/controller
# vertical Scale
      - type: block-layout
        if:
          type: function
          name: ifRequestTypeEqualsTo|VerticalScaling
        elements:
          - type: block-layout
            label: Combined Vertical Scaling
            showLabels: false
            if:
              type: function
              name: ifDbTypeEqualsTo|Combined|verticalScaling
            elements:
              - type: machine-compare
                label: Resources
                loader: getMachines
                init:
                  type: func
                  value: setMachine|node
                # watcher:
                #   func: onMachineChange|node|/spec/podTemplate/spec/containers
                #   paths:
                #     - schema/properties/spec/properties/verticalScaling/properties/node/properties/resources
                schema: schema/properties/spec/properties/verticalScaling/properties/node/properties/resources
              - type: select
                label: Node Selection Policy
                options:
                  - text: LabelSelector
                    value: LabelSelector
                  - text: Taint
                    value: Taint
                schema: schema/properties/spec/properties/verticalScaling/properties/node/properties/nodeSelectionPolicy
              - type: block-layout
                label: Topology
                showLabels: true
                elements:
                  - type: input
                    label: Key
                    schema: schema/properties/spec/properties/verticalScaling/properties/node/properties/topology/properties/key
                  - type: input
                    label: Value
                    schema: schema/properties/spec/properties/verticalScaling/properties/node/properties/topology/properties/value
          - type: block-layout
            if:
              type: function
              name: ifDbTypeEqualsTo|Topology|verticalScaling
            label: Topology Vertical Scaling
            showLabels: false
            elements:
              - type: block-layout
                label: Broker Vertical Scaling
                showLabels: true
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|broker
                    # watcher:
                    #   func: onMachineChange|broker|/spec/topology/broker/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/broker/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/broker/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/broker/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        schema: schema/properties/spec/properties/verticalScaling/properties/broker/properties/topology/properties/key
                      - type: input
                        label: Value
                        schema: schema/properties/spec/properties/verticalScaling/properties/broker/properties/topology/properties/value
              - type: block-layout
                label: Controller Vertical Scaling
                showLabels: true
                elements:
                  - type: machine-compare
                    label: Resources
                    loader: getMachines
                    init:
                      type: func
                      value: setMachine|controller
                    # watcher:
                    #   func: onMachineChange|controller|/spec/topology/controller/resources
                    #   paths:
                    #     - schema/properties/spec/properties/verticalScaling/properties/controller/properties/resources
                    schema: schema/properties/spec/properties/verticalScaling/properties/controller/properties/resources
                  - type: select
                    label: Node Selection Policy
                    options:
                      - text: LabelSelector
                        value: LabelSelector
                      - text: Taint
                        value: Taint
                    schema: schema/properties/spec/properties/verticalScaling/properties/controller/properties/nodeSelectionPolicy
                  - type: block-layout
                    label: Topology
                    showLabels: true
                    elements:
                      - type: input
                        label: Key
                        schema: schema/properties/spec/properties/verticalScaling/properties/controller/properties/topology/properties/key
                      - type: input
                        label: Value
                        schema: schema/properties/spec/properties/verticalScaling/properties/controller/properties/topology/properties/value
# Volume Expansion
      - type: block-layout
        label: Volume Expansion Form
        if:
          type: function
          name: ifRequestTypeEqualsTo|VolumeExpansion
        elements:
          - type: input
            label: Node
            if:
              type: function
              name: ifDbTypeEqualsTo|Combined|volumeExpansion
            init:
              type: func
              value: setValueFromDbDetails|/spec/storage/resources/requests/storage
            validation:
              type: custom
              name: checkVolume|/spec/storage/resources/requests/storage|/spec/volumeExpansion/node
            schema: schema/properties/spec/properties/volumeExpansion/properties/node
          - type: select
            label: Mode
            options:
              - text: Offline
                value: Offline
              - text: Online
                value: Online
            validation:
              type: required
            schema: schema/properties/spec/properties/volumeExpansion/properties/mode
          - type: block-layout
            label: Topology volume expansion
            if:
              type: function
              name: ifDbTypeEqualsTo|Topology|volumeExpansion
            elements:
              - type: input
                label: Broker
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/broker/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/broker/storage/resources/requests/storage|/spec/volumeExpansion/broker
                schema: schema/properties/spec/properties/volumeExpansion/properties/broker
              - type: input
                label: Controller
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/topology/controller/storage/resources/requests/storage
                validation:
                  type: custom
                  name: checkVolume|/spec/topology/controller/storage/resources/requests/storage|/spec/volumeExpansion/controller
                schema: schema/properties/spec/properties/volumeExpansion/properties/controller
# Reconfigure
      - type: block-layout
        label: Reconfigure Form
        if:
          name: ifRequestTypeEqualsTo|Reconfigure
          type: function
        elements:
          - type: block-layout
            label: Configuration
            elements:
              - type: radio
                label: Reconfigure Type
                options:
                - text: Select New Config Secret
                  value: selectNewConfigSecret
                - text: Apply Config
                  value: applyConfig
                - text: Remove
                  value: remove
                watcher:
                  func: onReconfigurationTypeChange
                  paths:
                    - temp/properties/reconfigurationType
                validation:
                  type: required
                schema: temp/properties/reconfigurationType
              - type: block-layout
                label: Configuration config secret
                showLabels: false
                if:
                  name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret
                  type: function
                elements:
                - type: select
                  addNewButton:
                    label: Create Secret
                    target: _blank
                    url:
                      function: createSecretUrl
                  label: Config Secret
                  if:
                    name: ifReconfigurationTypeEqualsTo|selectNewConfigSecret
                    type: function
                  loader:
                    name: getConfigSecrets
                    watchPaths:
                      - schema/properties/metadata/properties/namespace
                  init:
                    type: func
                    value: setValueFromDbDetails|/spec/configSecret/name
                  refresh: true
                  validation:
                    type: required
                  schema:  schema/properties/spec/properties/configuration/properties/configSecret/properties/name
              - type: array-object-form
                label: Apply Config
                if:
                  name: ifReconfigurationTypeEqualsTo|applyConfig
                  type: function
                validation:
                  type: required
                watcher:
                  func: onApplyconfigChange
                  paths:
                    - temp/properties/applyConfig
                schema: temp/properties/applyConfig
                elements:
                  - type: input
                    label: key
                    validation:
                      type: required
                    schema: temp/properties/configArray/items/properties/key
                  - type: textarea
                    label: value
                    validation:
                      type: required
                    schema:  temp/properties/configArray/items/properties/value
              - type: switch
                schema:  schema/properties/spec/properties/configuration/properties/removeCustomConfig
                label: Remove CustomConfig
                if:
                  name: returnFalse
                  type: function
# Reconfigure TLS
      - type: block-layout
        label: TLS
        if:
          name: ifRequestTypeEqualsTo|ReconfigureTLS
          type: function
        elements:
          - type: radio
            label: TLS Operation
            if:
              name: hasTlsField
              type: function
            options:
              - text: Update
                value: update
              - text: Rotate
                value: rotate
              - text: Remove
                value: remove
            init:
              type: func
              value: initTlsOperation
            schema: temp/properties/tlsOperation
          - type: switch
            label: remove
            if:
              name: returnFalse
              type: function
            schema: schema/properties/spec/properties/tls/properties/remove
          - type: switch
            label: rotateCertificates
            schema: schema/properties/spec/properties/tls/properties/rotateCertificates
            if:
              name: returnFalse
              type: function
          - type: block-layout
            label: Issuer Reference
            showLabels: true
            if:
              name: showIssuerRefAndCertificates
              type: function
            elements:
              - type: input
                label: API Group
                init:
                  type: func
                  value: initIssuerRefApiGroup
                watcher:
                  func: initIssuerRefApiGroup
                  paths:
                    - schema/properties/spec/properties/tls/properties/issuerRef/properties/kind
                disable: true
                schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/apiGroup
              - type: select
                label: Kind
                options:
                  - text: Issuer
                    value: Issuer
                  - text: ClusterIssuer
                    value: ClusterIssuer
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/tls/issuerRef/kind
                validation:
                  type: custom
                  name: isIssuerRefRequired
                schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/kind
              - type: select
                label: Name
                loader:
                  name: getIssuerRefsName
                  watchPaths:
                    - schema/properties/spec/properties/tls/properties/issuerRef/properties/kind
                    - schema/properties/metadata/properties/namespace
                watcher:
                  func: getIssuerRefsName
                  paths:
                    - schema/properties/spec/properties/tls/properties/issuerRef/properties/kind
                    - schema/properties/metadata/properties/namespace
                init:
                  type: func
                  value: setValueFromDbDetails|/spec/tls/issuerRef/name
                validation:
                  type: custom
                  name: isIssuerRefRequired
                schema: schema/properties/spec/properties/tls/properties/issuerRef/properties/name
          - type: block-layout
            label: Certificates
            if:
              name: showIssuerRefAndCertificates
              type: function
            loader: setValueFromDbDetails|/spec/tls/certificates|/spec/tls/certificates
            elements:
              - type: select
                label: Alias
                loader: fetchAliasOptions
                disable: disableAlias
                schema: schema/properties/spec/properties/tls/properties/certificates/items/properties/alias
              - type: input
                label: Secret Name
                schema: schema/properties/spec/properties/tls/properties/certificates/items/properties/secretName
              - type: input
                label: Duration
                schema: schema/properties/spec/properties/tls/properties/certificates/items/properties/duration
              - type: input
                label: Renew Before
                schema: schema/properties/spec/properties/tls/properties/certificates/items/properties/renewBefore
              - type: block-layout
                label: Subject
                showLabels: true
                elements:
                  - type: array-object-form
                    label: Organizations
                    schema: schema/items/properties/subject/properties/organizations
                    elements:
                      - type: input
                        label: organization
                        schema: schema/items/properties/subject/properties/organizations/items
                  - type: array-object-form
                    label: countries
                    schema: schema/items/properties/subject/properties/countries
                    elements:
                      - type: input
                        label: country
                        schema: schema/items/properties/subject/properties/countries/items
                  - type: array-object-form
                    label: organizational_units
                    schema: schema/items/properties/subject/properties/organizationalUnits
                    elements:
                      - type: input
                        label: organizational_unit
                        schema: schema/items/properties/subject/properties/organizationalUnits/items
                  - type: array-object-form
                    label: provinces
                    schema: schema/items/properties/subject/properties/provinces
                    elements:
                      - type: input
                        label: province
                        schema: schema/items/properties/subject/properties/provinces/items
              - type: array-object-form
                label: DNS Names
                schema: schema/items/properties/dnsNames
                elements:
                  - type: input
                    label: dns name
                    schema: schema/items/properties/dnsNames/items
              - type: array-object-form
                label: IP Addresses
                schema: schema/items/properties/ipAddresses
                elements:
                  - type: input
                    label: ip Address
                    schema: schema/items/properties/ipAddresses/items
# common
      - type: select
        label: Timeout
        schema: 'schema/properties/spec/properties/timeout'
        options:
          - text: 5 minutes
            value: 5m
          - text: 10 minutes
            value: 10m
          - text: 30 minutes
            value: 30m
          - text: 1 hour
            value: 1h
          - text: 2 hours
            value: 2h
          - text: 5 hours
            value: 5h
          - text: 10 hours
            value: 10h
      - type: radio
        label: apply
        schema: 'schema/properties/spec/properties/apply'
        init:
          type: func
          value: setApplyToIfReady
        options:
          - text: IfReady (OpsRequest will be applied if database is ready)
            value: IfReady
          - text: Always (OpsRequest will always be applied)
            value: Always
