properties:
  metadata:
    properties:
      release:
        properties:
          name:
            type: string
          namespace:
            type: string
        required:
        - name
        - namespace
        type: object
      resource:
        description: ResourceID identifies a resource
        properties:
          group:
            type: string
          kind:
            description: Kind is the serialized kind of the resource.  It is normally
              CamelCase and singular.
            type: string
          name:
            description: 'Name is the plural name of the resource to serve.  It must
              match the name of the CustomResourceDefinition-registration too: plural.group
              and it must be all lowercase.'
            type: string
          scope:
            description: ResourceScope is an enum defining the different scopes available
              to a custom resource
            type: string
          version:
            type: string
        required:
        - group
        type: object
    required:
    - release
    - resource
    type: object
  spec:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      backend:
        properties:
          azure:
            properties:
              auth:
                properties:
                  AZURE_ACCOUNT_KEY:
                    type: string
                  AZURE_ACCOUNT_NAME:
                    type: string
                required:
                - AZURE_ACCOUNT_KEY
                - AZURE_ACCOUNT_NAME
                type: object
              spec:
                properties:
                  container:
                    type: string
                  maxConnections:
                    format: int64
                    type: integer
                  prefix:
                    type: string
                required:
                - container
                type: object
            required:
            - spec
            type: object
          gcs:
            properties:
              auth:
                properties:
                  GOOGLE_PROJECT_ID:
                    type: string
                  GOOGLE_SERVICE_ACCOUNT_JSON_KEY:
                    type: string
                required:
                - GOOGLE_PROJECT_ID
                - GOOGLE_SERVICE_ACCOUNT_JSON_KEY
                type: object
              spec:
                properties:
                  bucket:
                    type: string
                  maxConnections:
                    format: int64
                    type: integer
                  prefix:
                    type: string
                required:
                - bucket
                type: object
            required:
            - spec
            type: object
          local:
            properties:
              mountPath:
                description: MountPath specifies the directory where this volume will
                  be mounted
                type: string
              persistentVolumeClaim:
                description: PersistentVolumeClaimVolumeSource references the user's
                  PVC in the same namespace. This volume finds the bound PV and mounts
                  that volume for the pod. A PersistentVolumeClaimVolumeSource is,
                  essentially, a wrapper around another type of volume that is owned
                  by someone else (the system).
                properties:
                  claimName:
                    description: 'claimName is the name of a PersistentVolumeClaim
                      in the same namespace as the pod using this volume. More info:
                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                    type: string
                  readOnly:
                    description: readOnly Will force the ReadOnly setting in VolumeMounts.
                      Default false.
                    type: boolean
                required:
                - claimName
                type: object
              subPath:
                type: string
            type: object
          provider:
            enum:
            - s3
            - azure
            - gcs
            - local
            type: string
          s3:
            properties:
              auth:
                properties:
                  AWS_ACCESS_KEY_ID:
                    type: string
                  AWS_SECRET_ACCESS_KEY:
                    type: string
                  CA_CERT_DATA:
                    type: string
                required:
                - AWS_ACCESS_KEY_ID
                - AWS_SECRET_ACCESS_KEY
                type: object
              spec:
                properties:
                  bucket:
                    type: string
                  endpoint:
                    type: string
                  insecureTLS:
                    type: boolean
                  prefix:
                    type: string
                  region:
                    type: string
                required:
                - bucket
                - endpoint
                type: object
            required:
            - spec
            type: object
        required:
        - provider
        type: object
      deletionPolicy:
        description: DeletionPolicy specifies what to do if a resource is deleted
        enum:
        - Delete
        - WipeOut
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      runtimeSettings:
        properties:
          securityContext:
            format: int64
            type: integer
        type: object
    required:
    - backend
    - deletionPolicy
    - runtimeSettings
    type: object
required:
- spec
type: object
