{{- $machines := .Files.Get "data/machines.yaml" | fromYaml -}}
{{- $middleManager_res := .Values.spec.topology.middleManagers.podResources.resources -}}
{{- if and .Values.spec.topology.middleManagers.podResources.machine (hasKey $machines .Values.spec.topology.middleManagers.podResources.machine) }}
  {{- $middleManager_res = get (get $machines .Values.spec.topology.middleManagers.podResources.machine) "resources" }}
{{- end }}
{{- $historical_res := .Values.spec.topology.historicals.podResources.resources -}}
{{- if and .Values.spec.topology.historicals.podResources.machine (hasKey $machines .Values.spec.topology.historicals.podResources.machine) }}
  {{- $historical_res = get (get $machines .Values.spec.topology.historicals.podResources.machine) "resources" }}
{{- end }}
{{- $coordinator_res := .Values.spec.topology.coordinators.podResources.resources -}}
{{- if and .Values.spec.topology.coordinators.podResources.machine (hasKey $machines .Values.spec.topology.coordinators.podResources.machine) }}
  {{- $coordinator_res = get (get $machines .Values.spec.topology.coordinators.podResources.machine) "resources" }}
{{- end }}
{{- $broker_res := .Values.spec.topology.coordinators.podResources.resources -}}
{{- if and .Values.spec.topology.coordinators.podResources.machine (hasKey $machines .Values.spec.topology.coordinators.podResources.machine) }}
  {{- $broker_res = get (get $machines .Values.spec.topology.coordinators.podResources.machine) "resources" }}
{{- end }}

{{- define "common.placement" -}}
podPlacementPolicy:
  name: {{ .Values.spec.admin.clusterTier.placement.default }}
{{- if eq .Values.spec.admin.deployment.default "Dedicated" }}
nodeSelector:
  app: druids.kubedb.com
  instance: {{ include "kubedbcom-druid-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  nodepool: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
tolerations:
  - key: app
    operator: "Equal"
    value: "druids.kubedb.com"
    effect: "NoSchedule"
  - key: instance
    operator: "Equal"
    value: {{ include "kubedbcom-druid-editor-options.fullname" . }}
    effect: "NoSchedule"
  - key: namespace
    operator: "Equal"
    value: {{ .Release.Namespace }}
    effect: "NoSchedule"
  - key: nodepool
    operator: "Equal"
    value: {{ .Values.spec.admin.clusterTier.nodeTopology.default }}
    effect: "NoSchedule"
{{- end }}
{{- end }}

apiVersion: kubedb.com/v1alpha2
kind: Druid
metadata:
  name: {{ include "kubedbcom-druid-editor-options.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedbcom-druid-editor-options.labels" . | nindent 4 }}
{{- if .Values.spec.annotations }}
  annotations:
    {{- include "kubedbcom-druid-editor-options.annotations" . | nindent 4 }}
{{- end }}
spec:
  version: {{ .Values.spec.admin.databases.Druid.versions.default | quote }}
  topology:
    historicals:
      replicas: {{ .Values.spec.topology.historicals.replicas }}
      podTemplate:
        spec:
          containers:
          - name: druid
            resources:
              {{- toYaml $historical_res | nindent 14 }}
          {{- include "common.placement" . | nindent 10 }}
      storage:
        resources:
          requests:
            storage: {{ .Values.spec.topology.historicals.persistence.size }}
        storageClassName: {{ .Values.spec.admin.storageClasses.default }}
    middleManagers:
      replicas: {{ .Values.spec.topology.middleManagers.replicas }}
      podTemplate:
        spec:
          containers:
          - name: druid
            resources:
              {{- toYaml $middleManager_res | nindent 14 }}
          {{- include "common.placement" . | nindent 10 }}
      storage:
        resources:
          requests:
            storage: {{ .Values.spec.topology.middleManagers.persistence.size }}
        storageClassName: {{ .Values.spec.admin.storageClasses.default }}
    coordinators:
      replicas: {{ .Values.spec.topology.coordinators.replicas }}
      podTemplate:
        spec:
          containers:
          - name: druid
            resources:
              {{- toYaml $coordinator_res | nindent 14 }}
          {{- include "common.placement" . | nindent 10 }}
    brokers:
      replicas: {{ .Values.spec.topology.brokers.replicas }}
      podTemplate:
        spec:
          containers:
          - name: druid
            resources:
              {{- toYaml $broker_res | nindent 14 }}
          {{- include "common.placement" . | nindent 10 }}
  deepStorage:
    type: {{ .Values.spec.deepStorage.type }}
    configSecret:
      name: {{ .Values.spec.deepStorage.configSecret }}
  metadataStorage:
    name: {{ .Values.spec.metadataStorage.name }}
    namespace: {{ .Values.spec.metadataStorage.namespace }}
    createTables: true
  zookeeperRef:
    name: {{ .Values.spec.zookeeperRef.name }}
    namespace: {{ .Values.spec.zookeeperRef.namespace }}
  deletionPolicy: {{ .Values.spec.deletionPolicy }}
{{- if .Values.spec.authSecret.name }}
  authSecret:
    name: {{ .Values.spec.authSecret.name }}
{{- end }}
{{- if .Values.spec.authSecret.password }}
  authSecret:
    name: {{ include "kubedbcom-druid-editor-options.fullname" . }}-auth
{{- end }}
{{- if .Values.spec.configuration }}
  configSecret:
    name: {{ include "kubedbcom-druid-editor-options.fullname" . }}-config
{{- end }}
{{- if .Values.spec.admin.tls.default }}
  tls:
    issuerRef:
      apiGroup: "cert-manager.io"
      kind: ClusterIssuer
      name: {{ .Values.spec.admin.clusterIssuers.default }}
  sslMode: requireSSL
{{- end }}
{{- if (and .Values.spec.admin.monitoring .Values.spec.admin.monitoring.agent) }}
  monitor:
    agent: {{ .Values.spec.admin.monitoring.agent }}
    prometheus:
    {{- with .Values.spec.admin.monitoring.exporter }}
      exporter:
        resources:
          {{- toYaml .resources | nindent 10 }}
    {{- end }}
      serviceMonitor:
        interval: 30s
        labels:
          {{- toYaml .Values.spec.admin.monitoring.serviceMonitor.labels | nindent 10 }}
{{- end }}
