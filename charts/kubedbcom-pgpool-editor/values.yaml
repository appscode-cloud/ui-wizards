form:
  alert:
    additionalRuleLabels: {}
    annotations: {}
    enabled: warning
    groups:
      database:
        enabled: warning
        rules:
          pgpoolBackendErrorMessageCount:
            duration: 0m
            enabled: true
            severity: critical
            val: 10
          pgpoolBackendFatalMessageCount:
            duration: 0m
            enabled: true
            severity: critical
            val: 10
          pgpoolBackendPanicMessageCount:
            duration: 0m
            enabled: true
            severity: critical
            val: 10
          pgpoolDown:
            duration: 0m
            enabled: true
            severity: critical
          pgpoolExporterLastScrapeError:
            duration: 0m
            enabled: true
            severity: warning
          pgpoolLowCacheMemory:
            duration: 1m
            enabled: true
            severity: warning
            val: 100
          pgpoolPostgresHealthCheckFailure:
            duration: 0m
            enabled: true
            severity: critical
            val: 10
          pgpoolTooManyConnections:
            duration: 1m
            enabled: true
            severity: warning
            val: 0.1
      opsManager:
        enabled: warning
        rules:
          opsRequestFailed:
            duration: 0m
            enabled: true
            severity: critical
          opsRequestOnProgress:
            duration: 0m
            enabled: true
            severity: info
          opsRequestStatusProgressingToLong:
            duration: 30m
            enabled: true
            severity: critical
      provisioner:
        enabled: warning
        rules:
          appPhaseCritical:
            duration: 15m
            enabled: true
            severity: warning
          appPhaseNotReady:
            duration: 1m
            enabled: true
            severity: critical
    labels:
      release: prometheus
metadata:
  resource:
    group: kubedb.com
    version: v1alpha2
    name: pgpools
    kind: Pgpool
    scope: Namespaced
  release:
    name: RELEASE-NAME
    namespace: default
resources:
  autoscalingKubedbComPgpoolAutoscaler: # +doc-gen:break
    apiVersion: autoscaling.kubedb.com/v1alpha1
    kind: PgpoolAutoscaler
    metadata:
      name: pgpool
      namespace: demo
    spec:
      compute:
        node:
          maxAllowed:
            cpu: 1
            memory: 2Gi
          minAllowed:
            cpu: 400m
            memory: 400Mi
          podLifeTimeThreshold: 10m
          resourceDiffPercentage: 20
          trigger: "On"
        nodeTopology:
          name: standard-basv2-family
      databaseRef:
        name: repl
      opsRequestOptions:
        apply: IfReady
        timeout: 10m
  catalogAppscodeComPgpoolBinding: # +doc-gen:break
    apiVersion: catalog.appscode.com/v1alpha1
    kind: PgpoolBinding
    metadata:
      name: pgpool
      namespace: demo
    spec:
      sourceRef:
        name: pgpool
        namespace: demo
  certManagerIoIssuer_ca: # +doc-gen:break
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      name: pgpool-ca
      namespace: demo
    spec:
      ca:
        secretName: pgpool-ca
  gitopsKubedbComPgpool: # +doc-gen:break
    apiVersion: gitops.kubedb.com/v1alpha1
    kind: Pgpool
    metadata:
      name: pgpool
      namespace: pool
    spec:
      deletionPolicy: WipeOut
      initConfig:
        pgpoolConfig:
          backend_clustering_mode: streaming_replication
          child_life_time: 300
          child_max_connections: 0
          client_idle_limit: 0
          connection_cache: true
          connection_life_time: 0
          failover_on_backend_error: false
          health_check_period: 0
          load_balance_mode: true
          log_min_messages: warning
          log_per_node_statement: true
          log_statement: true
          max_pool: 100
          memory_cache_enabled: true
          num_init_children: 5
          sr_check_period: 0
          ssl: true
          statement_level_load_balance: true
      podTemplate:
        spec:
          containers:
            - name: pgpool
              resources:
                requests:
                  cpu: 700m
                  memory: 1400Mi
      postgresRef:
        name: ha-postgres
        namespace: demo
      replicas: 3
      serviceTemplates:
        - alias: primary
          spec:
            type: LoadBalancer
      syncUsers: true
      version: 4.5.0
  kubedbComPgpool: # +doc-gen:break
    apiVersion: kubedb.com/v1alpha2
    kind: Pgpool
    metadata:
      name: pgpool
      namespace: pool
    spec:
      deletionPolicy: WipeOut
      initConfig:
        pgpoolConfig:
          backend_clustering_mode: streaming_replication
          child_life_time: 300
          child_max_connections: 0
          client_idle_limit: 0
          connection_cache: true
          connection_life_time: 0
          failover_on_backend_error: false
          health_check_period: 0
          load_balance_mode: true
          log_min_messages: warning
          log_per_node_statement: true
          log_statement: true
          max_pool: 100
          memory_cache_enabled: true
          num_init_children: 5
          sr_check_period: 0
          ssl: true
          statement_level_load_balance: true
      podTemplate:
        spec:
          containers:
            - name: pgpool
              resources:
                requests:
                  cpu: 700m
                  memory: 1400Mi
      postgresRef:
        name: ha-postgres
        namespace: demo
      replicas: 3
      serviceTemplates:
        - alias: primary
          spec:
            type: LoadBalancer
      syncUsers: true
      version: 4.5.0
  monitoringCoreosComServiceMonitor: # +doc-gen:break
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: pgpool
      namespace: demo
    spec:
      endpoints:
        - honorLabels: true
          interval: 30s
          path: /metrics
          port: metrics
      namespaceSelector:
        matchNames:
          - demo
      selector:
        matchLabels:
          app.kubernetes.io/instance: pgpool
          app.kubernetes.io/name: pgpools.kubedb.com
  secret_auth: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: pgpool-auth
      namespace: demo
    stringData:
      password: thisIs1StrongPassword
      username: root
    type: Opaque
  secret_config: # +doc-gen:break
    apiVersion: v1
    kind: Secret
    metadata:
      name: pgpool-config
      namespace: demo
    stringData:
      pgpool.cnf: |
        [mysqld]
        max_connections = 200
        read_buffer_size = 1048576
    type: Opaque
