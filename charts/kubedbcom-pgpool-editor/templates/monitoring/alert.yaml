{{ $app := (include "kubedbcom-pgpool-editor.fullname" .) }}

{{ if (include "kubedbcom-pgpool-editor.alertsEnabled" .Values.form.alert.enabled) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $app }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "kubedbcom-pgpool-editor.selectorLabels" . | nindent 4 }}
{{- if .Values.form.alert.labels }}
    {{- toYaml .Values.form.alert.labels | nindent 4 }}
{{- end }}
{{- if .Values.form.alert.annotations }}
  annotations:
    {{- toYaml .Values.form.alert.annotations | nindent 4 }}
{{- end }}
spec:
  groups:
  {{ with .Values.form.alert.groups.database -}}
  {{ if (include "kubedbcom-pgpool-editor.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: pgpool.database.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.pgpoolTooManyConnections.enabled .rules.pgpoolTooManyConnections.severity)) -}}
    - alert: PgpoolTooManyConnections
      expr: (sum by (pod) (pgpool2_backend_by_process_total{namespace="{{ $.Release.Namespace }}",job="{{ $app }}-stats"}) / sum by (pod) (pgpool2_backend_total{namespace="{{ $.Release.Namespace }}",job="{{ $app }}-stats"})) > {{ .rules.pgpoolTooManyConnections.val }}
      for: {{ .rules.pgpoolTooManyConnections.duration }}
      labels:
        severity: {{ .rules.pgpoolTooManyConnections.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Pgpool too many connection usage (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "Pgpool {{`{{`}} $labels.pod {{`}}`}} high connection usage\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.pgpoolPostgresHealthCheckFailure.enabled .rules.pgpoolPostgresHealthCheckFailure.severity)) -}}
    - alert: PgpoolPostgresHealthCheckFailure
      expr: pgpool2_pool_health_check_stats_fail_count{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} > {{ .rules.pgpoolPostgresHealthCheckFailure.val }}
      for: {{ .rules.pgpoolPostgresHealthCheckFailure.duration }}
      labels:
        severity: {{ .rules.pgpoolPostgresHealthCheckFailure.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Pgpool health check failed for backend PostgreSQL  (instance {{`{{`}} $labels.pod {{`}}`}}  {{`{{`}} $labels.role {{`}}`}})
        description: "Pgpool {{`{{`}} $labels.pod {{`}}`}}  health check failure for backend PosgreSQL {{`{{`}} $labels.role {{`}}`}} server\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.pgpoolExporterLastScrapeError.enabled .rules.pgpoolExporterLastScrapeError.severity)) -}}
    - alert: PgpoolExporterLastScrapeError
      expr: pgpool2_last_scrape_error{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} > 0
      for: {{ .rules.pgpoolExporterLastScrapeError.duration }}
      labels:
        severity: {{ .rules.pgpoolExporterLastScrapeError.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Pgpool exporter error (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "Pgpool exporter is showing errors.\n  {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.pgpoolBackendPanicMessageCount.enabled .rules.pgpoolBackendPanicMessageCount.severity)) -}}
    - alert: PgpoolBackendPanicMessageCount
      expr: pgpool2_pool_backend_stats_panic_cnt{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} > {{ .rules.pgpoolBackendPanicMessageCount.val }}
      for: {{ .rules.pgpoolBackendPanicMessageCount.duration }}
      labels:
        severity: {{ .rules.pgpoolBackendPanicMessageCount.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Pgpool backend panic message (instance {{`{{`}} $labels.pod {{`}}`}}  {{`{{`}} $labels.role {{`}}`}})
        description: "Panic messages returned from postgres backend {{`{{`}} $labels.role {{`}}`}} of pgpool {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.pgpoolBackendFatalMessageCount.enabled .rules.pgpoolBackendFatalMessageCount.severity)) -}}
    - alert: PgpoolBackendFatalMessageCount
      expr: pgpool2_pool_backend_stats_fatal_cnt{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} > {{ .rules.pgpoolBackendFatalMessageCount.val }}
      for: {{ .rules.pgpoolBackendPanicMessageCount.duration }}
      labels:
        severity: {{ .rules.pgpoolBackendFatalMessageCount.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Pgpool backend fatal message (instance {{`{{`}} $labels.pod {{`}}`}}  {{`{{`}} $labels.role {{`}}`}})
        description: "Fatal messages returned from postgres backend {{`{{`}} $labels.role {{`}}`}} of pgpool {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.pgpoolBackendErrorMessageCount.enabled .rules.pgpoolBackendErrorMessageCount.severity)) -}}
    - alert: PgpoolBackendErrorMessageCount
      expr: pgpool2_pool_backend_stats_error_cnt{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} > {{ .rules.pgpoolBackendErrorMessageCount.val }}
      for: {{ .rules.pgpoolBackendErrorMessageCount.duration }}
      labels:
        severity: {{ .rules.pgpoolBackendErrorMessageCount.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Pgpool backend error message (instance {{`{{`}} $labels.pod {{`}}`}}  {{`{{`}} $labels.role {{`}}`}})
        description: "Error messages returned from postgres backend {{`{{`}} $labels.role {{`}}`}} of pgpool {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.pgpoolLowCacheMemory.enabled .rules.pgpoolLowCacheMemory.severity)) -}}
    - alert: PgpoolLowCacheMemory
      expr: pgpool2_pool_cache_free_cache_entries_size{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"} / 1000000 < {{ .rules.pgpoolLowCacheMemory.val }}
      for: {{ .rules.pgpoolLowCacheMemory.duration }}
      labels:
        severity: {{ .rules.pgpoolLowCacheMemory.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Low cache memory (instance {{`{{`}} $labels.pod {{`}}`}}
        description: "Pgpool have low cache memory remaining {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.pgpoolDown.enabled .rules.pgpoolDown.severity)) -}}
    - alert: PgpoolDown
      expr: pgpool2_up{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"} == 0
      for: {{ .rules.pgpoolDown.duration }}
      labels:
        severity: {{ .rules.pgpoolDown.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Pgpool instance down (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "Pgpool instance is down {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{end -}}
  {{end -}}


  {{ with .Values.form.alert.groups.provisioner -}}
  {{ if (include "kubedbcom-pgpool-editor.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: pgpool.provisioner.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseNotReady.enabled .rules.appPhaseNotReady.severity)) -}}
    - alert: KubeDBPgpoolPhaseNotReady
      expr: kubedb_com_pgpool_status_phase{phase="NotReady",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.appPhaseNotReady.duration }}
      labels:
        severity: {{ .rules.appPhaseNotReady.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB Pgpool Phase NotReady (pgpool {{`{{`}} $labels.pgpool {{`}}`}})
        description: "KubeDB Pgpool Phase not ready on {{`{{`}} $labels.pgpool {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "kubedbcom-pgpool-editor.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseCritical.enabled .rules.appPhaseCritical.severity)) -}}
    - alert: KubeDBPgpoolPhaseCritical
      expr: kubedb_com_pgpool_status_phase{phase="Critical",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.appPhaseCritical.duration }}
      labels:
        severity: {{ .rules.appPhaseCritical.severity }}
        {{- include "kubedbcom-pgpool-editor.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB Pgpool Phase Critical (pgpool {{`{{`}} $labels.pgpool {{`}}`}})
        description: "KubeDB Pgpool Phase Critical {{`{{`}} $labels.pgpool {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}

{{ end }}
