name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Prepare Host
        run: |
          sudo apt-get -qq update || true
          sudo apt-get install -y bzr
          # install yq
          curl -fsSL -o yqq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yqq
          sudo mv yqq /usr/local/bin/yqq
          pip3 install yq
          # install kubectl
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.1/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Install uibuilder-schema-checker
        run: |
          curl -fsSL -o uibuilder-schema-checker https://github.com/kmodules/uibuilder-schema-checker/releases/download/v0.0.1/uibuilder-schema-checker-linux-amd64
          chmod +x uibuilder-schema-checker
          sudo mv ./uibuilder-schema-checker /usr/local/bin/uibuilder-schema-checker

      - name: Run checks
        run: |
          make ci
          uibuilder-schema-checker --wizard-dir=./charts

  kubernetes:
    name: Kubernetes
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        k8s: [v1.16.15, v1.18.19, v1.19.11, v1.20.7, v1.21.2, v1.22.4, v1.23.3]
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Create Kubernetes ${{ matrix.k8s }} cluster
        id: kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1
          image: kindest/node:${{ matrix.k8s }}

      - name: Prepare cluster for testing
        id: local-path
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          USERNAME: 1gtm
          REGISTRY_SECRET: regcred
        run: |
          echo "waiting for nodes to be ready ..."
          kubectl wait --for=condition=Ready nodes --all --timeout=5m
          kubectl get nodes
          echo
          echo "install helm 3"
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          echo
          echo "create docker-registry secret"
          kubectl create secret docker-registry ${REGISTRY_SECRET} --namespace=kube-system --docker-server=https://index.docker.io/v1/ --docker-username=${USERNAME} --docker-password=${DOCKER_TOKEN}

      - name: Test charts
        run: |
          export KUBECONFIG="$HOME/.kube/config"
          kubectl create ns demo
          ./hack/scripts/ct.sh
          echo
          kubectl delete crds --all
